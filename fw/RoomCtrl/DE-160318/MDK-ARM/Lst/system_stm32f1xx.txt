; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\de-160318\system_stm32f1xx.o --asm_dir=.\Lst\ --list_dir=.\Lst\ --depend=.\de-160318\system_stm32f1xx.d --feedback=.\DE-160318\DE-160318.fed --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931 -I../Inc -I../Drivers/STM32F1xx_HAL_Driver/Inc -I../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy -I../Drivers/CMSIS/Device/ST/STM32F1xx/Include -I.\RTE\_DE-160318 -IC:\Keil\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=526 -D_RTE_ -DSTM32F10X_MD -DUSE_HAL_DRIVER -DSTM32F103xB --omf_browse=.\de-160318\system_stm32f1xx.crf ../Drivers/CMSIS/Device/ST/STM32F1xx/Source/Templates/system_stm32f1xx.c]
                          THUMB

                          AREA ||i.SystemCoreClockUpdate||, CODE, READONLY, ALIGN=2

                  SystemCoreClockUpdate PROC
;;;262      */
;;;263    void SystemCoreClockUpdate (void)
000000  4914              LDR      r1,|L1.84|
;;;264    {
000002  b510              PUSH     {r4,lr}
;;;265      uint32_t tmp = 0, pllmull = 0, pllsource = 0;
;;;266    
;;;267    #if defined(STM32F105xC) || defined(STM32F107xC)
;;;268      uint32_t prediv1source = 0, prediv1factor = 0, prediv2factor = 0, pll2mull = 0;
;;;269    #endif /* STM32F105xC */
;;;270    
;;;271    #if defined(STM32F100xB) || defined(STM32F100xE)
;;;272      uint32_t prediv1factor = 0;
;;;273    #endif /* STM32F100xB or STM32F100xE */
;;;274        
;;;275      /* Get SYSCLK source -------------------------------------------------------*/
;;;276      tmp = RCC->CFGR & RCC_CFGR_SWS;
000004  6848              LDR      r0,[r1,#4]
;;;277      
;;;278      switch (tmp)
;;;279      {
;;;280        case 0x00:  /* HSI used as system clock */
;;;281          SystemCoreClock = HSI_VALUE;
000006  4a14              LDR      r2,|L1.88|
000008  f010030c          ANDS     r3,r0,#0xc            ;276
00000c  4813              LDR      r0,|L1.92|
00000e  d003              BEQ      |L1.24|
000010  2b04              CMP      r3,#4                 ;278
000012  d001              BEQ      |L1.24|
000014  2b08              CMP      r3,#8                 ;278
000016  d009              BEQ      |L1.44|
                  |L1.24|
;;;282          break;
;;;283        case 0x04:  /* HSE used as system clock */
;;;284          SystemCoreClock = HSE_VALUE;
;;;285          break;
;;;286        case 0x08:  /* PLL used as system clock */
;;;287    
;;;288          /* Get PLL clock source and multiplication factor ----------------------*/
;;;289          pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
;;;290          pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
;;;291          
;;;292    #if !defined(STM32F105xC) && !defined(STM32F107xC)      
;;;293          pllmull = ( pllmull >> 18) + 2;
;;;294          
;;;295          if (pllsource == 0x00)
;;;296          {
;;;297            /* HSI oscillator clock divided by 2 selected as PLL clock entry */
;;;298            SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
;;;299          }
;;;300          else
;;;301          {
;;;302     #if defined(STM32F100xB) || defined(STM32F100xE)
;;;303           prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
;;;304           /* HSE oscillator clock selected as PREDIV1 clock entry */
;;;305           SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; 
;;;306     #else
;;;307            /* HSE selected as PLL clock entry */
;;;308            if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
;;;309            {/* HSE oscillator clock divided by 2 */
;;;310              SystemCoreClock = (HSE_VALUE >> 1) * pllmull;
;;;311            }
;;;312            else
;;;313            {
;;;314              SystemCoreClock = HSE_VALUE * pllmull;
;;;315            }
;;;316     #endif
;;;317          }
;;;318    #else
;;;319          pllmull = pllmull >> 18;
;;;320          
;;;321          if (pllmull != 0x0D)
;;;322          {
;;;323             pllmull += 2;
;;;324          }
;;;325          else
;;;326          { /* PLL multiplication factor = PLL input clock * 6.5 */
;;;327            pllmull = 13 / 2; 
;;;328          }
;;;329                
;;;330          if (pllsource == 0x00)
;;;331          {
;;;332            /* HSI oscillator clock divided by 2 selected as PLL clock entry */
;;;333            SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
;;;334          }
;;;335          else
;;;336          {/* PREDIV1 selected as PLL clock entry */
;;;337            
;;;338            /* Get PREDIV1 clock source and division factor */
;;;339            prediv1source = RCC->CFGR2 & RCC_CFGR2_PREDIV1SRC;
;;;340            prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
;;;341            
;;;342            if (prediv1source == 0)
;;;343            { 
;;;344              /* HSE oscillator clock selected as PREDIV1 clock entry */
;;;345              SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull;          
;;;346            }
;;;347            else
;;;348            {/* PLL2 clock selected as PREDIV1 clock entry */
;;;349              
;;;350              /* Get PREDIV2 division factor and PLL2 multiplication factor */
;;;351              prediv2factor = ((RCC->CFGR2 & RCC_CFGR2_PREDIV2) >> 4) + 1;
;;;352              pll2mull = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> 8 ) + 2; 
;;;353              SystemCoreClock = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor) * pllmull;                         
;;;354            }
;;;355          }
;;;356    #endif /* STM32F105xC */ 
;;;357          break;
;;;358    
;;;359        default:
;;;360          SystemCoreClock = HSI_VALUE;
;;;361          break;
;;;362      }
;;;363      
;;;364      /* Compute HCLK clock frequency ----------------*/
;;;365      /* Get HCLK prescaler */
;;;366      tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
000018  6002              STR      r2,[r0,#0]  ; SystemCoreClock
00001a  6849              LDR      r1,[r1,#4]
00001c  4a10              LDR      r2,|L1.96|
00001e  f3c11103          UBFX     r1,r1,#4,#4
000022  5c51              LDRB     r1,[r2,r1]
;;;367      /* HCLK clock frequency */
;;;368      SystemCoreClock >>= tmp;  
000024  6802              LDR      r2,[r0,#0]  ; SystemCoreClock
000026  40ca              LSRS     r2,r2,r1
000028  6002              STR      r2,[r0,#0]  ; SystemCoreClock
;;;369    }
00002a  bd10              POP      {r4,pc}
                  |L1.44|
00002c  684a              LDR      r2,[r1,#4]            ;289
00002e  684b              LDR      r3,[r1,#4]            ;290
000030  f4021270          AND      r2,r2,#0x3c0000       ;289
000034  f04f0402          MOV      r4,#2                 ;293
000038  f4133f80          TST      r3,#0x10000           ;290
00003c  eb044292          ADD      r2,r4,r2,LSR #18      ;293
000040  d002              BEQ      |L1.72|
000042  684b              LDR      r3,[r1,#4]            ;308
000044  039b              LSLS     r3,r3,#14             ;308
000046  d501              BPL      |L1.76|
                  |L1.72|
000048  4b06              LDR      r3,|L1.100|
00004a  e000              B        |L1.78|
                  |L1.76|
00004c  4b02              LDR      r3,|L1.88|
                  |L1.78|
00004e  435a              MULS     r2,r3,r2              ;310
000050  e7e2              B        |L1.24|
;;;370    
                          ENDP

000052  0000              DCW      0x0000
                  |L1.84|
                          DCD      0x40021000
                  |L1.88|
                          DCD      0x007a1200
                  |L1.92|
                          DCD      ||.data||
                  |L1.96|
                          DCD      ||.constdata||
                  |L1.100|
                          DCD      0x003d0900

                          AREA ||i.SystemInit||, CODE, READONLY, ALIGN=2

                  SystemInit PROC
;;;172      */
;;;173    void SystemInit (void)
000000  480d              LDR      r0,|L2.56|
;;;174    {
;;;175      /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
;;;176      /* Set HSION bit */
;;;177      RCC->CR |= (uint32_t)0x00000001;
000002  6801              LDR      r1,[r0,#0]
000004  f0410101          ORR      r1,r1,#1
000008  6001              STR      r1,[r0,#0]
;;;178    
;;;179      /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
;;;180    #if !defined(STM32F105xC) && !defined(STM32F107xC)
;;;181      RCC->CFGR &= (uint32_t)0xF8FF0000;
00000a  6841              LDR      r1,[r0,#4]
00000c  4a0b              LDR      r2,|L2.60|
00000e  4011              ANDS     r1,r1,r2
000010  6041              STR      r1,[r0,#4]
;;;182    #else
;;;183      RCC->CFGR &= (uint32_t)0xF0FF0000;
;;;184    #endif /* STM32F105xC */   
;;;185      
;;;186      /* Reset HSEON, CSSON and PLLON bits */
;;;187      RCC->CR &= (uint32_t)0xFEF6FFFF;
000012  6801              LDR      r1,[r0,#0]
000014  4a0a              LDR      r2,|L2.64|
000016  4011              ANDS     r1,r1,r2
000018  6001              STR      r1,[r0,#0]
;;;188    
;;;189      /* Reset HSEBYP bit */
;;;190      RCC->CR &= (uint32_t)0xFFFBFFFF;
00001a  6801              LDR      r1,[r0,#0]
00001c  f4212180          BIC      r1,r1,#0x40000
000020  6001              STR      r1,[r0,#0]
;;;191    
;;;192      /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
;;;193      RCC->CFGR &= (uint32_t)0xFF80FFFF;
000022  6841              LDR      r1,[r0,#4]
000024  f42101fe          BIC      r1,r1,#0x7f0000
000028  6041              STR      r1,[r0,#4]
;;;194    
;;;195    #if defined(STM32F105xC) || defined(STM32F107xC)
;;;196      /* Reset PLL2ON and PLL3ON bits */
;;;197      RCC->CR &= (uint32_t)0xEBFFFFFF;
;;;198    
;;;199      /* Disable all interrupts and clear pending bits  */
;;;200      RCC->CIR = 0x00FF0000;
;;;201    
;;;202      /* Reset CFGR2 register */
;;;203      RCC->CFGR2 = 0x00000000;
;;;204    #elif defined(STM32F100xB) || defined(STM32F100xE)
;;;205      /* Disable all interrupts and clear pending bits  */
;;;206      RCC->CIR = 0x009F0000;
;;;207    
;;;208      /* Reset CFGR2 register */
;;;209      RCC->CFGR2 = 0x00000000;      
;;;210    #else
;;;211      /* Disable all interrupts and clear pending bits  */
;;;212      RCC->CIR = 0x009F0000;
00002a  f44f011f          MOV      r1,#0x9f0000
00002e  6081              STR      r1,[r0,#8]
;;;213    #endif /* STM32F105xC */
;;;214        
;;;215    #if defined(STM32F100xE) || defined(STM32F101xE) || defined(STM32F101xG) || defined(STM32F103xE) || defined(STM32F103xG)
;;;216      #ifdef DATA_IN_ExtSRAM
;;;217        SystemInit_ExtMemCtl(); 
;;;218      #endif /* DATA_IN_ExtSRAM */
;;;219    #endif 
;;;220    
;;;221    #ifdef VECT_TAB_SRAM
;;;222      SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
;;;223    #else
;;;224      SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
000030  4904              LDR      r1,|L2.68|
000032  03c0              LSLS     r0,r0,#15
000034  6008              STR      r0,[r1,#0]
;;;225    #endif 
;;;226    }
000036  4770              BX       lr
;;;227    
                          ENDP

                  |L2.56|
                          DCD      0x40021000
                  |L2.60|
                          DCD      0xf8ff0000
                  |L2.64|
                          DCD      0xfef6ffff
                  |L2.68|
                          DCD      0xe000ed08

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  AHBPrescTable
000000  00000000          DCB      0x00,0x00,0x00,0x00
000004  00000000          DCB      0x00,0x00,0x00,0x00
000008  01020304          DCB      0x01,0x02,0x03,0x04
00000c  06070809          DCB      0x06,0x07,0x08,0x09

                          AREA ||.data||, DATA, ALIGN=2

                  SystemCoreClock
                          DCD      0x03d09000

;*** Start embedded assembler ***

#line 1 "../Drivers/CMSIS/Device/ST/STM32F1xx/Source/Templates/system_stm32f1xx.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f1xx_c_5d646a67____REV16|
#line 463 "C:\\Keil\\ARM\\PACK\\ARM\\CMSIS\\5.4.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___18_system_stm32f1xx_c_5d646a67____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f1xx_c_5d646a67____REVSH|
#line 478
|__asm___18_system_stm32f1xx_c_5d646a67____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f1xx_c_5d646a67____RRX|
#line 665
|__asm___18_system_stm32f1xx_c_5d646a67____RRX| PROC
#line 666

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
