; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\de-170318\eeprom.o --asm_dir=.\Lst\ --list_dir=.\Lst\ --depend=.\de-170318\eeprom.d --cpu=Cortex-M3 --apcs=interwork -O1 --diag_suppress=9931 -I..\Inc -I..\Drivers\STM32F1xx_HAL_Driver\Inc -I..\Drivers\STM32F1xx_HAL_Driver\Inc\Legacy -I..\Drivers\CMSIS\Device\ST\STM32F1xx\Include -I.\RTE\_DE-170318 -IC:\Keil\ARM\PACK\ARM\CMSIS\5.0.0\CMSIS\Include -IC:\Keil\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=526 -D_RTE_ -DSTM32F10X_MD -DUSE_HAL_DRIVER -DSTM32F103xB --omf_browse=.\de-170318\eeprom.crf ..\Src\eeprom.c]
                          THUMB

                          AREA ||i.SPI_FLASH_Erase||, CODE, READONLY, ALIGN=2

                  SPI_FLASH_Erase PROC
;;;220    
;;;221    void SPI_FLASH_Erase(uint32_t address, uint8_t erase_type)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;222    {
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
;;;223        SPI_FLASH_WriteEnable();
000008  f7fffffe          BL       SPI_FLASH_WriteEnable
;;;224        FLASH_CS_Low();
00000c  4f19              LDR      r7,|L1.116|
00000e  f44f5680          MOV      r6,#0x1000
000012  2200              MOVS     r2,#0
000014  4631              MOV      r1,r6
000016  4638              MOV      r0,r7
000018  f7fffffe          BL       HAL_GPIO_WritePin
;;;225        spi_buff[0] = erase_type;
00001c  4816              LDR      r0,|L1.120|
00001e  7004              STRB     r4,[r0,#0]
;;;226        spi_buff[1] = address >> 16U;
000020  0c29              LSRS     r1,r5,#16
000022  7041              STRB     r1,[r0,#1]
;;;227        spi_buff[2] = address >> 8U;
000024  0a29              LSRS     r1,r5,#8
000026  7081              STRB     r1,[r0,#2]
;;;228        spi_buff[3] = address;
000028  70c5              STRB     r5,[r0,#3]
;;;229        
;;;230        if((erase_type  == SPI_FLASH_CHIP_ERASE) || (erase_type  == SPI_FLASH_CHIP_ERASE_2))
;;;231    	{
;;;232            if (HAL_SPI_Transmit(&hspi2, spi_buff, 1U, SPI_FLASH_TIMEOUT) != HAL_OK) Error_Handler();      
00002a  f44f73fa          MOV      r3,#0x1f4
00002e  2c60              CMP      r4,#0x60              ;230
000030  d008              BEQ      |L1.68|
000032  2cc7              CMP      r4,#0xc7              ;230
000034  d006              BEQ      |L1.68|
;;;233        }
;;;234    	else if ((erase_type  == SPI_FLASH_4K_BLOCK_ERASE) || (erase_type  == SPI_FLASH_32K_BLOCK_ERASE) || (erase_type  == SPI_FLASH_64K_BLOCK_ERASE))
000036  2c20              CMP      r4,#0x20
000038  d00d              BEQ      |L1.86|
00003a  2c52              CMP      r4,#0x52
00003c  d00b              BEQ      |L1.86|
00003e  2cd8              CMP      r4,#0xd8
000040  d009              BEQ      |L1.86|
000042  e010              B        |L1.102|
                  |L1.68|
000044  2201              MOVS     r2,#1                 ;232
000046  490c              LDR      r1,|L1.120|
000048  480c              LDR      r0,|L1.124|
00004a  f7fffffe          BL       HAL_SPI_Transmit
00004e  b150              CBZ      r0,|L1.102|
000050  f7fffffe          BL       Error_Handler
000054  e007              B        |L1.102|
                  |L1.86|
;;;235    	{
;;;236            if (HAL_SPI_Transmit(&hspi2, spi_buff, 4U, SPI_FLASH_TIMEOUT) != HAL_OK) Error_Handler(); 
000056  2204              MOVS     r2,#4
000058  4907              LDR      r1,|L1.120|
00005a  4808              LDR      r0,|L1.124|
00005c  f7fffffe          BL       HAL_SPI_Transmit
000060  b108              CBZ      r0,|L1.102|
000062  f7fffffe          BL       Error_Handler
                  |L1.102|
;;;237        }
;;;238        
;;;239        FLASH_CS_High();
000066  4631              MOV      r1,r6
000068  4638              MOV      r0,r7
00006a  e8bd41f0          POP      {r4-r8,lr}
00006e  2201              MOVS     r2,#1
000070  f7ffbffe          B.W      HAL_GPIO_WritePin
;;;240    }
;;;241    
                          ENDP

                  |L1.116|
                          DCD      0x40010c00
                  |L1.120|
                          DCD      ||.data||
                  |L1.124|
                          DCD      hspi2

                          AREA ||i.SPI_FLASH_ReadByte||, CODE, READONLY, ALIGN=2

                  SPI_FLASH_ReadByte PROC
;;;38     /* Program code   ------------------------------------------------------------*/
;;;39     uint8_t SPI_FLASH_ReadByte(uint32_t address)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;40     {
000004  4605              MOV      r5,r0
;;;41         FLASH_CS_Low();
000006  4f17              LDR      r7,|L2.100|
000008  f44f5680          MOV      r6,#0x1000
00000c  2200              MOVS     r2,#0
00000e  4631              MOV      r1,r6
000010  4638              MOV      r0,r7
000012  f7fffffe          BL       HAL_GPIO_WritePin
;;;42         spi_buff[0] = SPI_FLASH_READ;
000016  4c14              LDR      r4,|L2.104|
000018  2003              MOVS     r0,#3
00001a  7020              STRB     r0,[r4,#0]
;;;43         spi_buff[1] = address >> 16U;
00001c  0c28              LSRS     r0,r5,#16
00001e  7060              STRB     r0,[r4,#1]
;;;44         spi_buff[2] = address >> 8U;
000020  0a28              LSRS     r0,r5,#8
000022  70a0              STRB     r0,[r4,#2]
;;;45         spi_buff[3] = address & 0xFFU;
000024  70e5              STRB     r5,[r4,#3]
;;;46         spi_buff[4] = 0U;
000026  2000              MOVS     r0,#0
000028  7120              STRB     r0,[r4,#4]
;;;47         if (HAL_SPI_Transmit(&hspi2, spi_buff, 4U, SPI_FLASH_TIMEOUT) != HAL_OK) Error_Handler();
00002a  f44f75fa          MOV      r5,#0x1f4
00002e  462b              MOV      r3,r5
000030  2204              MOVS     r2,#4
000032  4621              MOV      r1,r4
000034  480d              LDR      r0,|L2.108|
000036  f7fffffe          BL       HAL_SPI_Transmit
00003a  b108              CBZ      r0,|L2.64|
00003c  f7fffffe          BL       Error_Handler
                  |L2.64|
;;;48         if (HAL_SPI_Receive(&hspi2, &spi_buff[4], 1U, SPI_FLASH_TIMEOUT) != HAL_OK) Error_Handler();
000040  462b              MOV      r3,r5
000042  2201              MOVS     r2,#1
000044  1d21              ADDS     r1,r4,#4
000046  4809              LDR      r0,|L2.108|
000048  f7fffffe          BL       HAL_SPI_Receive
00004c  b108              CBZ      r0,|L2.82|
00004e  f7fffffe          BL       Error_Handler
                  |L2.82|
;;;49         FLASH_CS_High();
000052  2201              MOVS     r2,#1
000054  4631              MOV      r1,r6
000056  4638              MOV      r0,r7
000058  f7fffffe          BL       HAL_GPIO_WritePin
;;;50         return (spi_buff[4]);
00005c  7920              LDRB     r0,[r4,#4]  ; spi_buff
;;;51     }
00005e  e8bd81f0          POP      {r4-r8,pc}
;;;52     
                          ENDP

000062  0000              DCW      0x0000
                  |L2.100|
                          DCD      0x40010c00
                  |L2.104|
                          DCD      ||.data||
                  |L2.108|
                          DCD      hspi2

                          AREA ||i.SPI_FLASH_ReadDeviceInfo||, CODE, READONLY, ALIGN=2

                  SPI_FLASH_ReadDeviceInfo PROC
;;;254    
;;;255    static uint8_t SPI_FLASH_ReadDeviceInfo(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;256    {
;;;257    	FLASH_CS_Low();
000004  4e1b              LDR      r6,|L3.116|
000006  f44f5580          MOV      r5,#0x1000
00000a  2200              MOVS     r2,#0
00000c  4629              MOV      r1,r5
00000e  4630              MOV      r0,r6
000010  f7fffffe          BL       HAL_GPIO_WritePin
;;;258    	spi_buff[0] = SPI_FLASH_JEDEC_ID;
000014  4c18              LDR      r4,|L3.120|
000016  209f              MOVS     r0,#0x9f
000018  7020              STRB     r0,[r4,#0]
;;;259        spi_buff[1] = 0U;
00001a  2100              MOVS     r1,#0
00001c  7061              STRB     r1,[r4,#1]
;;;260        spi_buff[2] = 0U;
00001e  70a1              STRB     r1,[r4,#2]
;;;261        spi_buff[3] = 0U;
000020  70e1              STRB     r1,[r4,#3]
;;;262    	if (HAL_SPI_Transmit(&hspi2, spi_buff, 1U, SPI_FLASH_TIMEOUT) != HAL_OK) Error_Handler();
000022  f44f77fa          MOV      r7,#0x1f4
000026  463b              MOV      r3,r7
000028  2201              MOVS     r2,#1
00002a  4621              MOV      r1,r4
00002c  4813              LDR      r0,|L3.124|
00002e  f7fffffe          BL       HAL_SPI_Transmit
000032  b108              CBZ      r0,|L3.56|
000034  f7fffffe          BL       Error_Handler
                  |L3.56|
;;;263    	if (HAL_SPI_Receive(&hspi2, &spi_buff[1], 3U, SPI_FLASH_TIMEOUT) != HAL_OK) Error_Handler();
000038  463b              MOV      r3,r7
00003a  2203              MOVS     r2,#3
00003c  1c61              ADDS     r1,r4,#1
00003e  480f              LDR      r0,|L3.124|
000040  f7fffffe          BL       HAL_SPI_Receive
000044  b108              CBZ      r0,|L3.74|
000046  f7fffffe          BL       Error_Handler
                  |L3.74|
;;;264    	FLASH_CS_High();
00004a  2201              MOVS     r2,#1
00004c  4629              MOV      r1,r5
00004e  4630              MOV      r0,r6
000050  f7fffffe          BL       HAL_GPIO_WritePin
;;;265    	if (((spi_buff[1] << 16U) + (spi_buff[2] << 8U) + spi_buff[3]) == SPI_FLASH_MANUFACTURER_WINBOND) return(1U);
000054  7860              LDRB     r0,[r4,#1]  ; spi_buff
000056  78a1              LDRB     r1,[r4,#2]  ; spi_buff
000058  0400              LSLS     r0,r0,#16
00005a  eb002001          ADD      r0,r0,r1,LSL #8
00005e  78e1              LDRB     r1,[r4,#3]  ; spi_buff
000060  4408              ADD      r0,r0,r1
000062  4907              LDR      r1,|L3.128|
000064  4288              CMP      r0,r1
000066  d102              BNE      |L3.110|
000068  2001              MOVS     r0,#1
                  |L3.106|
;;;266    	else return(0U);
;;;267    }
00006a  e8bd81f0          POP      {r4-r8,pc}
                  |L3.110|
00006e  2000              MOVS     r0,#0                 ;266
000070  e7fb              B        |L3.106|
;;;268    
                          ENDP

000072  0000              DCW      0x0000
                  |L3.116|
                          DCD      0x40010c00
                  |L3.120|
                          DCD      ||.data||
                  |L3.124|
                          DCD      hspi2
                  |L3.128|
                          DCD      0x00ef4017

                          AREA ||i.SPI_FLASH_ReadInt||, CODE, READONLY, ALIGN=2

                  SPI_FLASH_ReadInt PROC
;;;67     
;;;68     uint16_t SPI_FLASH_ReadInt(uint32_t address)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;69     {
000004  4605              MOV      r5,r0
;;;70         uint16_t data;
;;;71     
;;;72         FLASH_CS_Low();
000006  4f19              LDR      r7,|L4.108|
000008  f44f5680          MOV      r6,#0x1000
00000c  2200              MOVS     r2,#0
00000e  4631              MOV      r1,r6
000010  4638              MOV      r0,r7
000012  f7fffffe          BL       HAL_GPIO_WritePin
;;;73         spi_buff[0] = SPI_FLASH_READ;
000016  4c16              LDR      r4,|L4.112|
000018  2003              MOVS     r0,#3
00001a  7020              STRB     r0,[r4,#0]
;;;74         spi_buff[1] = address >> 16U;
00001c  0c28              LSRS     r0,r5,#16
00001e  7060              STRB     r0,[r4,#1]
;;;75         spi_buff[2] = address >> 8U;
000020  0a28              LSRS     r0,r5,#8
000022  70a0              STRB     r0,[r4,#2]
;;;76         spi_buff[3] = address & 0xFFU;
000024  70e5              STRB     r5,[r4,#3]
;;;77         spi_buff[4] = 0U;
000026  2000              MOVS     r0,#0
000028  7120              STRB     r0,[r4,#4]
;;;78         spi_buff[5] = 0U;
00002a  7160              STRB     r0,[r4,#5]
;;;79         if (HAL_SPI_Transmit(&hspi2, spi_buff, 4U, SPI_FLASH_TIMEOUT) != HAL_OK) Error_Handler();
00002c  f44f75fa          MOV      r5,#0x1f4
000030  462b              MOV      r3,r5
000032  2204              MOVS     r2,#4
000034  4621              MOV      r1,r4
000036  480f              LDR      r0,|L4.116|
000038  f7fffffe          BL       HAL_SPI_Transmit
00003c  b108              CBZ      r0,|L4.66|
00003e  f7fffffe          BL       Error_Handler
                  |L4.66|
;;;80         if (HAL_SPI_Receive(&hspi2, &spi_buff[4], 2U, SPI_FLASH_TIMEOUT) != HAL_OK) Error_Handler();
000042  462b              MOV      r3,r5
000044  2202              MOVS     r2,#2
000046  1d21              ADDS     r1,r4,#4
000048  480a              LDR      r0,|L4.116|
00004a  f7fffffe          BL       HAL_SPI_Receive
00004e  b108              CBZ      r0,|L4.84|
000050  f7fffffe          BL       Error_Handler
                  |L4.84|
;;;81         FLASH_CS_High();
000054  2201              MOVS     r2,#1
000056  4631              MOV      r1,r6
000058  4638              MOV      r0,r7
00005a  f7fffffe          BL       HAL_GPIO_WritePin
;;;82         data = (spi_buff[4] << 8U) + spi_buff[5];
00005e  7960              LDRB     r0,[r4,#5]  ; spi_buff
000060  7921              LDRB     r1,[r4,#4]  ; spi_buff
000062  eb002001          ADD      r0,r0,r1,LSL #8
000066  b280              UXTH     r0,r0
;;;83         return (data);
;;;84     }
000068  e8bd81f0          POP      {r4-r8,pc}
;;;85     
                          ENDP

                  |L4.108|
                          DCD      0x40010c00
                  |L4.112|
                          DCD      ||.data||
                  |L4.116|
                          DCD      hspi2

                          AREA ||i.SPI_FLASH_ReadPage||, CODE, READONLY, ALIGN=2

                  SPI_FLASH_ReadPage PROC
;;;139    
;;;140    void SPI_FLASH_ReadPage(uint32_t address, uint8_t *data, uint16_t size)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;141    {
000004  4604              MOV      r4,r0
000006  460f              MOV      r7,r1
000008  4690              MOV      r8,r2
;;;142        FLASH_CS_Low();
00000a  4e15              LDR      r6,|L5.96|
00000c  f44f5580          MOV      r5,#0x1000
000010  2200              MOVS     r2,#0
000012  4629              MOV      r1,r5
000014  4630              MOV      r0,r6
000016  f7fffffe          BL       HAL_GPIO_WritePin
;;;143        spi_buff[0] = SPI_FLASH_READ;
00001a  4812              LDR      r0,|L5.100|
00001c  2103              MOVS     r1,#3
00001e  7001              STRB     r1,[r0,#0]
;;;144        spi_buff[1] = address >> 16U;
000020  0c21              LSRS     r1,r4,#16
000022  7041              STRB     r1,[r0,#1]
;;;145        spi_buff[2] = address >> 8U;
000024  0a21              LSRS     r1,r4,#8
000026  7081              STRB     r1,[r0,#2]
;;;146        spi_buff[3] = address;
000028  70c4              STRB     r4,[r0,#3]
;;;147        if (HAL_SPI_Transmit(&hspi2, spi_buff, 4U, SPI_FLASH_TIMEOUT) != HAL_OK) Error_Handler();
00002a  f44f74fa          MOV      r4,#0x1f4
00002e  4601              MOV      r1,r0
000030  4623              MOV      r3,r4
000032  2204              MOVS     r2,#4
000034  480c              LDR      r0,|L5.104|
000036  f7fffffe          BL       HAL_SPI_Transmit
00003a  b108              CBZ      r0,|L5.64|
00003c  f7fffffe          BL       Error_Handler
                  |L5.64|
;;;148        if (HAL_SPI_Receive(&hspi2, data, size, SPI_FLASH_TIMEOUT) != HAL_OK) Error_Handler();
000040  4623              MOV      r3,r4
000042  4642              MOV      r2,r8
000044  4639              MOV      r1,r7
000046  4808              LDR      r0,|L5.104|
000048  f7fffffe          BL       HAL_SPI_Receive
00004c  b108              CBZ      r0,|L5.82|
00004e  f7fffffe          BL       Error_Handler
                  |L5.82|
;;;149        FLASH_CS_High();
000052  4629              MOV      r1,r5
000054  4630              MOV      r0,r6
000056  e8bd41f0          POP      {r4-r8,lr}
00005a  2201              MOVS     r2,#1
00005c  f7ffbffe          B.W      HAL_GPIO_WritePin
;;;150    }
;;;151    
                          ENDP

                  |L5.96|
                          DCD      0x40010c00
                  |L5.100|
                          DCD      ||.data||
                  |L5.104|
                          DCD      hspi2

                          AREA ||i.SPI_FLASH_ReadStatusRegister||, CODE, READONLY, ALIGN=2

                  SPI_FLASH_ReadStatusRegister PROC
;;;242    
;;;243    static uint8_t SPI_FLASH_ReadStatusRegister(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;244    {
;;;245    	FLASH_CS_Low();
000004  4e14              LDR      r6,|L6.88|
000006  f44f5580          MOV      r5,#0x1000
00000a  2200              MOVS     r2,#0
00000c  4629              MOV      r1,r5
00000e  4630              MOV      r0,r6
000010  f7fffffe          BL       HAL_GPIO_WritePin
;;;246        spi_buff[0] = SPI_FLASH_READ_STATUS_REG_1;
000014  4c11              LDR      r4,|L6.92|
000016  2005              MOVS     r0,#5
000018  7020              STRB     r0,[r4,#0]
;;;247        spi_buff[1] = 0U;
00001a  2000              MOVS     r0,#0
00001c  7060              STRB     r0,[r4,#1]
;;;248        if (HAL_SPI_Transmit(&hspi2, spi_buff, 1U, SPI_FLASH_TIMEOUT) != HAL_OK) Error_Handler();
00001e  f44f77fa          MOV      r7,#0x1f4
000022  463b              MOV      r3,r7
000024  2201              MOVS     r2,#1
000026  4621              MOV      r1,r4
000028  480d              LDR      r0,|L6.96|
00002a  f7fffffe          BL       HAL_SPI_Transmit
00002e  b108              CBZ      r0,|L6.52|
000030  f7fffffe          BL       Error_Handler
                  |L6.52|
;;;249    	if (HAL_SPI_Receive(&hspi2, &spi_buff[1], 1U, SPI_FLASH_TIMEOUT) != HAL_OK) Error_Handler();
000034  463b              MOV      r3,r7
000036  2201              MOVS     r2,#1
000038  1c61              ADDS     r1,r4,#1
00003a  4809              LDR      r0,|L6.96|
00003c  f7fffffe          BL       HAL_SPI_Receive
000040  b108              CBZ      r0,|L6.70|
000042  f7fffffe          BL       Error_Handler
                  |L6.70|
;;;250        FLASH_CS_High();
000046  2201              MOVS     r2,#1
000048  4629              MOV      r1,r5
00004a  4630              MOV      r0,r6
00004c  f7fffffe          BL       HAL_GPIO_WritePin
;;;251        return (spi_buff[1]);
000050  7860              LDRB     r0,[r4,#1]  ; spi_buff
;;;252    }
000052  e8bd81f0          POP      {r4-r8,pc}
;;;253    
                          ENDP

000056  0000              DCW      0x0000
                  |L6.88|
                          DCD      0x40010c00
                  |L6.92|
                          DCD      ||.data||
                  |L6.96|
                          DCD      hspi2

                          AREA ||i.SPI_FLASH_ReadWord||, CODE, READONLY, ALIGN=2

                  SPI_FLASH_ReadWord PROC
;;;118    
;;;119    uint32_t SPI_FLASH_ReadWord(uint32_t address)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;120    {
000004  4605              MOV      r5,r0
;;;121        uint32_t data;
;;;122    
;;;123        FLASH_CS_Low();
000006  4f1d              LDR      r7,|L7.124|
000008  f44f5680          MOV      r6,#0x1000
00000c  2200              MOVS     r2,#0
00000e  4631              MOV      r1,r6
000010  4638              MOV      r0,r7
000012  f7fffffe          BL       HAL_GPIO_WritePin
;;;124        spi_buff[0] = SPI_FLASH_READ;
000016  4c1a              LDR      r4,|L7.128|
000018  2003              MOVS     r0,#3
00001a  7020              STRB     r0,[r4,#0]
;;;125        spi_buff[1] = ((address >> 16U) & 0xFFU);
00001c  0c28              LSRS     r0,r5,#16
00001e  7060              STRB     r0,[r4,#1]
;;;126        spi_buff[2] = ((address >> 8U) & 0xFFU);
000020  0a28              LSRS     r0,r5,#8
000022  70a0              STRB     r0,[r4,#2]
;;;127        spi_buff[3] = (address & 0xFFU);
000024  70e5              STRB     r5,[r4,#3]
;;;128        spi_buff[4] = 0U;
000026  2000              MOVS     r0,#0
000028  7120              STRB     r0,[r4,#4]
;;;129        spi_buff[5] = 0U;
00002a  7160              STRB     r0,[r4,#5]
;;;130        spi_buff[6] = 0U;
00002c  71a0              STRB     r0,[r4,#6]
;;;131        spi_buff[7] = 0U;
00002e  71e0              STRB     r0,[r4,#7]
;;;132        if (HAL_SPI_Transmit(&hspi2, spi_buff, 4U, SPI_FLASH_TIMEOUT) != HAL_OK) Error_Handler();
000030  f44f75fa          MOV      r5,#0x1f4
000034  462b              MOV      r3,r5
000036  2204              MOVS     r2,#4
000038  4621              MOV      r1,r4
00003a  4812              LDR      r0,|L7.132|
00003c  f7fffffe          BL       HAL_SPI_Transmit
000040  b108              CBZ      r0,|L7.70|
000042  f7fffffe          BL       Error_Handler
                  |L7.70|
;;;133        if (HAL_SPI_Receive(&hspi2, &spi_buff[4], 4U, SPI_FLASH_TIMEOUT) != HAL_OK) Error_Handler();
000046  462b              MOV      r3,r5
000048  2204              MOVS     r2,#4
00004a  1d21              ADDS     r1,r4,#4
00004c  480d              LDR      r0,|L7.132|
00004e  f7fffffe          BL       HAL_SPI_Receive
000052  b108              CBZ      r0,|L7.88|
000054  f7fffffe          BL       Error_Handler
                  |L7.88|
;;;134        FLASH_CS_High();
000058  2201              MOVS     r2,#1
00005a  4631              MOV      r1,r6
00005c  4638              MOV      r0,r7
00005e  f7fffffe          BL       HAL_GPIO_WritePin
;;;135        data = ((spi_buff[4] << 24U) + (spi_buff[5] << 16U) + (spi_buff[6] << 8U) + spi_buff[7]);
000062  79e0              LDRB     r0,[r4,#7]  ; spi_buff
000064  7921              LDRB     r1,[r4,#4]  ; spi_buff
000066  79a2              LDRB     r2,[r4,#6]  ; spi_buff
000068  eb006001          ADD      r0,r0,r1,LSL #24
00006c  7961              LDRB     r1,[r4,#5]  ; spi_buff
00006e  0409              LSLS     r1,r1,#16
000070  eb012102          ADD      r1,r1,r2,LSL #8
000074  4408              ADD      r0,r0,r1
;;;136        return (data);
;;;137    }
000076  e8bd81f0          POP      {r4-r8,pc}
;;;138    
                          ENDP

00007a  0000              DCW      0x0000
                  |L7.124|
                          DCD      0x40010c00
                  |L7.128|
                          DCD      ||.data||
                  |L7.132|
                          DCD      hspi2

                          AREA ||i.SPI_FLASH_ReleasePowerDown||, CODE, READONLY, ALIGN=2

                  SPI_FLASH_ReleasePowerDown PROC
;;;209    
;;;210    uint8_t SPI_FLASH_ReleasePowerDown(void)
000000  b570              PUSH     {r4-r6,lr}
;;;211    {
;;;212        FLASH_CS_Low();
000002  4d10              LDR      r5,|L8.68|
000004  f44f5480          MOV      r4,#0x1000
000008  2200              MOVS     r2,#0
00000a  4621              MOV      r1,r4
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       HAL_GPIO_WritePin
;;;213        spi_buff[0] = SPI_FLASH_RESUME_POWER_DOWN;
000012  4a0d              LDR      r2,|L8.72|
000014  20ab              MOVS     r0,#0xab
000016  7010              STRB     r0,[r2,#0]
;;;214        if (HAL_SPI_Transmit(&hspi2, spi_buff, 1U, SPI_FLASH_TIMEOUT) != HAL_OK) Error_Handler();
000018  f44f73fa          MOV      r3,#0x1f4
00001c  2201              MOVS     r2,#1
00001e  490a              LDR      r1,|L8.72|
000020  480a              LDR      r0,|L8.76|
000022  f7fffffe          BL       HAL_SPI_Transmit
000026  b108              CBZ      r0,|L8.44|
000028  f7fffffe          BL       Error_Handler
                  |L8.44|
;;;215        FLASH_CS_High();
00002c  2201              MOVS     r2,#1
00002e  4621              MOV      r1,r4
000030  4628              MOV      r0,r5
000032  f7fffffe          BL       HAL_GPIO_WritePin
;;;216        HAL_Delay(1);
000036  2001              MOVS     r0,#1
000038  f7fffffe          BL       HAL_Delay
;;;217        return (SPI_FLASH_ReadDeviceInfo());
00003c  e8bd4070          POP      {r4-r6,lr}
000040  f7ffbffe          B.W      SPI_FLASH_ReadDeviceInfo
;;;218    }
;;;219    
                          ENDP

                  |L8.68|
                          DCD      0x40010c00
                  |L8.72|
                          DCD      ||.data||
                  |L8.76|
                          DCD      hspi2

                          AREA ||i.SPI_FLASH_UnprotectSector||, CODE, READONLY, ALIGN=2

                  SPI_FLASH_UnprotectSector PROC
;;;177    
;;;178    void SPI_FLASH_UnprotectSector(uint32_t address)
000000  b570              PUSH     {r4-r6,lr}
;;;179    {
000002  4604              MOV      r4,r0
;;;180        SPI_FLASH_WriteEnable();
000004  f7fffffe          BL       SPI_FLASH_WriteEnable
;;;181    	FLASH_CS_Low();
000008  4e10              LDR      r6,|L9.76|
00000a  f44f5580          MOV      r5,#0x1000
00000e  2200              MOVS     r2,#0
000010  4629              MOV      r1,r5
000012  4630              MOV      r0,r6
000014  f7fffffe          BL       HAL_GPIO_WritePin
;;;182        spi_buff[0] = SPI_FLASH_UNPROTECT_SECTOR;
000018  480d              LDR      r0,|L9.80|
00001a  2139              MOVS     r1,#0x39
00001c  7001              STRB     r1,[r0,#0]
;;;183        spi_buff[1] = address >> 16U;
00001e  0c21              LSRS     r1,r4,#16
000020  7041              STRB     r1,[r0,#1]
;;;184        spi_buff[2] = address >> 8U;
000022  0a21              LSRS     r1,r4,#8
000024  7081              STRB     r1,[r0,#2]
;;;185        spi_buff[3] = address & 0xFFU;
000026  70c4              STRB     r4,[r0,#3]
;;;186        if (HAL_SPI_Transmit(&hspi2, spi_buff, 4U, SPI_FLASH_TIMEOUT) != HAL_OK) Error_Handler();
000028  4601              MOV      r1,r0
00002a  f44f73fa          MOV      r3,#0x1f4
00002e  2204              MOVS     r2,#4
000030  4808              LDR      r0,|L9.84|
000032  f7fffffe          BL       HAL_SPI_Transmit
000036  b108              CBZ      r0,|L9.60|
000038  f7fffffe          BL       Error_Handler
                  |L9.60|
;;;187        FLASH_CS_High();
00003c  4629              MOV      r1,r5
00003e  4630              MOV      r0,r6
000040  e8bd4070          POP      {r4-r6,lr}
000044  2201              MOVS     r2,#1
000046  f7ffbffe          B.W      HAL_GPIO_WritePin
;;;188    }
;;;189    
                          ENDP

00004a  0000              DCW      0x0000
                  |L9.76|
                          DCD      0x40010c00
                  |L9.80|
                          DCD      ||.data||
                  |L9.84|
                          DCD      hspi2

                          AREA ||i.SPI_FLASH_WaitReadyStatus||, CODE, READONLY, ALIGN=1

                  SPI_FLASH_WaitReadyStatus PROC
;;;190    
;;;191    uint8_t SPI_FLASH_WaitReadyStatus(uint32_t timeout)
000000  b570              PUSH     {r4-r6,lr}
;;;192    {
000002  4605              MOV      r5,r0
;;;193        uint32_t tickstart = HAL_GetTick();
000004  f7fffffe          BL       HAL_GetTick
000008  4604              MOV      r4,r0
;;;194        
;;;195        while((HAL_GetTick() - tickstart) < timeout)
00000a  e003              B        |L10.20|
                  |L10.12|
;;;196        {
;;;197            if((SPI_FLASH_ReadStatusRegister() & SPI_FLASH_STATUS_BUSY_MASK) == 0U)
00000c  f7fffffe          BL       SPI_FLASH_ReadStatusRegister
000010  07c0              LSLS     r0,r0,#31
000012  d006              BEQ      |L10.34|
                  |L10.20|
000014  f7fffffe          BL       HAL_GetTick
000018  1b00              SUBS     r0,r0,r4              ;195
00001a  42a8              CMP      r0,r5                 ;195
00001c  d3f6              BCC      |L10.12|
;;;198            {
;;;199                return (1U);
;;;200            }
;;;201    #ifndef	USE_DEBUGGER
;;;202            HAL_IWDG_Refresh(&hiwdg);
;;;203    #endif
;;;204        }
;;;205        
;;;206        return (0U);
00001e  2000              MOVS     r0,#0
;;;207    }
000020  bd70              POP      {r4-r6,pc}
                  |L10.34|
000022  2001              MOVS     r0,#1                 ;199
000024  bd70              POP      {r4-r6,pc}
;;;208    
                          ENDP


                          AREA ||i.SPI_FLASH_WriteByte||, CODE, READONLY, ALIGN=2

                  SPI_FLASH_WriteByte PROC
;;;53     
;;;54     void SPI_FLASH_WriteByte(uint32_t address, uint8_t data)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;55     {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;56         SPI_FLASH_WriteEnable();
000008  f7fffffe          BL       SPI_FLASH_WriteEnable
;;;57         FLASH_CS_Low();
00000c  4f10              LDR      r7,|L11.80|
00000e  f44f5680          MOV      r6,#0x1000
000012  2200              MOVS     r2,#0
000014  4631              MOV      r1,r6
000016  4638              MOV      r0,r7
000018  f7fffffe          BL       HAL_GPIO_WritePin
;;;58         spi_buff[0] = SPI_FLASH_PAGE_PGM;
00001c  4a0d              LDR      r2,|L11.84|
00001e  2002              MOVS     r0,#2
000020  7010              STRB     r0,[r2,#0]
;;;59         spi_buff[1] = address >> 16U;
000022  0c20              LSRS     r0,r4,#16
000024  7050              STRB     r0,[r2,#1]
;;;60         spi_buff[2] = address >> 8U;
000026  0a20              LSRS     r0,r4,#8
000028  7090              STRB     r0,[r2,#2]
;;;61         spi_buff[3] = address & 0xFFU;
00002a  70d4              STRB     r4,[r2,#3]
;;;62         spi_buff[4] = data;  
00002c  7115              STRB     r5,[r2,#4]
;;;63         if (HAL_SPI_Transmit(&hspi2, spi_buff, 5, SPI_FLASH_TIMEOUT) != HAL_OK) Error_Handler();
00002e  f44f73fa          MOV      r3,#0x1f4
000032  2205              MOVS     r2,#5
000034  4907              LDR      r1,|L11.84|
000036  4808              LDR      r0,|L11.88|
000038  f7fffffe          BL       HAL_SPI_Transmit
00003c  b108              CBZ      r0,|L11.66|
00003e  f7fffffe          BL       Error_Handler
                  |L11.66|
;;;64         FLASH_CS_High();
000042  4631              MOV      r1,r6
000044  4638              MOV      r0,r7
000046  e8bd41f0          POP      {r4-r8,lr}
00004a  2201              MOVS     r2,#1
00004c  f7ffbffe          B.W      HAL_GPIO_WritePin
;;;65     }
;;;66     
                          ENDP

                  |L11.80|
                          DCD      0x40010c00
                  |L11.84|
                          DCD      ||.data||
                  |L11.88|
                          DCD      hspi2

                          AREA ||i.SPI_FLASH_WriteEnable||, CODE, READONLY, ALIGN=2

                  SPI_FLASH_WriteEnable PROC
;;;269    
;;;270    static void SPI_FLASH_WriteEnable(void)
000000  b570              PUSH     {r4-r6,lr}
;;;271    {
;;;272        FLASH_CS_Low();
000002  4d0e              LDR      r5,|L12.60|
000004  f44f5480          MOV      r4,#0x1000
000008  2200              MOVS     r2,#0
00000a  4621              MOV      r1,r4
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       HAL_GPIO_WritePin
;;;273        spi_buff[0] = SPI_FLASH_WRITE_ENABLE;
000012  4a0b              LDR      r2,|L12.64|
000014  2006              MOVS     r0,#6
000016  7010              STRB     r0,[r2,#0]
;;;274        if (HAL_SPI_Transmit(&hspi2, spi_buff, 1U, SPI_FLASH_TIMEOUT) != HAL_OK) Error_Handler();
000018  f44f73fa          MOV      r3,#0x1f4
00001c  2201              MOVS     r2,#1
00001e  4908              LDR      r1,|L12.64|
000020  4808              LDR      r0,|L12.68|
000022  f7fffffe          BL       HAL_SPI_Transmit
000026  b108              CBZ      r0,|L12.44|
000028  f7fffffe          BL       Error_Handler
                  |L12.44|
;;;275        FLASH_CS_High();
00002c  4621              MOV      r1,r4
00002e  4628              MOV      r0,r5
000030  e8bd4070          POP      {r4-r6,lr}
000034  2201              MOVS     r2,#1
000036  f7ffbffe          B.W      HAL_GPIO_WritePin
;;;276    }
;;;277    
                          ENDP

00003a  0000              DCW      0x0000
                  |L12.60|
                          DCD      0x40010c00
                  |L12.64|
                          DCD      ||.data||
                  |L12.68|
                          DCD      hspi2

                          AREA ||i.SPI_FLASH_WriteInt||, CODE, READONLY, ALIGN=2

                  SPI_FLASH_WriteInt PROC
;;;86     
;;;87     void SPI_FLASH_WriteInt(uint32_t address, uint16_t data)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;88     {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;89         SPI_FLASH_WriteEnable();
000008  f7fffffe          BL       SPI_FLASH_WriteEnable
;;;90         FLASH_CS_Low();
00000c  4f11              LDR      r7,|L13.84|
00000e  f44f5680          MOV      r6,#0x1000
000012  2200              MOVS     r2,#0
000014  4631              MOV      r1,r6
000016  4638              MOV      r0,r7
000018  f7fffffe          BL       HAL_GPIO_WritePin
;;;91         spi_buff[0] = SPI_FLASH_PAGE_PGM;
00001c  4a0e              LDR      r2,|L13.88|
00001e  2002              MOVS     r0,#2
000020  7010              STRB     r0,[r2,#0]
;;;92         spi_buff[1] = address >> 16U;
000022  0c20              LSRS     r0,r4,#16
000024  7050              STRB     r0,[r2,#1]
;;;93         spi_buff[2] = address >> 8U;
000026  0a20              LSRS     r0,r4,#8
000028  7090              STRB     r0,[r2,#2]
;;;94         spi_buff[3] = address & 0xFFU;
00002a  70d4              STRB     r4,[r2,#3]
;;;95         spi_buff[4] = data >> 8U;
00002c  0a28              LSRS     r0,r5,#8
00002e  7110              STRB     r0,[r2,#4]
;;;96         spi_buff[5] = data & 0xFFU;
000030  7155              STRB     r5,[r2,#5]
;;;97         if (HAL_SPI_Transmit(&hspi2, spi_buff, 6U, SPI_FLASH_TIMEOUT) != HAL_OK) Error_Handler();
000032  f44f73fa          MOV      r3,#0x1f4
000036  2206              MOVS     r2,#6
000038  4907              LDR      r1,|L13.88|
00003a  4808              LDR      r0,|L13.92|
00003c  f7fffffe          BL       HAL_SPI_Transmit
000040  b108              CBZ      r0,|L13.70|
000042  f7fffffe          BL       Error_Handler
                  |L13.70|
;;;98         FLASH_CS_High();
000046  4631              MOV      r1,r6
000048  4638              MOV      r0,r7
00004a  e8bd41f0          POP      {r4-r8,lr}
00004e  2201              MOVS     r2,#1
000050  f7ffbffe          B.W      HAL_GPIO_WritePin
;;;99     }
;;;100    
                          ENDP

                  |L13.84|
                          DCD      0x40010c00
                  |L13.88|
                          DCD      ||.data||
                  |L13.92|
                          DCD      hspi2

                          AREA ||i.SPI_FLASH_WritePage||, CODE, READONLY, ALIGN=2

                  SPI_FLASH_WritePage PROC
;;;152    
;;;153    void SPI_FLASH_WritePage(uint32_t address, uint8_t *data, uint16_t size)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;154    {
000004  4604              MOV      r4,r0
000006  460f              MOV      r7,r1
000008  4690              MOV      r8,r2
;;;155        SPI_FLASH_WriteEnable();
00000a  f7fffffe          BL       SPI_FLASH_WriteEnable
;;;156        FLASH_CS_Low();
00000e  4e15              LDR      r6,|L14.100|
000010  f44f5580          MOV      r5,#0x1000
000014  2200              MOVS     r2,#0
000016  4629              MOV      r1,r5
000018  4630              MOV      r0,r6
00001a  f7fffffe          BL       HAL_GPIO_WritePin
;;;157        spi_buff[0] = SPI_FLASH_PAGE_PGM;
00001e  4812              LDR      r0,|L14.104|
000020  2102              MOVS     r1,#2
000022  7001              STRB     r1,[r0,#0]
;;;158        spi_buff[1] = address >> 16U;
000024  0c21              LSRS     r1,r4,#16
000026  7041              STRB     r1,[r0,#1]
;;;159        spi_buff[2] = address >> 8U;
000028  0a21              LSRS     r1,r4,#8
00002a  7081              STRB     r1,[r0,#2]
;;;160        spi_buff[3] = address & 0xFFU;
00002c  70c4              STRB     r4,[r0,#3]
;;;161        if (HAL_SPI_Transmit(&hspi2, spi_buff, 4U, SPI_FLASH_TIMEOUT) != HAL_OK) Error_Handler();
00002e  f44f74fa          MOV      r4,#0x1f4
000032  4601              MOV      r1,r0
000034  4623              MOV      r3,r4
000036  2204              MOVS     r2,#4
000038  480c              LDR      r0,|L14.108|
00003a  f7fffffe          BL       HAL_SPI_Transmit
00003e  b108              CBZ      r0,|L14.68|
000040  f7fffffe          BL       Error_Handler
                  |L14.68|
;;;162        if (HAL_SPI_Transmit(&hspi2, data, size, SPI_FLASH_TIMEOUT) != HAL_OK) Error_Handler();
000044  4623              MOV      r3,r4
000046  4642              MOV      r2,r8
000048  4639              MOV      r1,r7
00004a  4808              LDR      r0,|L14.108|
00004c  f7fffffe          BL       HAL_SPI_Transmit
000050  b108              CBZ      r0,|L14.86|
000052  f7fffffe          BL       Error_Handler
                  |L14.86|
;;;163        FLASH_CS_High();
000056  4629              MOV      r1,r5
000058  4630              MOV      r0,r6
00005a  e8bd41f0          POP      {r4-r8,lr}
00005e  2201              MOVS     r2,#1
000060  f7ffbffe          B.W      HAL_GPIO_WritePin
;;;164    }
;;;165    
                          ENDP

                  |L14.100|
                          DCD      0x40010c00
                  |L14.104|
                          DCD      ||.data||
                  |L14.108|
                          DCD      hspi2

                          AREA ||i.SPI_FLASH_WriteStatusRegister||, CODE, READONLY, ALIGN=2

                  SPI_FLASH_WriteStatusRegister PROC
;;;166    
;;;167    void SPI_FLASH_WriteStatusRegister(uint8_t status)
000000  b570              PUSH     {r4-r6,lr}
;;;168    {
000002  4604              MOV      r4,r0
;;;169    	SPI_FLASH_WriteEnable();
000004  f7fffffe          BL       SPI_FLASH_WriteEnable
;;;170        FLASH_CS_Low();
000008  4e0e              LDR      r6,|L15.68|
00000a  f44f5580          MOV      r5,#0x1000
00000e  2200              MOVS     r2,#0
000010  4629              MOV      r1,r5
000012  4630              MOV      r0,r6
000014  f7fffffe          BL       HAL_GPIO_WritePin
;;;171        spi_buff[0] = SPI_FLASH_WRITE_STATUS_REG;
000018  480b              LDR      r0,|L15.72|
00001a  2201              MOVS     r2,#1
00001c  7002              STRB     r2,[r0,#0]
;;;172        spi_buff[1] = status;
00001e  7044              STRB     r4,[r0,#1]
;;;173        if (HAL_SPI_Transmit(&hspi2, spi_buff, 2U, SPI_FLASH_TIMEOUT) != HAL_OK) Error_Handler();
000020  4601              MOV      r1,r0
000022  f44f73fa          MOV      r3,#0x1f4
000026  2202              MOVS     r2,#2
000028  4808              LDR      r0,|L15.76|
00002a  f7fffffe          BL       HAL_SPI_Transmit
00002e  b108              CBZ      r0,|L15.52|
000030  f7fffffe          BL       Error_Handler
                  |L15.52|
;;;174        FLASH_CS_High();
000034  4629              MOV      r1,r5
000036  4630              MOV      r0,r6
000038  e8bd4070          POP      {r4-r6,lr}
00003c  2201              MOVS     r2,#1
00003e  f7ffbffe          B.W      HAL_GPIO_WritePin
;;;175    }
;;;176    
                          ENDP

000042  0000              DCW      0x0000
                  |L15.68|
                          DCD      0x40010c00
                  |L15.72|
                          DCD      ||.data||
                  |L15.76|
                          DCD      hspi2

                          AREA ||i.SPI_FLASH_WriteWord||, CODE, READONLY, ALIGN=2

                  SPI_FLASH_WriteWord PROC
;;;101    
;;;102    void SPI_FLASH_WriteWord(uint32_t address, uint32_t data)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;103    {
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
;;;104        SPI_FLASH_WriteEnable();
000008  f7fffffe          BL       SPI_FLASH_WriteEnable
;;;105        FLASH_CS_Low();
00000c  4f13              LDR      r7,|L16.92|
00000e  f44f5680          MOV      r6,#0x1000
000012  2200              MOVS     r2,#0
000014  4631              MOV      r1,r6
000016  4638              MOV      r0,r7
000018  f7fffffe          BL       HAL_GPIO_WritePin
;;;106        spi_buff[0] = SPI_FLASH_PAGE_PGM;
00001c  4a10              LDR      r2,|L16.96|
00001e  2002              MOVS     r0,#2
000020  7010              STRB     r0,[r2,#0]
;;;107        spi_buff[1] = ((address >> 16U) & 0xFFU);
000022  0c28              LSRS     r0,r5,#16
000024  7050              STRB     r0,[r2,#1]
;;;108        spi_buff[2] = ((address >> 8U) & 0xFFU);
000026  0a28              LSRS     r0,r5,#8
000028  7090              STRB     r0,[r2,#2]
;;;109        spi_buff[3] = (address & 0xFFU);
00002a  70d5              STRB     r5,[r2,#3]
;;;110        spi_buff[4] = ((data >> 24U) & 0xFFU);
00002c  0e20              LSRS     r0,r4,#24
00002e  7110              STRB     r0,[r2,#4]
;;;111        spi_buff[5] = ((data >> 16U) & 0xFFU);
000030  0c20              LSRS     r0,r4,#16
000032  7150              STRB     r0,[r2,#5]
;;;112        spi_buff[6] = ((data >> 8U) & 0xFFU);
000034  0a20              LSRS     r0,r4,#8
000036  7190              STRB     r0,[r2,#6]
;;;113        spi_buff[7] = (data & 0xFFU);
000038  71d4              STRB     r4,[r2,#7]
;;;114        if (HAL_SPI_Transmit(&hspi2, spi_buff, 8U, SPI_FLASH_TIMEOUT) != HAL_OK) Error_Handler();
00003a  f44f73fa          MOV      r3,#0x1f4
00003e  2208              MOVS     r2,#8
000040  4907              LDR      r1,|L16.96|
000042  4808              LDR      r0,|L16.100|
000044  f7fffffe          BL       HAL_SPI_Transmit
000048  b108              CBZ      r0,|L16.78|
00004a  f7fffffe          BL       Error_Handler
                  |L16.78|
;;;115        FLASH_CS_High();
00004e  4631              MOV      r1,r6
000050  4638              MOV      r0,r7
000052  e8bd41f0          POP      {r4-r8,lr}
000056  2201              MOVS     r2,#1
000058  f7ffbffe          B.W      HAL_GPIO_WritePin
;;;116    }
;;;117    
                          ENDP

                  |L16.92|
                          DCD      0x40010c00
                  |L16.96|
                          DCD      ||.data||
                  |L16.100|
                          DCD      hspi2

                          AREA ||.data||, DATA, ALIGN=0

                  spi_buff
                          %        8

;*** Start embedded assembler ***

#line 1 "..\\Src\\eeprom.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___8_eeprom_c_f3c170cc____REV16|
#line 441 "C:\\Keil\\ARM\\PACK\\ARM\\CMSIS\\5.0.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___8_eeprom_c_f3c170cc____REV16| PROC
#line 442

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___8_eeprom_c_f3c170cc____REVSH|
#line 456
|__asm___8_eeprom_c_f3c170cc____REVSH| PROC
#line 457

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___8_eeprom_c_f3c170cc____RRX|
#line 643
|__asm___8_eeprom_c_f3c170cc____RRX| PROC
#line 644

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
