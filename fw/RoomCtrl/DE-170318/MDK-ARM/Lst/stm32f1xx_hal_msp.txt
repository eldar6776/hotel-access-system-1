; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\de-170318\stm32f1xx_hal_msp.o --asm_dir=.\Lst\ --list_dir=.\Lst\ --depend=.\de-170318\stm32f1xx_hal_msp.d --cpu=Cortex-M3 --apcs=interwork -O1 --diag_suppress=9931 -I..\Inc -I..\Drivers\STM32F1xx_HAL_Driver\Inc -I..\Drivers\STM32F1xx_HAL_Driver\Inc\Legacy -I..\Drivers\CMSIS\Device\ST\STM32F1xx\Include -I.\RTE\_DE-170318 -IC:\Keil\ARM\PACK\ARM\CMSIS\5.0.0\CMSIS\Include -IC:\Keil\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=526 -D_RTE_ -DSTM32F10X_MD -DUSE_HAL_DRIVER -DSTM32F103xB --omf_browse=.\de-170318\stm32f1xx_hal_msp.crf ../Src/stm32f1xx_hal_msp.c]
                          THUMB

                          AREA ||i.HAL_CRC_MspDeInit||, CODE, READONLY, ALIGN=2

                  HAL_CRC_MspDeInit PROC
;;;92     
;;;93     void HAL_CRC_MspDeInit(CRC_HandleTypeDef* hcrc)
000000  6800              LDR      r0,[r0,#0]
;;;94     {
;;;95     
;;;96       if(hcrc->Instance==CRC)
000002  4904              LDR      r1,|L1.20|
000004  4288              CMP      r0,r1
000006  d104              BNE      |L1.18|
;;;97       {
;;;98         /* Peripheral clock disable */
;;;99         __HAL_RCC_CRC_CLK_DISABLE();
000008  4803              LDR      r0,|L1.24|
00000a  6941              LDR      r1,[r0,#0x14]
00000c  f0210140          BIC      r1,r1,#0x40
000010  6141              STR      r1,[r0,#0x14]
                  |L1.18|
;;;100      }
;;;101    
;;;102    }
000012  4770              BX       lr
;;;103    
                          ENDP

                  |L1.20|
                          DCD      0x40023000
                  |L1.24|
                          DCD      0x40021000

                          AREA ||i.HAL_CRC_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_CRC_MspInit PROC
;;;81     
;;;82     void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
000000  b508              PUSH     {r3,lr}
;;;83     {
;;;84     
;;;85       if(hcrc->Instance==CRC)
000002  6800              LDR      r0,[r0,#0]
000004  4906              LDR      r1,|L2.32|
000006  4288              CMP      r0,r1
000008  d108              BNE      |L2.28|
;;;86       {
;;;87         /* Peripheral clock enable */
;;;88         __HAL_RCC_CRC_CLK_ENABLE();
00000a  4806              LDR      r0,|L2.36|
00000c  6941              LDR      r1,[r0,#0x14]
00000e  f0410140          ORR      r1,r1,#0x40
000012  6141              STR      r1,[r0,#0x14]
000014  6940              LDR      r0,[r0,#0x14]
000016  f0000040          AND      r0,r0,#0x40
00001a  9000              STR      r0,[sp,#0]
                  |L2.28|
;;;89       }
;;;90     
;;;91     }
00001c  bd08              POP      {r3,pc}
;;;92     
                          ENDP

00001e  0000              DCW      0x0000
                  |L2.32|
                          DCD      0x40023000
                  |L2.36|
                          DCD      0x40021000

                          AREA ||i.HAL_I2C_MspDeInit||, CODE, READONLY, ALIGN=2

                  HAL_I2C_MspDeInit PROC
;;;127    
;;;128    void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
000000  6800              LDR      r0,[r0,#0]
;;;129    {
;;;130    
;;;131      if(hi2c->Instance==I2C1)
000002  4907              LDR      r1,|L3.32|
000004  4288              CMP      r0,r1
000006  d109              BNE      |L3.28|
;;;132      {
;;;133        /* Peripheral clock disable */
;;;134        __HAL_RCC_I2C1_CLK_DISABLE();
000008  4806              LDR      r0,|L3.36|
00000a  69c1              LDR      r1,[r0,#0x1c]
00000c  f4211100          BIC      r1,r1,#0x200000
000010  61c1              STR      r1,[r0,#0x1c]
;;;135      
;;;136        /**I2C1 GPIO Configuration    
;;;137        PB8     ------> I2C1_SCL
;;;138        PB9     ------> I2C1_SDA 
;;;139        */
;;;140        HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8|GPIO_PIN_9);
000012  f44f7140          MOV      r1,#0x300
000016  4804              LDR      r0,|L3.40|
000018  f7ffbffe          B.W      HAL_GPIO_DeInit
                  |L3.28|
;;;141    
;;;142      }
;;;143    
;;;144    }
00001c  4770              BX       lr
;;;145    
                          ENDP

00001e  0000              DCW      0x0000
                  |L3.32|
                          DCD      0x40005400
                  |L3.36|
                          DCD      0x40021000
                  |L3.40|
                          DCD      0x40010c00

                          AREA ||i.HAL_I2C_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_I2C_MspInit PROC
;;;103    
;;;104    void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
000000  b500              PUSH     {lr}
;;;105    {
000002  b085              SUB      sp,sp,#0x14
;;;106    
;;;107      GPIO_InitTypeDef GPIO_InitStruct;
;;;108      if(hi2c->Instance==I2C1)
000004  6800              LDR      r0,[r0,#0]
000006  490f              LDR      r1,|L4.68|
000008  4288              CMP      r0,r1
00000a  d118              BNE      |L4.62|
;;;109      {
;;;110      
;;;111        /**I2C1 GPIO Configuration    
;;;112        PB8     ------> I2C1_SCL
;;;113        PB9     ------> I2C1_SDA 
;;;114        */
;;;115        GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
00000c  f44f7040          MOV      r0,#0x300
000010  9001              STR      r0,[sp,#4]
;;;116        GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
000012  2012              MOVS     r0,#0x12
000014  9002              STR      r0,[sp,#8]
;;;117        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
000016  2003              MOVS     r0,#3
000018  9004              STR      r0,[sp,#0x10]
;;;118        HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
00001a  a901              ADD      r1,sp,#4
00001c  480a              LDR      r0,|L4.72|
00001e  f7fffffe          BL       HAL_GPIO_Init
;;;119    
;;;120        __HAL_AFIO_REMAP_I2C1_ENABLE();
000022  480a              LDR      r0,|L4.76|
000024  6841              LDR      r1,[r0,#4]
000026  f0410102          ORR      r1,r1,#2
00002a  6041              STR      r1,[r0,#4]
;;;121    
;;;122        /* Peripheral clock enable */
;;;123        __HAL_RCC_I2C1_CLK_ENABLE();
00002c  4808              LDR      r0,|L4.80|
00002e  69c1              LDR      r1,[r0,#0x1c]
000030  f4411100          ORR      r1,r1,#0x200000
000034  61c1              STR      r1,[r0,#0x1c]
000036  69c0              LDR      r0,[r0,#0x1c]
000038  f4001000          AND      r0,r0,#0x200000
00003c  9000              STR      r0,[sp,#0]
                  |L4.62|
;;;124      }
;;;125    
;;;126    }
00003e  b005              ADD      sp,sp,#0x14
000040  bd00              POP      {pc}
;;;127    
                          ENDP

000042  0000              DCW      0x0000
                  |L4.68|
                          DCD      0x40005400
                  |L4.72|
                          DCD      0x40010c00
                  |L4.76|
                          DCD      0x40010000
                  |L4.80|
                          DCD      0x40021000

                          AREA ||i.HAL_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_MspInit PROC
;;;45     
;;;46     void HAL_MspInit(void)
000000  b508              PUSH     {r3,lr}
;;;47     {
;;;48       /* USER CODE BEGIN MspInit 0 */
;;;49     
;;;50       /* USER CODE END MspInit 0 */
;;;51     
;;;52       __HAL_RCC_AFIO_CLK_ENABLE();
000002  4822              LDR      r0,|L5.140|
000004  6981              LDR      r1,[r0,#0x18]
000006  f0410101          ORR      r1,r1,#1
00000a  6181              STR      r1,[r0,#0x18]
00000c  6981              LDR      r1,[r0,#0x18]
00000e  f0010101          AND      r1,r1,#1
000012  9100              STR      r1,[sp,#0]
;;;53       __HAL_RCC_PWR_CLK_ENABLE();
000014  69c1              LDR      r1,[r0,#0x1c]
000016  f0415180          ORR      r1,r1,#0x10000000
00001a  61c1              STR      r1,[r0,#0x1c]
00001c  69c0              LDR      r0,[r0,#0x1c]
00001e  f0005080          AND      r0,r0,#0x10000000
000022  9000              STR      r0,[sp,#0]
;;;54     
;;;55       HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
000024  2003              MOVS     r0,#3
000026  f7fffffe          BL       HAL_NVIC_SetPriorityGrouping
;;;56     
;;;57       /* System interrupt init*/
;;;58       /* MemoryManagement_IRQn interrupt configuration */
;;;59       HAL_NVIC_SetPriority(MemoryManagement_IRQn, 0, 0);
00002a  2200              MOVS     r2,#0
00002c  4611              MOV      r1,r2
00002e  f06f000b          MVN      r0,#0xb
000032  f7fffffe          BL       HAL_NVIC_SetPriority
;;;60       /* BusFault_IRQn interrupt configuration */
;;;61       HAL_NVIC_SetPriority(BusFault_IRQn, 0, 0);
000036  2200              MOVS     r2,#0
000038  4611              MOV      r1,r2
00003a  f06f000a          MVN      r0,#0xa
00003e  f7fffffe          BL       HAL_NVIC_SetPriority
;;;62       /* UsageFault_IRQn interrupt configuration */
;;;63       HAL_NVIC_SetPriority(UsageFault_IRQn, 0, 0);
000042  2200              MOVS     r2,#0
000044  4611              MOV      r1,r2
000046  f06f0009          MVN      r0,#9
00004a  f7fffffe          BL       HAL_NVIC_SetPriority
;;;64       /* SVCall_IRQn interrupt configuration */
;;;65       HAL_NVIC_SetPriority(SVCall_IRQn, 0, 0);
00004e  2200              MOVS     r2,#0
000050  4611              MOV      r1,r2
000052  1f50              SUBS     r0,r2,#5
000054  f7fffffe          BL       HAL_NVIC_SetPriority
;;;66       /* DebugMonitor_IRQn interrupt configuration */
;;;67       HAL_NVIC_SetPriority(DebugMonitor_IRQn, 0, 0);
000058  2200              MOVS     r2,#0
00005a  4611              MOV      r1,r2
00005c  1f10              SUBS     r0,r2,#4
00005e  f7fffffe          BL       HAL_NVIC_SetPriority
;;;68       /* PendSV_IRQn interrupt configuration */
;;;69       HAL_NVIC_SetPriority(PendSV_IRQn, 0, 0);
000062  2200              MOVS     r2,#0
000064  4611              MOV      r1,r2
000066  1e90              SUBS     r0,r2,#2
000068  f7fffffe          BL       HAL_NVIC_SetPriority
;;;70       /* SysTick_IRQn interrupt configuration */
;;;71       HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
00006c  2200              MOVS     r2,#0
00006e  4611              MOV      r1,r2
000070  1e50              SUBS     r0,r2,#1
000072  f7fffffe          BL       HAL_NVIC_SetPriority
;;;72     
;;;73     
;;;74     //#ifdef	USE_DEBUGGER
;;;75     	__HAL_AFIO_REMAP_SWJ_NOJTAG();
000076  4806              LDR      r0,|L5.144|
000078  6841              LDR      r1,[r0,#4]
00007a  f02161e0          BIC      r1,r1,#0x7000000
00007e  6041              STR      r1,[r0,#4]
000080  6841              LDR      r1,[r0,#4]
000082  f0417100          ORR      r1,r1,#0x2000000
000086  6041              STR      r1,[r0,#4]
;;;76     //#else
;;;77     //	__HAL_AFIO_REMAP_SWJ_DISABLE();
;;;78     //#endif
;;;79     }
000088  bd08              POP      {r3,pc}
;;;80     
                          ENDP

00008a  0000              DCW      0x0000
                  |L5.140|
                          DCD      0x40021000
                  |L5.144|
                          DCD      0x40010000

                          AREA ||i.HAL_RTC_MspDeInit||, CODE, READONLY, ALIGN=2

                  HAL_RTC_MspDeInit PROC
;;;159    
;;;160    void HAL_RTC_MspDeInit(RTC_HandleTypeDef* hrtc)
000000  6800              LDR      r0,[r0,#0]
;;;161    {
;;;162    
;;;163      if(hrtc->Instance==RTC)
000002  4903              LDR      r1,|L6.16|
000004  4288              CMP      r0,r1
000006  d102              BNE      |L6.14|
;;;164      {
;;;165        /* Peripheral clock disable */
;;;166        __HAL_RCC_RTC_DISABLE();
000008  4902              LDR      r1,|L6.20|
00000a  2000              MOVS     r0,#0
00000c  6008              STR      r0,[r1,#0]
                  |L6.14|
;;;167      }
;;;168    
;;;169    }
00000e  4770              BX       lr
;;;170    
                          ENDP

                  |L6.16|
                          DCD      0x40002800
                  |L6.20|
                          DCD      0x4242043c

                          AREA ||i.HAL_RTC_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_RTC_MspInit PROC
;;;145    
;;;146    void HAL_RTC_MspInit(RTC_HandleTypeDef* hrtc)
000000  b508              PUSH     {r3,lr}
;;;147    {
;;;148    
;;;149      if(hrtc->Instance==RTC)
000002  6800              LDR      r0,[r0,#0]
000004  4908              LDR      r1,|L7.40|
000006  4288              CMP      r0,r1
000008  d10d              BNE      |L7.38|
;;;150      {
;;;151        HAL_PWR_EnableBkUpAccess();
00000a  f7fffffe          BL       HAL_PWR_EnableBkUpAccess
;;;152        /* Enable BKP CLK enable for backup registers */
;;;153        __HAL_RCC_BKP_CLK_ENABLE();
00000e  4807              LDR      r0,|L7.44|
000010  69c1              LDR      r1,[r0,#0x1c]
000012  f0416100          ORR      r1,r1,#0x8000000
000016  61c1              STR      r1,[r0,#0x1c]
000018  69c0              LDR      r0,[r0,#0x1c]
00001a  f0006000          AND      r0,r0,#0x8000000
00001e  9000              STR      r0,[sp,#0]
;;;154        /* Peripheral clock enable */
;;;155        __HAL_RCC_RTC_ENABLE();
000020  4903              LDR      r1,|L7.48|
000022  2001              MOVS     r0,#1
000024  6008              STR      r0,[r1,#0]
                  |L7.38|
;;;156      }
;;;157    
;;;158    }
000026  bd08              POP      {r3,pc}
;;;159    
                          ENDP

                  |L7.40|
                          DCD      0x40002800
                  |L7.44|
                          DCD      0x40021000
                  |L7.48|
                          DCD      0x4242043c

                          AREA ||i.HAL_SPI_MspDeInit||, CODE, READONLY, ALIGN=2

                  HAL_SPI_MspDeInit PROC
;;;229    
;;;230    void HAL_SPI_MspDeInit(SPI_HandleTypeDef* hspi)
000000  b510              PUSH     {r4,lr}
;;;231    {
000002  4604              MOV      r4,r0
;;;232        if(hspi->Instance==SPI2)
000004  490b              LDR      r1,|L8.52|
000006  6820              LDR      r0,[r4,#0]
000008  4288              CMP      r0,r1
00000a  d111              BNE      |L8.48|
;;;233        {
;;;234            /* Peripheral clock disable */
;;;235            __HAL_RCC_SPI2_CLK_DISABLE();
00000c  480a              LDR      r0,|L8.56|
00000e  69c1              LDR      r1,[r0,#0x1c]
000010  f4214180          BIC      r1,r1,#0x4000
000014  61c1              STR      r1,[r0,#0x1c]
;;;236    
;;;237            /**SPI2 GPIO Configuration    
;;;238            PB13     ------> SPI2_SCK
;;;239            PB14     ------> SPI2_MISO
;;;240            PB15     ------> SPI2_MOSI 
;;;241            */
;;;242            HAL_GPIO_DeInit(GPIOB, GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15);
000016  f44f4160          MOV      r1,#0xe000
00001a  4808              LDR      r0,|L8.60|
00001c  f7fffffe          BL       HAL_GPIO_DeInit
;;;243    
;;;244            HAL_DMA_DeInit(hspi->hdmatx);
000020  6ca0              LDR      r0,[r4,#0x48]
000022  f7fffffe          BL       HAL_DMA_DeInit
;;;245            HAL_DMA_DeInit(hspi->hdmarx);
000026  6ce0              LDR      r0,[r4,#0x4c]
000028  e8bd4010          POP      {r4,lr}
00002c  f7ffbffe          B.W      HAL_DMA_DeInit
                  |L8.48|
;;;246        }
;;;247    }
000030  bd10              POP      {r4,pc}
;;;248    
                          ENDP

000032  0000              DCW      0x0000
                  |L8.52|
                          DCD      0x40003800
                  |L8.56|
                          DCD      0x40021000
                  |L8.60|
                          DCD      0x40010c00

                          AREA ||i.HAL_SPI_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_SPI_MspInit PROC
;;;170    
;;;171    void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
000000  b5f0              PUSH     {r4-r7,lr}
;;;172    {
000002  b085              SUB      sp,sp,#0x14
000004  4604              MOV      r4,r0
;;;173        GPIO_InitTypeDef GPIO_InitStruct;
;;;174    
;;;175        if(hspi->Instance == SPI2)
000006  4926              LDR      r1,|L9.160|
000008  6820              LDR      r0,[r4,#0]
00000a  4288              CMP      r0,r1
00000c  d146              BNE      |L9.156|
;;;176        {
;;;177            /* Peripheral clock enable */
;;;178            __HAL_RCC_SPI2_CLK_ENABLE();
00000e  4825              LDR      r0,|L9.164|
000010  69c1              LDR      r1,[r0,#0x1c]
000012  f4414180          ORR      r1,r1,#0x4000
000016  61c1              STR      r1,[r0,#0x1c]
000018  69c0              LDR      r0,[r0,#0x1c]
00001a  f4004080          AND      r0,r0,#0x4000
00001e  9000              STR      r0,[sp,#0]
;;;179    
;;;180            /**SPI2 GPIO Configuration    
;;;181            PB13     ------> SPI2_SCK
;;;182            PB14     ------> SPI2_MISO
;;;183            PB15     ------> SPI2_MOSI 
;;;184            */
;;;185            GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_15;
000020  f44f4020          MOV      r0,#0xa000
000024  9001              STR      r0,[sp,#4]
;;;186            GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
000026  2002              MOVS     r0,#2
000028  9002              STR      r0,[sp,#8]
;;;187            GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
00002a  2003              MOVS     r0,#3
00002c  9004              STR      r0,[sp,#0x10]
;;;188            HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
00002e  4d1e              LDR      r5,|L9.168|
000030  a901              ADD      r1,sp,#4
000032  4628              MOV      r0,r5
000034  f7fffffe          BL       HAL_GPIO_Init
;;;189    
;;;190            GPIO_InitStruct.Pin = GPIO_PIN_14;
000038  f44f4080          MOV      r0,#0x4000
00003c  9001              STR      r0,[sp,#4]
;;;191            GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
00003e  2600              MOVS     r6,#0
000040  9602              STR      r6,[sp,#8]
;;;192            GPIO_InitStruct.Pull = GPIO_NOPULL;
000042  9603              STR      r6,[sp,#0xc]
;;;193            HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
000044  a901              ADD      r1,sp,#4
000046  4628              MOV      r0,r5
000048  f7fffffe          BL       HAL_GPIO_Init
;;;194    
;;;195            /* SPI2 DMA Init */
;;;196            /* SPI2_TX Init */
;;;197            hdma_spi2_tx.Instance = DMA1_Channel5;
00004c  4d18              LDR      r5,|L9.176|
00004e  4817              LDR      r0,|L9.172|
000050  6028              STR      r0,[r5,#0]  ; hdma_spi2_tx
;;;198            hdma_spi2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
000052  2010              MOVS     r0,#0x10
000054  6068              STR      r0,[r5,#4]  ; hdma_spi2_tx
;;;199            hdma_spi2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
000056  60ae              STR      r6,[r5,#8]  ; hdma_spi2_tx
;;;200            hdma_spi2_tx.Init.MemInc = DMA_MINC_ENABLE;
000058  2780              MOVS     r7,#0x80
00005a  60ef              STR      r7,[r5,#0xc]  ; hdma_spi2_tx
;;;201            hdma_spi2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
00005c  612e              STR      r6,[r5,#0x10]  ; hdma_spi2_tx
;;;202            hdma_spi2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
00005e  616e              STR      r6,[r5,#0x14]  ; hdma_spi2_tx
;;;203            hdma_spi2_tx.Init.Mode = DMA_NORMAL;
000060  61ae              STR      r6,[r5,#0x18]  ; hdma_spi2_tx
;;;204            hdma_spi2_tx.Init.Priority = DMA_PRIORITY_MEDIUM;
000062  0200              LSLS     r0,r0,#8
000064  61e8              STR      r0,[r5,#0x1c]  ; hdma_spi2_tx
;;;205            if (HAL_DMA_Init(&hdma_spi2_tx) != HAL_OK)
000066  4628              MOV      r0,r5
000068  f7fffffe          BL       HAL_DMA_Init
00006c  b108              CBZ      r0,|L9.114|
;;;206            {
;;;207              Error_Handler();
00006e  f7fffffe          BL       Error_Handler
                  |L9.114|
;;;208            }
;;;209    
;;;210            __HAL_LINKDMA(hspi,hdmatx,hdma_spi2_tx);
000072  64a5              STR      r5,[r4,#0x48]
000074  626c              STR      r4,[r5,#0x24]  ; hdma_spi2_tx
;;;211    
;;;212            /* SPI2_RX Init */
;;;213            hdma_spi2_rx.Instance = DMA1_Channel4;
000076  480d              LDR      r0,|L9.172|
000078  4d0e              LDR      r5,|L9.180|
00007a  3814              SUBS     r0,r0,#0x14
00007c  6028              STR      r0,[r5,#0]  ; hdma_spi2_rx
;;;214            hdma_spi2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
00007e  606e              STR      r6,[r5,#4]  ; hdma_spi2_rx
;;;215            hdma_spi2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
000080  60ae              STR      r6,[r5,#8]  ; hdma_spi2_rx
;;;216            hdma_spi2_rx.Init.MemInc = DMA_MINC_ENABLE;
000082  60ef              STR      r7,[r5,#0xc]  ; hdma_spi2_rx
;;;217            hdma_spi2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
000084  612e              STR      r6,[r5,#0x10]  ; hdma_spi2_rx
;;;218            hdma_spi2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
000086  616e              STR      r6,[r5,#0x14]  ; hdma_spi2_rx
;;;219            hdma_spi2_rx.Init.Mode = DMA_NORMAL;
000088  61ae              STR      r6,[r5,#0x18]  ; hdma_spi2_rx
;;;220            hdma_spi2_rx.Init.Priority = DMA_PRIORITY_LOW;
00008a  61ee              STR      r6,[r5,#0x1c]  ; hdma_spi2_rx
;;;221            if (HAL_DMA_Init(&hdma_spi2_rx) != HAL_OK)
00008c  4628              MOV      r0,r5
00008e  f7fffffe          BL       HAL_DMA_Init
000092  b108              CBZ      r0,|L9.152|
;;;222            {
;;;223              Error_Handler();
000094  f7fffffe          BL       Error_Handler
                  |L9.152|
;;;224            }
;;;225    
;;;226            __HAL_LINKDMA(hspi,hdmarx,hdma_spi2_rx);
000098  64e5              STR      r5,[r4,#0x4c]
00009a  626c              STR      r4,[r5,#0x24]  ; hdma_spi2_rx
                  |L9.156|
;;;227        }
;;;228    }
00009c  b005              ADD      sp,sp,#0x14
00009e  bdf0              POP      {r4-r7,pc}
;;;229    
                          ENDP

                  |L9.160|
                          DCD      0x40003800
                  |L9.164|
                          DCD      0x40021000
                  |L9.168|
                          DCD      0x40010c00
                  |L9.172|
                          DCD      0x40020058
                  |L9.176|
                          DCD      hdma_spi2_tx
                  |L9.180|
                          DCD      hdma_spi2_rx

                          AREA ||i.HAL_TIM_MspPostInit||, CODE, READONLY, ALIGN=2

                  HAL_TIM_MspPostInit PROC
;;;269    
;;;270    void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
000000  b51f              PUSH     {r0-r4,lr}
;;;271    {
;;;272      GPIO_InitTypeDef GPIO_InitStruct;
;;;273    	
;;;274      if(htim->Instance==TIM1)
000002  4b12              LDR      r3,|L10.76|
;;;275      {
;;;276        /**TIM1 GPIO Configuration    
;;;277        PA8     ------> TIM1_CH1 
;;;278        */
;;;279        GPIO_InitStruct.Pin = GPIO_PIN_8;
;;;280        GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
;;;281        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
;;;282        HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
000004  6801              LDR      r1,[r0,#0]
000006  2202              MOVS     r2,#2                 ;280
000008  4811              LDR      r0,|L10.80|
00000a  4299              CMP      r1,r3                 ;274
00000c  d107              BNE      |L10.30|
00000e  1581              ASRS     r1,r0,#22             ;279
000010  9100              STR      r1,[sp,#0]            ;279
000012  9201              STR      r2,[sp,#4]            ;280
000014  9203              STR      r2,[sp,#0xc]          ;281
000016  4669              MOV      r1,sp
000018  f7fffffe          BL       HAL_GPIO_Init
                  |L10.28|
;;;283    
;;;284      }
;;;285      else if(htim->Instance==TIM2)
;;;286      {
;;;287      
;;;288        /**TIM2 GPIO Configuration    
;;;289        PA0     ------> TIM2_CH1 
;;;290        */
;;;291        GPIO_InitStruct.Pin = GPIO_PIN_0;
;;;292        GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
;;;293        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
;;;294        HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
;;;295    
;;;296      }
;;;297      else if(htim->Instance==TIM3)
;;;298      {
;;;299        /**TIM3 GPIO Configuration    
;;;300        PA6     ------> TIM3_CH1 
;;;301        */
;;;302        GPIO_InitStruct.Pin = GPIO_PIN_6;
;;;303        GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
;;;304        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
;;;305        HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
;;;306    
;;;307      }
;;;308    
;;;309    }
00001c  bd1f              POP      {r0-r4,pc}
                  |L10.30|
00001e  f1b14f80          CMP      r1,#0x40000000        ;285
000022  d00a              BEQ      |L10.58|
000024  4b0b              LDR      r3,|L10.84|
000026  4299              CMP      r1,r3                 ;297
000028  d1f8              BNE      |L10.28|
00002a  2140              MOVS     r1,#0x40              ;302
00002c  9100              STR      r1,[sp,#0]            ;302
00002e  9201              STR      r2,[sp,#4]            ;303
000030  9203              STR      r2,[sp,#0xc]          ;304
000032  4669              MOV      r1,sp                 ;305
000034  f7fffffe          BL       HAL_GPIO_Init
000038  bd1f              POP      {r0-r4,pc}
                  |L10.58|
00003a  2101              MOVS     r1,#1                 ;291
00003c  9100              STR      r1,[sp,#0]            ;291
00003e  9201              STR      r2,[sp,#4]            ;292
000040  9203              STR      r2,[sp,#0xc]          ;293
000042  4669              MOV      r1,sp                 ;294
000044  f7fffffe          BL       HAL_GPIO_Init
000048  bd1f              POP      {r0-r4,pc}
;;;310    
                          ENDP

00004a  0000              DCW      0x0000
                  |L10.76|
                          DCD      0x40012c00
                  |L10.80|
                          DCD      0x40010800
                  |L10.84|
                          DCD      0x40000400

                          AREA ||i.HAL_TIM_PWM_MspDeInit||, CODE, READONLY, ALIGN=2

                  HAL_TIM_PWM_MspDeInit PROC
;;;310    
;;;311    void HAL_TIM_PWM_MspDeInit(TIM_HandleTypeDef* htim_pwm)
000000  6800              LDR      r0,[r0,#0]
;;;312    {
;;;313    
;;;314      if(htim_pwm->Instance==TIM1)
000002  4a0c              LDR      r2,|L11.52|
;;;315      {
;;;316        /* Peripheral clock disable */
;;;317        __HAL_RCC_TIM1_CLK_DISABLE();
000004  490c              LDR      r1,|L11.56|
000006  4290              CMP      r0,r2                 ;314
000008  d104              BNE      |L11.20|
00000a  6988              LDR      r0,[r1,#0x18]
00000c  f4206000          BIC      r0,r0,#0x800
000010  6188              STR      r0,[r1,#0x18]
                  |L11.18|
;;;318      }
;;;319      else if(htim_pwm->Instance==TIM2)
;;;320      {
;;;321        /* Peripheral clock disable */
;;;322        __HAL_RCC_TIM2_CLK_DISABLE();
;;;323      }
;;;324      else if(htim_pwm->Instance==TIM3)
;;;325      {
;;;326        /* Peripheral clock disable */
;;;327        __HAL_RCC_TIM3_CLK_DISABLE();
;;;328      }
;;;329    
;;;330    }
000012  4770              BX       lr
                  |L11.20|
000014  f1b04f80          CMP      r0,#0x40000000        ;319
000018  d007              BEQ      |L11.42|
00001a  4a08              LDR      r2,|L11.60|
00001c  4290              CMP      r0,r2                 ;324
00001e  d1f8              BNE      |L11.18|
000020  69c8              LDR      r0,[r1,#0x1c]         ;327
000022  f0200002          BIC      r0,r0,#2              ;327
000026  61c8              STR      r0,[r1,#0x1c]         ;327
000028  4770              BX       lr
                  |L11.42|
00002a  69c8              LDR      r0,[r1,#0x1c]         ;322
00002c  f0200001          BIC      r0,r0,#1              ;322
000030  61c8              STR      r0,[r1,#0x1c]         ;322
000032  4770              BX       lr
;;;331    
                          ENDP

                  |L11.52|
                          DCD      0x40012c00
                  |L11.56|
                          DCD      0x40021000
                  |L11.60|
                          DCD      0x40000400

                          AREA ||i.HAL_TIM_PWM_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_TIM_PWM_MspInit PROC
;;;248    
;;;249    void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
000000  b508              PUSH     {r3,lr}
;;;250    {
;;;251    
;;;252      if(htim_pwm->Instance==TIM1)
000002  6800              LDR      r0,[r0,#0]
000004  4a12              LDR      r2,|L12.80|
;;;253      {
;;;254        /* Peripheral clock enable */
;;;255        __HAL_RCC_TIM1_CLK_ENABLE();
000006  4913              LDR      r1,|L12.84|
000008  4290              CMP      r0,r2                 ;252
00000a  d108              BNE      |L12.30|
00000c  6988              LDR      r0,[r1,#0x18]
00000e  f4406000          ORR      r0,r0,#0x800
000012  6188              STR      r0,[r1,#0x18]
000014  6988              LDR      r0,[r1,#0x18]
000016  f4006000          AND      r0,r0,#0x800
00001a  9000              STR      r0,[sp,#0]
                  |L12.28|
;;;256      }
;;;257      else if(htim_pwm->Instance==TIM2)
;;;258      {
;;;259        /* Peripheral clock enable */
;;;260        __HAL_RCC_TIM2_CLK_ENABLE();
;;;261      }
;;;262      else if(htim_pwm->Instance==TIM3)
;;;263      {
;;;264        /* Peripheral clock enable */
;;;265        __HAL_RCC_TIM3_CLK_ENABLE();
;;;266      }
;;;267    
;;;268    }
00001c  bd08              POP      {r3,pc}
                  |L12.30|
00001e  f1b04f80          CMP      r0,#0x40000000        ;257
000022  d00b              BEQ      |L12.60|
000024  4a0c              LDR      r2,|L12.88|
000026  4290              CMP      r0,r2                 ;262
000028  d1f8              BNE      |L12.28|
00002a  69c8              LDR      r0,[r1,#0x1c]         ;265
00002c  f0400002          ORR      r0,r0,#2              ;265
000030  61c8              STR      r0,[r1,#0x1c]         ;265
000032  69c8              LDR      r0,[r1,#0x1c]         ;265
000034  f0000002          AND      r0,r0,#2              ;265
000038  9000              STR      r0,[sp,#0]            ;265
00003a  bd08              POP      {r3,pc}
                  |L12.60|
00003c  69c8              LDR      r0,[r1,#0x1c]         ;260
00003e  f0400001          ORR      r0,r0,#1              ;260
000042  61c8              STR      r0,[r1,#0x1c]         ;260
000044  69c8              LDR      r0,[r1,#0x1c]         ;260
000046  f0000001          AND      r0,r0,#1              ;260
00004a  9000              STR      r0,[sp,#0]            ;260
00004c  bd08              POP      {r3,pc}
;;;269    
                          ENDP

00004e  0000              DCW      0x0000
                  |L12.80|
                          DCD      0x40012c00
                  |L12.84|
                          DCD      0x40021000
                  |L12.88|
                          DCD      0x40000400

                          AREA ||i.HAL_UART_MspDeInit||, CODE, READONLY, ALIGN=2

                  HAL_UART_MspDeInit PROC
;;;384    
;;;385    void HAL_UART_MspDeInit(UART_HandleTypeDef* huart)
000000  b510              PUSH     {r4,lr}
;;;386    {
;;;387    
;;;388      if(huart->Instance==USART1)
000002  4b11              LDR      r3,|L13.72|
;;;389      {
;;;390        /* Peripheral clock disable */
;;;391        __HAL_RCC_USART1_CLK_DISABLE();
;;;392      
;;;393        /**USART1 GPIO Configuration    
;;;394        PA9     ------> USART1_TX
;;;395        PA10     ------> USART1_RX 
;;;396        */
;;;397        HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
000004  6801              LDR      r1,[r0,#0]
000006  4a11              LDR      r2,|L13.76|
000008  4811              LDR      r0,|L13.80|
00000a  4299              CMP      r1,r3                 ;388
00000c  d10c              BNE      |L13.40|
00000e  6991              LDR      r1,[r2,#0x18]         ;391
000010  f4214180          BIC      r1,r1,#0x4000         ;391
000014  6191              STR      r1,[r2,#0x18]         ;391
000016  f44f61c0          MOV      r1,#0x600
00001a  f7fffffe          BL       HAL_GPIO_DeInit
;;;398    
;;;399        /* USART1 interrupt DeInit */
;;;400        HAL_NVIC_DisableIRQ(USART1_IRQn);
00001e  e8bd4010          POP      {r4,lr}
000022  2025              MOVS     r0,#0x25
000024  f7ffbffe          B.W      HAL_NVIC_DisableIRQ
                  |L13.40|
;;;401      }
;;;402      else if(huart->Instance==USART2)
000028  4b0a              LDR      r3,|L13.84|
00002a  4299              CMP      r1,r3
00002c  d10b              BNE      |L13.70|
;;;403      {
;;;404        /* Peripheral clock disable */
;;;405        __HAL_RCC_USART2_CLK_DISABLE();
00002e  69d1              LDR      r1,[r2,#0x1c]
000030  f4213100          BIC      r1,r1,#0x20000
000034  61d1              STR      r1,[r2,#0x1c]
;;;406      
;;;407        /**USART2 GPIO Configuration    
;;;408        PA2     ------> USART2_TX
;;;409        PA3     ------> USART2_RX 
;;;410        */
;;;411        HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2|GPIO_PIN_3);
000036  210c              MOVS     r1,#0xc
000038  f7fffffe          BL       HAL_GPIO_DeInit
;;;412    
;;;413        /* USART2 interrupt DeInit */
;;;414        HAL_NVIC_DisableIRQ(USART2_IRQn);
00003c  e8bd4010          POP      {r4,lr}
000040  2026              MOVS     r0,#0x26
000042  f7ffbffe          B.W      HAL_NVIC_DisableIRQ
                  |L13.70|
;;;415      }
;;;416    
;;;417    }
000046  bd10              POP      {r4,pc}
;;;418    
                          ENDP

                  |L13.72|
                          DCD      0x40013800
                  |L13.76|
                          DCD      0x40021000
                  |L13.80|
                          DCD      0x40010800
                  |L13.84|
                          DCD      0x40004400

                          AREA ||i.HAL_UART_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_UART_MspInit PROC
;;;331    
;;;332    void HAL_UART_MspInit(UART_HandleTypeDef* huart)
000000  b570              PUSH     {r4-r6,lr}
;;;333    {
000002  b086              SUB      sp,sp,#0x18
;;;334    
;;;335      GPIO_InitTypeDef GPIO_InitStruct;
;;;336      if(huart->Instance==USART1)
000004  4e27              LDR      r6,|L14.164|
;;;337      {
;;;338        /* Peripheral clock enable */
;;;339        __HAL_RCC_USART1_CLK_ENABLE();
;;;340      
;;;341        /**USART1 GPIO Configuration    
;;;342        PA9     ------> USART1_TX
;;;343        PA10     ------> USART1_RX 
;;;344        */
;;;345        GPIO_InitStruct.Pin = GPIO_PIN_9;
;;;346        GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
000006  6801              LDR      r1,[r0,#0]
000008  2400              MOVS     r4,#0                 ;336
00000a  4a27              LDR      r2,|L14.168|
00000c  2002              MOVS     r0,#2
;;;347        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
00000e  2303              MOVS     r3,#3
;;;348        HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
000010  4d26              LDR      r5,|L14.172|
000012  42b1              CMP      r1,r6                 ;336
000014  d121              BNE      |L14.90|
000016  6991              LDR      r1,[r2,#0x18]         ;339
000018  f4414180          ORR      r1,r1,#0x4000         ;339
00001c  6191              STR      r1,[r2,#0x18]         ;339
00001e  6991              LDR      r1,[r2,#0x18]         ;339
000020  f4014180          AND      r1,r1,#0x4000         ;339
000024  9101              STR      r1,[sp,#4]            ;339
000026  0201              LSLS     r1,r0,#8              ;345
000028  9102              STR      r1,[sp,#8]            ;345
00002a  9003              STR      r0,[sp,#0xc]          ;346
00002c  9305              STR      r3,[sp,#0x14]         ;347
00002e  a902              ADD      r1,sp,#8
000030  4628              MOV      r0,r5
000032  f7fffffe          BL       HAL_GPIO_Init
;;;349    
;;;350        GPIO_InitStruct.Pin = GPIO_PIN_10;
000036  1529              ASRS     r1,r5,#20
000038  9102              STR      r1,[sp,#8]
;;;351        GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
00003a  9403              STR      r4,[sp,#0xc]
;;;352        GPIO_InitStruct.Pull = GPIO_NOPULL;
00003c  9404              STR      r4,[sp,#0x10]
;;;353        HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
00003e  a902              ADD      r1,sp,#8
000040  4628              MOV      r0,r5
000042  f7fffffe          BL       HAL_GPIO_Init
;;;354    
;;;355        /* USART1 interrupt Init */
;;;356        HAL_NVIC_SetPriority(USART1_IRQn, 1, 0);
000046  2200              MOVS     r2,#0
000048  2101              MOVS     r1,#1
00004a  2025              MOVS     r0,#0x25
00004c  f7fffffe          BL       HAL_NVIC_SetPriority
;;;357        HAL_NVIC_EnableIRQ(USART1_IRQn);
000050  2025              MOVS     r0,#0x25
000052  f7fffffe          BL       HAL_NVIC_EnableIRQ
                  |L14.86|
;;;358      }
;;;359      else if(huart->Instance==USART2)
;;;360      {
;;;361        /* Peripheral clock enable */
;;;362        __HAL_RCC_USART2_CLK_ENABLE();
;;;363      
;;;364        /**USART2 GPIO Configuration    
;;;365        PA2     ------> USART2_TX
;;;366        PA3     ------> USART2_RX 
;;;367        */
;;;368        GPIO_InitStruct.Pin = GPIO_PIN_2;
;;;369        GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
;;;370        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
;;;371        HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
;;;372    
;;;373        GPIO_InitStruct.Pin = GPIO_PIN_3;
;;;374        GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
;;;375        GPIO_InitStruct.Pull = GPIO_NOPULL;
;;;376        HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
;;;377    
;;;378        /* USART2 interrupt Init */
;;;379        HAL_NVIC_SetPriority(USART2_IRQn, 2, 0);
;;;380        HAL_NVIC_EnableIRQ(USART2_IRQn);
;;;381      }
;;;382    
;;;383    }
000056  b006              ADD      sp,sp,#0x18
000058  bd70              POP      {r4-r6,pc}
                  |L14.90|
00005a  4e15              LDR      r6,|L14.176|
00005c  42b1              CMP      r1,r6                 ;359
00005e  d1fa              BNE      |L14.86|
000060  69d1              LDR      r1,[r2,#0x1c]         ;362
000062  f4413100          ORR      r1,r1,#0x20000        ;362
000066  61d1              STR      r1,[r2,#0x1c]         ;362
000068  69d1              LDR      r1,[r2,#0x1c]         ;362
00006a  f4013100          AND      r1,r1,#0x20000        ;362
00006e  9101              STR      r1,[sp,#4]            ;362
000070  2104              MOVS     r1,#4                 ;368
000072  9102              STR      r1,[sp,#8]            ;368
000074  9003              STR      r0,[sp,#0xc]          ;369
000076  9305              STR      r3,[sp,#0x14]         ;370
000078  a902              ADD      r1,sp,#8              ;371
00007a  4628              MOV      r0,r5                 ;371
00007c  f7fffffe          BL       HAL_GPIO_Init
000080  2108              MOVS     r1,#8                 ;373
000082  9102              STR      r1,[sp,#8]            ;373
000084  9403              STR      r4,[sp,#0xc]          ;374
000086  9404              STR      r4,[sp,#0x10]         ;375
000088  a902              ADD      r1,sp,#8              ;376
00008a  4628              MOV      r0,r5                 ;376
00008c  f7fffffe          BL       HAL_GPIO_Init
000090  2200              MOVS     r2,#0                 ;379
000092  2102              MOVS     r1,#2                 ;379
000094  2026              MOVS     r0,#0x26              ;379
000096  f7fffffe          BL       HAL_NVIC_SetPriority
00009a  2026              MOVS     r0,#0x26              ;380
00009c  f7fffffe          BL       HAL_NVIC_EnableIRQ
0000a0  e7d9              B        |L14.86|
;;;384    
                          ENDP

0000a2  0000              DCW      0x0000
                  |L14.164|
                          DCD      0x40013800
                  |L14.168|
                          DCD      0x40021000
                  |L14.172|
                          DCD      0x40010800
                  |L14.176|
                          DCD      0x40004400

;*** Start embedded assembler ***

#line 1 "../Src/stm32f1xx_hal_msp.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f1xx_hal_msp_c_d46e2bee____REV16|
#line 441 "C:\\Keil\\ARM\\PACK\\ARM\\CMSIS\\5.0.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___19_stm32f1xx_hal_msp_c_d46e2bee____REV16| PROC
#line 442

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f1xx_hal_msp_c_d46e2bee____REVSH|
#line 456
|__asm___19_stm32f1xx_hal_msp_c_d46e2bee____REVSH| PROC
#line 457

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f1xx_hal_msp_c_d46e2bee____RRX|
#line 643
|__asm___19_stm32f1xx_hal_msp_c_d46e2bee____RRX| PROC
#line 644

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
