; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\de-170318\signal.o --asm_dir=.\Lst\ --list_dir=.\Lst\ --depend=.\de-170318\signal.d --cpu=Cortex-M3 --apcs=interwork -O1 --diag_suppress=9931 -I..\Inc -I..\Drivers\STM32F1xx_HAL_Driver\Inc -I..\Drivers\STM32F1xx_HAL_Driver\Inc\Legacy -I..\Drivers\CMSIS\Device\ST\STM32F1xx\Include -I.\RTE\_DE-170318 -IC:\Keil\ARM\PACK\ARM\CMSIS\5.0.0\CMSIS\Include -IC:\Keil\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=526 -D_RTE_ -DSTM32F10X_MD -DUSE_HAL_DRIVER -DSTM32F103xB --omf_browse=.\de-170318\signal.crf ..\Src\signal.c]
                          THUMB

                          AREA ||i.SIGNAL_Service||, CODE, READONLY, ALIGN=2

                  SIGNAL_Service PROC
;;;42     /* Program code   ------------------------------------------------------------*/
;;;43     void SIGNAL_Service(void)
000000  e92d43f0          PUSH     {r4-r9,lr}
;;;44     {
000004  b087              SUB      sp,sp,#0x1c
;;;45         RTC_TimeTypeDef time_sig;
;;;46         RTC_DateTypeDef date_sig;
;;;47     	static uint32_t signal_pcnt = 0U;
;;;48     	static uint32_t temp_minute = 0U;
;;;49         static uint32_t signal_timer = 0U;
;;;50         static uint32_t signal_time = 0U;
;;;51         static uint32_t room_status_timer = 0U;
;;;52         static uint32_t room_status_time = 0U;
;;;53     	uint8_t br_tmp_cnt, br_tmp_period;
;;;54     	uint32_t room_time, real_time;
;;;55         uint8_t buff[8];
;;;56     	
;;;57     	if(eComState == COM_PACKET_RECEIVED) RS485_Service();
000006  48fe              LDR      r0,|L1.1024|
000008  7800              LDRB     r0,[r0,#0]  ; eComState
00000a  2802              CMP      r0,#2
00000c  d101              BNE      |L1.18|
00000e  f7fffffe          BL       RS485_Service
                  |L1.18|
;;;58     	/****************************************************/
;;;59     	/*	R O O M   S T A T U S   P R O C E S S I N G		*/
;;;60     	/****************************************************/
;;;61         HAL_RTC_GetTime(&hrtc, &time_sig, RTC_FORMAT_BCD);	
000012  2201              MOVS     r2,#1
000014  a906              ADD      r1,sp,#0x18
000016  48fb              LDR      r0,|L1.1028|
000018  f7fffffe          BL       HAL_RTC_GetTime
;;;62         
;;;63     	if(temp_minute != time_sig.Minutes)
00001c  4ffa              LDR      r7,|L1.1032|
00001e  f89d0019          LDRB     r0,[sp,#0x19]
;;;64     	{
;;;65     		temp_minute = time_sig.Minutes;
;;;66     		HAL_RTC_GetDate(&hrtc, &date_sig, RTC_FORMAT_BCD);
;;;67     		room_time = ((aRoomPowerExpiryDateTime[2] << 16U) +  (aRoomPowerExpiryDateTime[1] << 8U) + aRoomPowerExpiryDateTime[0]);
;;;68     		real_time = ((date_sig.Year << 16U) + (date_sig.Month << 8U) + date_sig.Date);
;;;69     
;;;70     		if((room_time > real_time)  \
;;;71     			&& (time_sig.Hours == ROOM_CLEANING_TIME )  \
;;;72     			&& (time_sig.Minutes == 0U) \
;;;73     			&& IsSIGNAL_ExpiryTimeFromGuestCardSet() \
;;;74     			&& (ROOM_Status == ROOM_BUSY))
;;;75     
;;;76     		{	
;;;77     			ROOM_Status = ROOM_CLEANING;
;;;78     			
;;;79     			buff[0] = EE_BEDDING_REPL_PERIOD_ADDRESS >> 8U;
;;;80     			buff[1] = EE_BEDDING_REPL_PERIOD_ADDRESS & 0xFFU;
;;;81     			if (HAL_I2C_Master_Transmit(&hi2c1, I2C_EE_WRITE, buff, 2U, I2C_EE_TIMEOUT) != HAL_OK) Error_Handler();
000022  2600              MOVS     r6,#0
000024  68b9              LDR      r1,[r7,#8]            ;63  ; temp_minute
;;;82     			if (HAL_I2C_Master_Receive(&hi2c1, I2C_EE_READ, &br_tmp_period, 1U, I2C_EE_TIMEOUT) != HAL_OK) Error_Handler();
;;;83     			
;;;84     			if(br_tmp_period != 0U)
;;;85     			{
;;;86     				buff[0] = EE_BEDDING_REPL_COUNTER_ADDRESS >> 8U;
;;;87     				buff[1] = EE_BEDDING_REPL_COUNTER_ADDRESS & 0xFFU;
000026  f04f0938          MOV      r9,#0x38
00002a  f04f0805          MOV      r8,#5                 ;81
00002e  4288              CMP      r0,r1                 ;63
000030  d02d              BEQ      |L1.142|
000032  60b8              STR      r0,[r7,#8]            ;65  ; temp_minute
000034  2201              MOVS     r2,#1                 ;66
000036  a905              ADD      r1,sp,#0x14           ;66
000038  48f2              LDR      r0,|L1.1028|
00003a  f7fffffe          BL       HAL_RTC_GetDate
00003e  f1070020          ADD      r0,r7,#0x20           ;67
000042  7881              LDRB     r1,[r0,#2]            ;67  ; aRoomPowerExpiryDateTime
000044  7842              LDRB     r2,[r0,#1]            ;67  ; aRoomPowerExpiryDateTime
000046  0409              LSLS     r1,r1,#16             ;67
000048  7800              LDRB     r0,[r0,#0]            ;67  ; aRoomPowerExpiryDateTime
00004a  eb012102          ADD      r1,r1,r2,LSL #8       ;67
00004e  4408              ADD      r0,r0,r1              ;67
000050  f89d1017          LDRB     r1,[sp,#0x17]         ;68
000054  f89d2015          LDRB     r2,[sp,#0x15]         ;68
000058  0409              LSLS     r1,r1,#16             ;68
00005a  eb012102          ADD      r1,r1,r2,LSL #8       ;68
00005e  f89d2016          LDRB     r2,[sp,#0x16]         ;68
000062  4411              ADD      r1,r1,r2              ;68
000064  4288              CMP      r0,r1                 ;70
000066  d90c              BLS      |L1.130|
000068  f89d2018          LDRB     r2,[sp,#0x18]         ;71
00006c  2a08              CMP      r2,#8                 ;71
00006e  d108              BNE      |L1.130|
000070  f89d2019          LDRB     r2,[sp,#0x19]         ;72
000074  b92a              CBNZ     r2,|L1.130|
000076  69fa              LDR      r2,[r7,#0x1c]         ;73  ; signal_flags
000078  07d2              LSLS     r2,r2,#31             ;73
00007a  d002              BEQ      |L1.130|
00007c  787a              LDRB     r2,[r7,#1]            ;74  ; ROOM_Status
00007e  2a02              CMP      r2,#2                 ;74
000080  d006              BEQ      |L1.144|
                  |L1.130|
;;;88     				if (HAL_I2C_Master_Transmit(&hi2c1, I2C_EE_WRITE, buff, 2U, I2C_EE_TIMEOUT) != HAL_OK) Error_Handler();
;;;89     				if (HAL_I2C_Master_Receive(&hi2c1, I2C_EE_READ, &br_tmp_cnt, 1U, I2C_EE_TIMEOUT) != HAL_OK) Error_Handler();
;;;90     				br_tmp_cnt++;
;;;91     				
;;;92     				if(br_tmp_cnt >= br_tmp_period)
;;;93     				{
;;;94     					ROOM_Status = ROOM_BEDDING_REPLACEMENT;
;;;95     					buff[2] = 0U;
;;;96     				}
;;;97     				else
;;;98     				{
;;;99     					buff[2] = br_tmp_cnt;
;;;100    				}
;;;101    			}
;;;102    		}
;;;103    		else if((room_time == real_time) 	\
000082  4288              CMP      r0,r1
000084  d17c              BNE      |L1.384|
;;;104    				&& (time_sig.Hours == ROOM_CLEANING_TIME) \
000086  f89d0018          LDRB     r0,[sp,#0x18]
00008a  2808              CMP      r0,#8
00008c  d04b              BEQ      |L1.294|
                  |L1.142|
00008e  e077              B        |L1.384|
                  |L1.144|
000090  2003              MOVS     r0,#3                 ;77
000092  7078              STRB     r0,[r7,#1]            ;77
000094  f88d6004          STRB     r6,[sp,#4]            ;79
000098  2039              MOVS     r0,#0x39              ;80
00009a  f88d0005          STRB     r0,[sp,#5]            ;80
00009e  2302              MOVS     r3,#2                 ;81
0000a0  aa01              ADD      r2,sp,#4              ;81
0000a2  21a0              MOVS     r1,#0xa0              ;81
0000a4  48d9              LDR      r0,|L1.1036|
0000a6  f8cd8000          STR      r8,[sp,#0]            ;81
0000aa  f7fffffe          BL       HAL_I2C_Master_Transmit
0000ae  b108              CBZ      r0,|L1.180|
0000b0  f7fffffe          BL       Error_Handler
                  |L1.180|
0000b4  2301              MOVS     r3,#1                 ;82
0000b6  aa03              ADD      r2,sp,#0xc            ;82
0000b8  21a1              MOVS     r1,#0xa1              ;82
0000ba  48d4              LDR      r0,|L1.1036|
0000bc  f8cd8000          STR      r8,[sp,#0]            ;82
0000c0  f7fffffe          BL       HAL_I2C_Master_Receive
0000c4  b108              CBZ      r0,|L1.202|
0000c6  f7fffffe          BL       Error_Handler
                  |L1.202|
0000ca  f89d000c          LDRB     r0,[sp,#0xc]          ;84
0000ce  b330              CBZ      r0,|L1.286|
0000d0  f88d6004          STRB     r6,[sp,#4]            ;86
0000d4  f88d9005          STRB     r9,[sp,#5]            ;87
0000d8  2302              MOVS     r3,#2                 ;88
0000da  aa01              ADD      r2,sp,#4              ;88
0000dc  21a0              MOVS     r1,#0xa0              ;88
0000de  48cb              LDR      r0,|L1.1036|
0000e0  f8cd8000          STR      r8,[sp,#0]            ;88
0000e4  f7fffffe          BL       HAL_I2C_Master_Transmit
0000e8  b108              CBZ      r0,|L1.238|
0000ea  f7fffffe          BL       Error_Handler
                  |L1.238|
0000ee  2301              MOVS     r3,#1                 ;89
0000f0  aa04              ADD      r2,sp,#0x10           ;89
0000f2  21a1              MOVS     r1,#0xa1              ;89
0000f4  48c5              LDR      r0,|L1.1036|
0000f6  f8cd8000          STR      r8,[sp,#0]            ;89
0000fa  f7fffffe          BL       HAL_I2C_Master_Receive
0000fe  b108              CBZ      r0,|L1.260|
000100  f7fffffe          BL       Error_Handler
                  |L1.260|
000104  f89d0010          LDRB     r0,[sp,#0x10]         ;90
000108  1c40              ADDS     r0,r0,#1              ;90
00010a  b2c0              UXTB     r0,r0                 ;90
00010c  9004              STR      r0,[sp,#0x10]         ;90
00010e  f89d100c          LDRB     r1,[sp,#0xc]          ;92
000112  4288              CMP      r0,r1                 ;92
000114  d304              BCC      |L1.288|
000116  2004              MOVS     r0,#4                 ;94
000118  7078              STRB     r0,[r7,#1]            ;94
00011a  f88d6006          STRB     r6,[sp,#6]            ;95
                  |L1.286|
00011e  e02f              B        |L1.384|
                  |L1.288|
000120  f88d0006          STRB     r0,[sp,#6]            ;99
000124  e02c              B        |L1.384|
                  |L1.294|
;;;105    				&& (time_sig.Minutes == 0U) \
000126  f89d0019          LDRB     r0,[sp,#0x19]
00012a  bb48              CBNZ     r0,|L1.384|
;;;106    				&& IsSIGNAL_ExpiryTimeFromGuestCardSet() \
00012c  69f8              LDR      r0,[r7,#0x1c]  ; signal_flags
00012e  07c0              LSLS     r0,r0,#31
000130  d026              BEQ      |L1.384|
;;;107    			 	&& ((ROOM_Status == ROOM_BUSY) \
000132  7878              LDRB     r0,[r7,#1]  ; ROOM_Status
000134  2802              CMP      r0,#2
000136  d003              BEQ      |L1.320|
;;;108    					|| (ROOM_Status == ROOM_CLEANING) \
000138  2803              CMP      r0,#3
00013a  d001              BEQ      |L1.320|
;;;109    					|| (ROOM_Status == ROOM_BEDDING_REPLACEMENT)))
00013c  2804              CMP      r0,#4
00013e  d11f              BNE      |L1.384|
                  |L1.320|
;;;110    		{
;;;111    			buff[0] = EE_BEDDING_REPL_COUNTER_ADDRESS >> 8U;
000140  f88d6004          STRB     r6,[sp,#4]
;;;112    			buff[1] = EE_BEDDING_REPL_COUNTER_ADDRESS & 0xFFU;
000144  f88d9005          STRB     r9,[sp,#5]
;;;113    			buff[2] = 0U;
000148  f88d6006          STRB     r6,[sp,#6]
;;;114    			if (HAL_I2C_Master_Transmit(&hi2c1, I2C_EE_WRITE, buff, 3U, I2C_EE_TIMEOUT) != HAL_OK) Error_Handler();
00014c  2303              MOVS     r3,#3
00014e  aa01              ADD      r2,sp,#4
000150  21a0              MOVS     r1,#0xa0
000152  48ae              LDR      r0,|L1.1036|
000154  f8cd8000          STR      r8,[sp,#0]
000158  f7fffffe          BL       HAL_I2C_Master_Transmit
00015c  b108              CBZ      r0,|L1.354|
00015e  f7fffffe          BL       Error_Handler
                  |L1.354|
;;;115    			if (HAL_I2C_IsDeviceReady(&hi2c1, I2C_EE_READ, I2C_EE_TRIALS, I2C_EE_WRITE_DELAY) != HAL_OK) Error_Handler();
000162  230f              MOVS     r3,#0xf
000164  2264              MOVS     r2,#0x64
000166  21a1              MOVS     r1,#0xa1
000168  48a8              LDR      r0,|L1.1036|
00016a  f7fffffe          BL       HAL_I2C_IsDeviceReady
00016e  b108              CBZ      r0,|L1.372|
000170  f7fffffe          BL       Error_Handler
                  |L1.372|
;;;116    			ROOM_Status = ROOM_GENERAL_CLEANING;
000174  f8878001          STRB     r8,[r7,#1]
;;;117    			SIGNAL_ExpiryTimeFromGuestCardReset();
000178  69f8              LDR      r0,[r7,#0x1c]  ; signal_flags
00017a  f0200001          BIC      r0,r0,#1
00017e  61f8              STR      r0,[r7,#0x1c]  ; signal_flags
                  |L1.384|
;;;118    		}		
;;;119    	}
;;;120    	
;;;121    	/****************************************************/
;;;122    	/*		R O O M		S T A T U S		S I G N A L		*/
;;;123    	/****************************************************/
;;;124    	if(ROOM_OldStatus != ROOM_Status)
000180  78b8              LDRB     r0,[r7,#2]  ; ROOM_OldStatus
000182  7879              LDRB     r1,[r7,#1]  ; ROOM_Status
;;;125    	{
;;;126            if((HAL_GetTick() - room_status_timer) > room_status_time)
;;;127            {
;;;128                switch (ROOM_Status)
;;;129                {
;;;130                    case ROOM_IDLE:
;;;131                    {
;;;132                        buff[0] = EE_BEDDING_REPL_COUNTER_ADDRESS >> 8U;
;;;133                        buff[1] = EE_BEDDING_REPL_COUNTER_ADDRESS & 0xFFU;
;;;134                        buff[2] = 0U;
;;;135                        if (HAL_I2C_Master_Transmit(&hi2c1, I2C_EE_WRITE, buff, 3U, I2C_EE_TIMEOUT) != HAL_OK) Error_Handler();
;;;136                        if (HAL_I2C_IsDeviceReady(&hi2c1, I2C_EE_READ, I2C_EE_TRIALS, I2C_EE_WRITE_DELAY) != HAL_OK) Error_Handler();
;;;137                        buff[0] = EE_ROOM_POWER_TIMEOUT >> 8U;
;;;138                        buff[1] = EE_ROOM_POWER_TIMEOUT & 0xFFU;
;;;139                        buff[2] = 0U;
;;;140                        buff[3] = 0U;
;;;141                        buff[4] = 0U;
;;;142                        buff[5] = 0U;
;;;143                        buff[6] = 0U;
;;;144                        if (HAL_I2C_Master_Transmit(&hi2c1, I2C_EE_WRITE, buff, 7U, I2C_EE_TIMEOUT) != HAL_OK) Error_Handler();
;;;145                        if (HAL_I2C_IsDeviceReady(&hi2c1, I2C_EE_READ, I2C_EE_TRIALS, I2C_EE_WRITE_DELAY) != HAL_OK) Error_Handler();
;;;146                        DISPLAY_CleanUpImageDelete();
;;;147                        DISPLAY_SosAlarmImageDelete();
;;;148                        DISPLAY_DoNotDisturbImageDelete();				
;;;149                        DISPLAY_GeneralCleanUpImageDelete();
;;;150                        DISPLAY_BeddingReplacementImageDelete();
;;;151                        DISPLAY_MinibarUsedImageDelete();
;;;152                        DISPLAY_FireExitImageDelete();
;;;153                        DISPLAY_FireAlarmImageDelete();
;;;154                        SIGNAL_ExpiryTimeFromGuestCardReset();	
;;;155                        DoNotDisturbModul_Off();
000184  4da2              LDR      r5,|L1.1040|
000186  4288              CMP      r0,r1                 ;124
000188  d07d              BEQ      |L1.646|
00018a  f7fffffe          BL       HAL_GetTick
00018e  6979              LDR      r1,[r7,#0x14]         ;126  ; room_status_timer
000190  1a40              SUBS     r0,r0,r1              ;126
000192  69b9              LDR      r1,[r7,#0x18]         ;126  ; room_status_time
000194  4288              CMP      r0,r1                 ;126
000196  d976              BLS      |L1.646|
000198  7878              LDRB     r0,[r7,#1]            ;128  ; ROOM_Status
00019a  4c9e              LDR      r4,|L1.1044|
00019c  280c              CMP      r0,#0xc               ;128
00019e  d273              BCS      |L1.648|
0001a0  e8dff000          TBB      [pc,r0]               ;128
0001a4  0699f1ef          DCB      0x06,0x99,0xf1,0xef
0001a8  eeedeceb          DCB      0xee,0xed,0xec,0xeb
0001ac  ea72e9e8          DCB      0xea,0x72,0xe9,0xe8
0001b0  f88d6004          STRB     r6,[sp,#4]            ;132
0001b4  f88d9005          STRB     r9,[sp,#5]            ;133
0001b8  f88d6006          STRB     r6,[sp,#6]            ;134
0001bc  2303              MOVS     r3,#3                 ;135
0001be  aa01              ADD      r2,sp,#4              ;135
0001c0  21a0              MOVS     r1,#0xa0              ;135
0001c2  4892              LDR      r0,|L1.1036|
0001c4  f8cd8000          STR      r8,[sp,#0]            ;135
0001c8  f7fffffe          BL       HAL_I2C_Master_Transmit
0001cc  b108              CBZ      r0,|L1.466|
0001ce  f7fffffe          BL       Error_Handler
                  |L1.466|
0001d2  230f              MOVS     r3,#0xf               ;136
0001d4  2264              MOVS     r2,#0x64              ;136
0001d6  21a1              MOVS     r1,#0xa1              ;136
0001d8  488c              LDR      r0,|L1.1036|
0001da  f7fffffe          BL       HAL_I2C_IsDeviceReady
0001de  b108              CBZ      r0,|L1.484|
0001e0  f7fffffe          BL       Error_Handler
                  |L1.484|
0001e4  f88d6004          STRB     r6,[sp,#4]            ;137
0001e8  2030              MOVS     r0,#0x30              ;138
0001ea  f88d0005          STRB     r0,[sp,#5]            ;138
0001ee  f88d6006          STRB     r6,[sp,#6]            ;139
0001f2  f88d6007          STRB     r6,[sp,#7]            ;140
0001f6  f88d6008          STRB     r6,[sp,#8]            ;141
0001fa  f88d6009          STRB     r6,[sp,#9]            ;142
0001fe  f88d600a          STRB     r6,[sp,#0xa]          ;143
000202  2307              MOVS     r3,#7                 ;144
000204  aa01              ADD      r2,sp,#4              ;144
000206  21a0              MOVS     r1,#0xa0              ;144
000208  4880              LDR      r0,|L1.1036|
00020a  f8cd8000          STR      r8,[sp,#0]            ;144
00020e  f7fffffe          BL       HAL_I2C_Master_Transmit
000212  b108              CBZ      r0,|L1.536|
000214  f7fffffe          BL       Error_Handler
                  |L1.536|
000218  230f              MOVS     r3,#0xf               ;145
00021a  2264              MOVS     r2,#0x64              ;145
00021c  21a1              MOVS     r1,#0xa1              ;145
00021e  487b              LDR      r0,|L1.1036|
000220  f7fffffe          BL       HAL_I2C_IsDeviceReady
000224  b108              CBZ      r0,|L1.554|
000226  f7fffffe          BL       Error_Handler
                  |L1.554|
00022a  6820              LDR      r0,[r4,#0]            ;146  ; display_flags
00022c  f0200040          BIC      r0,r0,#0x40           ;146
000230  6020              STR      r0,[r4,#0]            ;146  ; display_flags
000232  6820              LDR      r0,[r4,#0]            ;146  ; display_flags
000234  f0404000          ORR      r0,r0,#0x80000000     ;146
000238  6020              STR      r0,[r4,#0]            ;146  ; display_flags
00023a  6820              LDR      r0,[r4,#0]            ;147  ; display_flags
00023c  f0200020          BIC      r0,r0,#0x20           ;147
000240  6020              STR      r0,[r4,#0]            ;147  ; display_flags
000242  6820              LDR      r0,[r4,#0]            ;147  ; display_flags
000244  f0404000          ORR      r0,r0,#0x80000000     ;147
000248  6020              STR      r0,[r4,#0]            ;147  ; display_flags
00024a  6820              LDR      r0,[r4,#0]            ;148  ; display_flags
00024c  f0200010          BIC      r0,r0,#0x10           ;148
000250  6020              STR      r0,[r4,#0]            ;148  ; display_flags
000252  6820              LDR      r0,[r4,#0]            ;148  ; display_flags
000254  f0404000          ORR      r0,r0,#0x80000000     ;148
000258  6020              STR      r0,[r4,#0]            ;148  ; display_flags
00025a  6820              LDR      r0,[r4,#0]            ;149  ; display_flags
00025c  f0200080          BIC      r0,r0,#0x80           ;149
000260  6020              STR      r0,[r4,#0]            ;149  ; display_flags
000262  6820              LDR      r0,[r4,#0]            ;149  ; display_flags
000264  f0404000          ORR      r0,r0,#0x80000000     ;149
000268  6020              STR      r0,[r4,#0]            ;149  ; display_flags
00026a  6820              LDR      r0,[r4,#0]            ;150  ; display_flags
00026c  f4203000          BIC      r0,r0,#0x20000        ;150
000270  6020              STR      r0,[r4,#0]            ;150  ; display_flags
000272  6820              LDR      r0,[r4,#0]            ;150  ; display_flags
000274  f0404000          ORR      r0,r0,#0x80000000     ;150
000278  6020              STR      r0,[r4,#0]            ;150  ; display_flags
00027a  6820              LDR      r0,[r4,#0]            ;151  ; display_flags
00027c  f4205000          BIC      r0,r0,#0x2000         ;151
000280  6020              STR      r0,[r4,#0]            ;151  ; display_flags
000282  6820              LDR      r0,[r4,#0]            ;151  ; display_flags
000284  e001              B        |L1.650|
                  |L1.646|
000286  e19f              B        |L1.1480|
                  |L1.648|
000288  e198              B        |L1.1468|
                  |L1.650|
00028a  f0404000          ORR      r0,r0,#0x80000000     ;151
00028e  6020              STR      r0,[r4,#0]            ;151  ; display_flags
000290  6820              LDR      r0,[r4,#0]            ;152  ; display_flags
000292  f4204080          BIC      r0,r0,#0x4000         ;152
000296  6020              STR      r0,[r4,#0]            ;152  ; display_flags
000298  6820              LDR      r0,[r4,#0]            ;152  ; display_flags
00029a  f0404000          ORR      r0,r0,#0x80000000     ;152
00029e  6020              STR      r0,[r4,#0]            ;152  ; display_flags
0002a0  6820              LDR      r0,[r4,#0]            ;153  ; display_flags
0002a2  f4204000          BIC      r0,r0,#0x8000         ;153
0002a6  6020              STR      r0,[r4,#0]            ;153  ; display_flags
0002a8  6820              LDR      r0,[r4,#0]            ;153  ; display_flags
0002aa  f0404000          ORR      r0,r0,#0x80000000     ;153
0002ae  6020              STR      r0,[r4,#0]            ;153  ; display_flags
0002b0  69f8              LDR      r0,[r7,#0x1c]         ;154  ; signal_flags
0002b2  f0200001          BIC      r0,r0,#1              ;154
0002b6  61f8              STR      r0,[r7,#0x1c]         ;154  ; signal_flags
0002b8  7828              LDRB     r0,[r5,#0]  ; dout_0_7
0002ba  f0200002          BIC      r0,r0,#2
0002be  7028              STRB     r0,[r5,#0]
;;;156                        PowerContactor_Off();
0002c0  7828              LDRB     r0,[r5,#0]  ; dout_0_7
0002c2  f0400001          ORR      r0,r0,#1
0002c6  7028              STRB     r0,[r5,#0]
;;;157                        HVAC_Contactor_Off();
0002c8  7828              LDRB     r0,[r5,#0]  ; dout_0_7
0002ca  f0200010          BIC      r0,r0,#0x10
0002ce  7028              STRB     r0,[r5,#0]
;;;158    //                    HVAC_Thermostat_Off();
;;;159                        SaveRoomStatus();
0002d0  f7fffffe          BL       SaveRoomStatus
;;;160                        break;
0002d4  e172              B        |L1.1468|
;;;161                    }	
;;;162    
;;;163                    case ROOM_READY:
;;;164                    {
;;;165                        DISPLAY_CleanUpImageDelete();
0002d6  6820              LDR      r0,[r4,#0]  ; display_flags
0002d8  f0200040          BIC      r0,r0,#0x40
0002dc  6020              STR      r0,[r4,#0]  ; display_flags
0002de  6820              LDR      r0,[r4,#0]  ; display_flags
0002e0  f0404000          ORR      r0,r0,#0x80000000
0002e4  6020              STR      r0,[r4,#0]  ; display_flags
;;;166                        DISPLAY_SosAlarmImageDelete();
0002e6  6820              LDR      r0,[r4,#0]  ; display_flags
0002e8  f0200020          BIC      r0,r0,#0x20
0002ec  6020              STR      r0,[r4,#0]  ; display_flags
0002ee  6820              LDR      r0,[r4,#0]  ; display_flags
0002f0  f0404000          ORR      r0,r0,#0x80000000
0002f4  6020              STR      r0,[r4,#0]  ; display_flags
;;;167                        DISPLAY_DoNotDisturbImageDelete();				
0002f6  6820              LDR      r0,[r4,#0]  ; display_flags
0002f8  f0200010          BIC      r0,r0,#0x10
0002fc  6020              STR      r0,[r4,#0]  ; display_flags
0002fe  6820              LDR      r0,[r4,#0]  ; display_flags
000300  f0404000          ORR      r0,r0,#0x80000000
000304  6020              STR      r0,[r4,#0]  ; display_flags
;;;168                        DISPLAY_GeneralCleanUpImageDelete();
000306  6820              LDR      r0,[r4,#0]  ; display_flags
000308  f0200080          BIC      r0,r0,#0x80
00030c  6020              STR      r0,[r4,#0]  ; display_flags
00030e  6820              LDR      r0,[r4,#0]  ; display_flags
000310  f0404000          ORR      r0,r0,#0x80000000
000314  6020              STR      r0,[r4,#0]  ; display_flags
;;;169                        DISPLAY_BeddingReplacementImageDelete();
000316  6820              LDR      r0,[r4,#0]  ; display_flags
000318  f4203000          BIC      r0,r0,#0x20000
00031c  6020              STR      r0,[r4,#0]  ; display_flags
00031e  6820              LDR      r0,[r4,#0]  ; display_flags
000320  f0404000          ORR      r0,r0,#0x80000000
000324  6020              STR      r0,[r4,#0]  ; display_flags
;;;170                        DISPLAY_MinibarUsedImageDelete();
000326  6820              LDR      r0,[r4,#0]  ; display_flags
000328  f4205000          BIC      r0,r0,#0x2000
00032c  6020              STR      r0,[r4,#0]  ; display_flags
00032e  6820              LDR      r0,[r4,#0]  ; display_flags
000330  f0404000          ORR      r0,r0,#0x80000000
000334  6020              STR      r0,[r4,#0]  ; display_flags
;;;171                        DISPLAY_FireExitImageDelete();
000336  6820              LDR      r0,[r4,#0]  ; display_flags
000338  f4204080          BIC      r0,r0,#0x4000
00033c  6020              STR      r0,[r4,#0]  ; display_flags
00033e  6820              LDR      r0,[r4,#0]  ; display_flags
000340  f0404000          ORR      r0,r0,#0x80000000
000344  6020              STR      r0,[r4,#0]  ; display_flags
;;;172                        DISPLAY_FireAlarmImageDelete();
000346  6820              LDR      r0,[r4,#0]  ; display_flags
000348  f4204000          BIC      r0,r0,#0x8000
00034c  6020              STR      r0,[r4,#0]  ; display_flags
00034e  6820              LDR      r0,[r4,#0]  ; display_flags
000350  f0404000          ORR      r0,r0,#0x80000000
000354  6020              STR      r0,[r4,#0]  ; display_flags
;;;173                        DISPLAY_RoomNumberImage();
000356  6820              LDR      r0,[r4,#0]  ; display_flags
000358  f0400008          ORR      r0,r0,#8
00035c  6020              STR      r0,[r4,#0]  ; display_flags
00035e  6820              LDR      r0,[r4,#0]  ; display_flags
000360  f0404000          ORR      r0,r0,#0x80000000
000364  6020              STR      r0,[r4,#0]  ; display_flags
;;;174                        DoNotDisturbModul_On();
000366  7828              LDRB     r0,[r5,#0]  ; dout_0_7
000368  f0400002          ORR      r0,r0,#2
00036c  7028              STRB     r0,[r5,#0]
;;;175                        SaveRoomStatus();
00036e  f7fffffe          BL       SaveRoomStatus
;;;176                        break;
000372  e123              B        |L1.1468|
000374  e10b              B        |L1.1422|
000376  e116              B        |L1.1446|
000378  e104              B        |L1.1412|
00037a  e0e4              B        |L1.1350|
00037c  e0b4              B        |L1.1256|
00037e  e094              B        |L1.1194|
000380  e074              B        |L1.1132|
000382  e054              B        |L1.1070|
000384  e7ff              B        |L1.902|
                  |L1.902|
;;;177                    }
;;;178                    
;;;179                    
;;;180                    case ROOM_BUSY:
;;;181                    {
;;;182                        DISPLAY_CleanUpImageDelete();
000386  6820              LDR      r0,[r4,#0]  ; display_flags
000388  f0200040          BIC      r0,r0,#0x40
00038c  6020              STR      r0,[r4,#0]  ; display_flags
00038e  6820              LDR      r0,[r4,#0]  ; display_flags
000390  f0404000          ORR      r0,r0,#0x80000000
000394  6020              STR      r0,[r4,#0]  ; display_flags
;;;183                        DISPLAY_SosAlarmImageDelete();
000396  6820              LDR      r0,[r4,#0]  ; display_flags
000398  f0200020          BIC      r0,r0,#0x20
00039c  6020              STR      r0,[r4,#0]  ; display_flags
00039e  6820              LDR      r0,[r4,#0]  ; display_flags
0003a0  f0404000          ORR      r0,r0,#0x80000000
0003a4  6020              STR      r0,[r4,#0]  ; display_flags
;;;184                        DISPLAY_GeneralCleanUpImageDelete();
0003a6  6820              LDR      r0,[r4,#0]  ; display_flags
0003a8  f0200080          BIC      r0,r0,#0x80
0003ac  6020              STR      r0,[r4,#0]  ; display_flags
0003ae  6820              LDR      r0,[r4,#0]  ; display_flags
0003b0  f0404000          ORR      r0,r0,#0x80000000
0003b4  6020              STR      r0,[r4,#0]  ; display_flags
;;;185                        DISPLAY_BeddingReplacementImageDelete();
0003b6  6820              LDR      r0,[r4,#0]  ; display_flags
0003b8  f4203000          BIC      r0,r0,#0x20000
0003bc  6020              STR      r0,[r4,#0]  ; display_flags
0003be  6820              LDR      r0,[r4,#0]  ; display_flags
0003c0  f0404000          ORR      r0,r0,#0x80000000
0003c4  6020              STR      r0,[r4,#0]  ; display_flags
;;;186                        DISPLAY_MinibarUsedImageDelete();
0003c6  6820              LDR      r0,[r4,#0]  ; display_flags
0003c8  f4205000          BIC      r0,r0,#0x2000
0003cc  6020              STR      r0,[r4,#0]  ; display_flags
0003ce  6820              LDR      r0,[r4,#0]  ; display_flags
0003d0  f0404000          ORR      r0,r0,#0x80000000
0003d4  6020              STR      r0,[r4,#0]  ; display_flags
;;;187                        DISPLAY_FireExitImageDelete();
0003d6  6820              LDR      r0,[r4,#0]  ; display_flags
0003d8  f4204080          BIC      r0,r0,#0x4000
0003dc  6020              STR      r0,[r4,#0]  ; display_flags
0003de  6820              LDR      r0,[r4,#0]  ; display_flags
0003e0  f0404000          ORR      r0,r0,#0x80000000
0003e4  6020              STR      r0,[r4,#0]  ; display_flags
;;;188                        DISPLAY_FireAlarmImageDelete();
0003e6  6820              LDR      r0,[r4,#0]  ; display_flags
0003e8  f4204000          BIC      r0,r0,#0x8000
0003ec  6020              STR      r0,[r4,#0]  ; display_flags
0003ee  6820              LDR      r0,[r4,#0]  ; display_flags
0003f0  f0404000          ORR      r0,r0,#0x80000000
0003f4  6020              STR      r0,[r4,#0]  ; display_flags
;;;189                        DISPLAY_RoomNumberImage();
0003f6  6820              LDR      r0,[r4,#0]  ; display_flags
0003f8  f0400008          ORR      r0,r0,#8
0003fc  6020              STR      r0,[r4,#0]  ; display_flags
0003fe  e00b              B        |L1.1048|
                  |L1.1024|
                          DCD      eComState
                  |L1.1028|
                          DCD      hrtc
                  |L1.1032|
                          DCD      ||.data||
                  |L1.1036|
                          DCD      hi2c1
                  |L1.1040|
                          DCD      dout_0_7
                  |L1.1044|
                          DCD      display_flags
                  |L1.1048|
000418  6820              LDR      r0,[r4,#0]  ; display_flags
00041a  f0404000          ORR      r0,r0,#0x80000000
00041e  6020              STR      r0,[r4,#0]  ; display_flags
;;;190                        DoNotDisturbModul_On();
000420  7828              LDRB     r0,[r5,#0]  ; dout_0_7
000422  f0400002          ORR      r0,r0,#2
000426  7028              STRB     r0,[r5,#0]
;;;191                        SaveRoomStatus();
000428  f7fffffe          BL       SaveRoomStatus
;;;192                        break;
00042c  e0c6              B        |L1.1468|
                  |L1.1070|
;;;193                    }
;;;194                    
;;;195                    
;;;196                    case ROOM_CLEANING:
;;;197                    {
;;;198                        DISPLAY_BeddingReplacementImageDelete();
00042e  6820              LDR      r0,[r4,#0]  ; display_flags
000430  f4203000          BIC      r0,r0,#0x20000
000434  6020              STR      r0,[r4,#0]  ; display_flags
000436  6820              LDR      r0,[r4,#0]  ; display_flags
000438  f0404000          ORR      r0,r0,#0x80000000
00043c  6020              STR      r0,[r4,#0]  ; display_flags
;;;199                        DISPLAY_GeneralCleanUpImageDelete();
00043e  6820              LDR      r0,[r4,#0]  ; display_flags
000440  f0200080          BIC      r0,r0,#0x80
000444  6020              STR      r0,[r4,#0]  ; display_flags
000446  6820              LDR      r0,[r4,#0]  ; display_flags
000448  f0404000          ORR      r0,r0,#0x80000000
00044c  6020              STR      r0,[r4,#0]  ; display_flags
;;;200                        DISPLAY_CleanUpImage();
00044e  6820              LDR      r0,[r4,#0]  ; display_flags
000450  f0400040          ORR      r0,r0,#0x40
000454  6020              STR      r0,[r4,#0]  ; display_flags
000456  6820              LDR      r0,[r4,#0]  ; display_flags
000458  f0404000          ORR      r0,r0,#0x80000000
00045c  6020              STR      r0,[r4,#0]  ; display_flags
;;;201                        DoNotDisturbModul_On();
00045e  7828              LDRB     r0,[r5,#0]  ; dout_0_7
000460  f0400002          ORR      r0,r0,#2
000464  7028              STRB     r0,[r5,#0]
;;;202                        SaveRoomStatus();
000466  f7fffffe          BL       SaveRoomStatus
;;;203                        break;
00046a  e0a7              B        |L1.1468|
                  |L1.1132|
;;;204                    }
;;;205                    
;;;206                    
;;;207                    case ROOM_BEDDING_REPLACEMENT:
;;;208                    {
;;;209                        DISPLAY_GeneralCleanUpImageDelete();
00046c  6820              LDR      r0,[r4,#0]  ; display_flags
00046e  f0200080          BIC      r0,r0,#0x80
000472  6020              STR      r0,[r4,#0]  ; display_flags
000474  6820              LDR      r0,[r4,#0]  ; display_flags
000476  f0404000          ORR      r0,r0,#0x80000000
00047a  6020              STR      r0,[r4,#0]  ; display_flags
;;;210                        DISPLAY_BeddingReplacementImage();
00047c  6820              LDR      r0,[r4,#0]  ; display_flags
00047e  f4403000          ORR      r0,r0,#0x20000
000482  6020              STR      r0,[r4,#0]  ; display_flags
000484  6820              LDR      r0,[r4,#0]  ; display_flags
000486  f0404000          ORR      r0,r0,#0x80000000
00048a  6020              STR      r0,[r4,#0]  ; display_flags
;;;211                        DISPLAY_CleanUpImageDelete();
00048c  6820              LDR      r0,[r4,#0]  ; display_flags
00048e  f0200040          BIC      r0,r0,#0x40
000492  6020              STR      r0,[r4,#0]  ; display_flags
000494  6820              LDR      r0,[r4,#0]  ; display_flags
000496  f0404000          ORR      r0,r0,#0x80000000
00049a  6020              STR      r0,[r4,#0]  ; display_flags
;;;212                        DoNotDisturbModul_On();
00049c  7828              LDRB     r0,[r5,#0]  ; dout_0_7
00049e  f0400002          ORR      r0,r0,#2
0004a2  7028              STRB     r0,[r5,#0]
;;;213                        SaveRoomStatus();
0004a4  f7fffffe          BL       SaveRoomStatus
;;;214                        break;
0004a8  e088              B        |L1.1468|
                  |L1.1194|
;;;215                    }
;;;216                    
;;;217                    
;;;218                    case ROOM_GENERAL_CLEANING:
;;;219                    {
;;;220                        DISPLAY_BeddingReplacementImageDelete();
0004aa  6820              LDR      r0,[r4,#0]  ; display_flags
0004ac  f4203000          BIC      r0,r0,#0x20000
0004b0  6020              STR      r0,[r4,#0]  ; display_flags
0004b2  6820              LDR      r0,[r4,#0]  ; display_flags
0004b4  f0404000          ORR      r0,r0,#0x80000000
0004b8  6020              STR      r0,[r4,#0]  ; display_flags
;;;221                        DISPLAY_GeneralCleanUpImage();
0004ba  6820              LDR      r0,[r4,#0]  ; display_flags
0004bc  f0400080          ORR      r0,r0,#0x80
0004c0  6020              STR      r0,[r4,#0]  ; display_flags
0004c2  6820              LDR      r0,[r4,#0]  ; display_flags
0004c4  f0404000          ORR      r0,r0,#0x80000000
0004c8  6020              STR      r0,[r4,#0]  ; display_flags
;;;222                        DISPLAY_CleanUpImageDelete();
0004ca  6820              LDR      r0,[r4,#0]  ; display_flags
0004cc  f0200040          BIC      r0,r0,#0x40
0004d0  6020              STR      r0,[r4,#0]  ; display_flags
0004d2  6820              LDR      r0,[r4,#0]  ; display_flags
0004d4  f0404000          ORR      r0,r0,#0x80000000
0004d8  6020              STR      r0,[r4,#0]  ; display_flags
;;;223                        DoNotDisturbModul_On();
0004da  7828              LDRB     r0,[r5,#0]  ; dout_0_7
0004dc  f0400002          ORR      r0,r0,#2
0004e0  7028              STRB     r0,[r5,#0]
;;;224                        SaveRoomStatus();
0004e2  f7fffffe          BL       SaveRoomStatus
;;;225                        break;
0004e6  e069              B        |L1.1468|
                  |L1.1256|
;;;226                    }
;;;227                    
;;;228                    
;;;229                    case ROOM_OUT_OF_ORDER:
;;;230                    {
;;;231                        DISPLAY_BeddingReplacementImageDelete();
0004e8  6820              LDR      r0,[r4,#0]  ; display_flags
0004ea  f4203000          BIC      r0,r0,#0x20000
0004ee  6020              STR      r0,[r4,#0]  ; display_flags
0004f0  6820              LDR      r0,[r4,#0]  ; display_flags
0004f2  f0404000          ORR      r0,r0,#0x80000000
0004f6  6020              STR      r0,[r4,#0]  ; display_flags
;;;232                        DISPLAY_GeneralCleanUpImageDelete();
0004f8  6820              LDR      r0,[r4,#0]  ; display_flags
0004fa  f0200080          BIC      r0,r0,#0x80
0004fe  6020              STR      r0,[r4,#0]  ; display_flags
000500  6820              LDR      r0,[r4,#0]  ; display_flags
000502  f0404000          ORR      r0,r0,#0x80000000
000506  6020              STR      r0,[r4,#0]  ; display_flags
;;;233                        DISPLAY_MinibarUsedImageDelete();
000508  6820              LDR      r0,[r4,#0]  ; display_flags
00050a  f4205000          BIC      r0,r0,#0x2000
00050e  6020              STR      r0,[r4,#0]  ; display_flags
000510  6820              LDR      r0,[r4,#0]  ; display_flags
000512  f0404000          ORR      r0,r0,#0x80000000
000516  6020              STR      r0,[r4,#0]  ; display_flags
;;;234                        DISPLAY_RoomOutOfServiceImage();
000518  6820              LDR      r0,[r4,#0]  ; display_flags
00051a  f4405080          ORR      r0,r0,#0x1000
00051e  6020              STR      r0,[r4,#0]  ; display_flags
000520  6820              LDR      r0,[r4,#0]  ; display_flags
000522  f0404000          ORR      r0,r0,#0x80000000
000526  6020              STR      r0,[r4,#0]  ; display_flags
;;;235                        DISPLAY_CleanUpImageDelete();
000528  6820              LDR      r0,[r4,#0]  ; display_flags
00052a  f0200040          BIC      r0,r0,#0x40
00052e  6020              STR      r0,[r4,#0]  ; display_flags
000530  6820              LDR      r0,[r4,#0]  ; display_flags
000532  f0404000          ORR      r0,r0,#0x80000000
000536  6020              STR      r0,[r4,#0]  ; display_flags
;;;236                        DoNotDisturbModul_Off();
000538  7828              LDRB     r0,[r5,#0]  ; dout_0_7
00053a  f0200002          BIC      r0,r0,#2
00053e  7028              STRB     r0,[r5,#0]
;;;237                        SaveRoomStatus();				
000540  f7fffffe          BL       SaveRoomStatus
;;;238                        break;
000544  e03a              B        |L1.1468|
                  |L1.1350|
;;;239                    }
;;;240                    
;;;241                    
;;;242                    case ROOM_LATE_CHECKOUT:
;;;243                    {
;;;244                        DoNotDisturbModul_On();
000546  7828              LDRB     r0,[r5,#0]  ; dout_0_7
000548  f0400002          ORR      r0,r0,#2
00054c  7028              STRB     r0,[r5,#0]
;;;245                        DISPLAY_CleanUpImageDelete();
00054e  6820              LDR      r0,[r4,#0]  ; display_flags
000550  f0200040          BIC      r0,r0,#0x40
000554  6020              STR      r0,[r4,#0]  ; display_flags
000556  6820              LDR      r0,[r4,#0]  ; display_flags
000558  f0404000          ORR      r0,r0,#0x80000000
00055c  6020              STR      r0,[r4,#0]  ; display_flags
;;;246                        DISPLAY_GeneralCleanUpImageDelete();
00055e  6820              LDR      r0,[r4,#0]  ; display_flags
000560  f0200080          BIC      r0,r0,#0x80
000564  6020              STR      r0,[r4,#0]  ; display_flags
000566  6820              LDR      r0,[r4,#0]  ; display_flags
000568  f0404000          ORR      r0,r0,#0x80000000
00056c  6020              STR      r0,[r4,#0]  ; display_flags
;;;247                        DISPLAY_BeddingReplacementImageDelete();
00056e  6820              LDR      r0,[r4,#0]  ; display_flags
000570  f4203000          BIC      r0,r0,#0x20000
000574  6020              STR      r0,[r4,#0]  ; display_flags
000576  6820              LDR      r0,[r4,#0]  ; display_flags
000578  f0404000          ORR      r0,r0,#0x80000000
00057c  6020              STR      r0,[r4,#0]  ; display_flags
;;;248                        SaveRoomStatus();
00057e  f7fffffe          BL       SaveRoomStatus
;;;249                        break;
000582  e01b              B        |L1.1468|
                  |L1.1412|
;;;250                    }
;;;251                    
;;;252                    
;;;253                    case ROOM_HANDMAID_IN:
;;;254                    {
;;;255                        DoNotDisturbModul_Off();
000584  7828              LDRB     r0,[r5,#0]  ; dout_0_7
000586  f0200002          BIC      r0,r0,#2
00058a  7028              STRB     r0,[r5,#0]
;;;256                        break;
00058c  e016              B        |L1.1468|
                  |L1.1422|
;;;257                    }
;;;258                    
;;;259                    
;;;260                    case ROOM_FORCING_DND:
;;;261                    {	
;;;262                        break;
;;;263                    }
;;;264                    
;;;265                    
;;;266                    case ROOM_FIRE_EXIT:
;;;267                    {
;;;268                        DISPLAY_FireExitImage();
00058e  6820              LDR      r0,[r4,#0]  ; display_flags
000590  f4404080          ORR      r0,r0,#0x4000
000594  6020              STR      r0,[r4,#0]  ; display_flags
000596  6820              LDR      r0,[r4,#0]  ; display_flags
000598  f0404000          ORR      r0,r0,#0x80000000
00059c  6020              STR      r0,[r4,#0]  ; display_flags
;;;269                        SignalBuzzer = BUZZ_OFF;
00059e  703e              STRB     r6,[r7,#0]
;;;270                        SaveRoomStatus();
0005a0  f7fffffe          BL       SaveRoomStatus
;;;271                        break;
0005a4  e00a              B        |L1.1468|
                  |L1.1446|
;;;272                    }
;;;273                    
;;;274                    
;;;275                    case ROOM_FIRE_ALARM:
;;;276                    {
;;;277                        DISPLAY_FireAlarmImage();
0005a6  6820              LDR      r0,[r4,#0]  ; display_flags
0005a8  f4404000          ORR      r0,r0,#0x8000
0005ac  6020              STR      r0,[r4,#0]  ; display_flags
0005ae  6820              LDR      r0,[r4,#0]  ; display_flags
0005b0  f0404000          ORR      r0,r0,#0x80000000
0005b4  6020              STR      r0,[r4,#0]  ; display_flags
;;;278                        SignalBuzzer = BUZZ_OFF;
0005b6  703e              STRB     r6,[r7,#0]
;;;279                        SaveRoomStatus();
0005b8  f7fffffe          BL       SaveRoomStatus
                  |L1.1468|
;;;280                        break;
;;;281                    }
;;;282                }
;;;283                
;;;284                if(ROOM_Status == ROOM_FORCING_DND) 
0005bc  7878              LDRB     r0,[r7,#1]  ; ROOM_Status
0005be  2809              CMP      r0,#9
0005c0  d016              BEQ      |L1.1520|
;;;285                {
;;;286                    if(IsDonNotDisturbActiv())
;;;287                    {
;;;288                        DoNotDisturb_Off();
;;;289                        DISPLAY_DoNotDisturbImageDelete();
;;;290    //                    LogEvent.log_event = DO_NOT_DISTURB_SWITCH_OFF;
;;;291    //                    LOGGER_Write();
;;;292                        //ONEWIRE_ButtonUpdateSet();
;;;293                    }
;;;294                    
;;;295                    if (IsHandmaidCallActiv())
;;;296                    {
;;;297                        HandmaidCall_Off();
;;;298                        LED_HandmaidGreen_Off();
;;;299    //                    LogEvent.log_event = HANDMAID_SWITCH_OFF;
;;;300    //                    LOGGER_Write();
;;;301                        //ONEWIRE_ButtonUpdateSet();
;;;302                    }
;;;303                    
;;;304                    DoNotDisturbModul_Off();
;;;305                    ROOM_Status = ROOM_OldStatus;
;;;306                    ROOM_OldStatus = ROOM_FORCING_DND;
;;;307                    room_status_timer = HAL_GetTick();
;;;308                    room_status_time = ROOM_STATUS_TOGGLE_TIME;
;;;309                }
;;;310                else
;;;311                {
;;;312                    ROOM_OldStatus = ROOM_Status;
0005c2  70b8              STRB     r0,[r7,#2]
;;;313                    room_status_timer = 0U;
0005c4  617e              STR      r6,[r7,#0x14]  ; room_status_timer
;;;314                    room_status_time = 0U;
0005c6  61be              STR      r6,[r7,#0x18]  ; room_status_time
                  |L1.1480|
;;;315                }            
;;;316            }
;;;317    	}
;;;318    	/************************************************/
;;;319    	/*		B U Z Z E R			S I G N A L			*/
;;;320    	/************************************************/
;;;321        if((HAL_GetTick() - signal_timer) > signal_time)
0005c8  f7fffffe          BL       HAL_GetTick
0005cc  68f9              LDR      r1,[r7,#0xc]  ; signal_timer
0005ce  1a40              SUBS     r0,r0,r1
0005d0  6939              LDR      r1,[r7,#0x10]  ; signal_time
0005d2  4288              CMP      r0,r1
0005d4  d93e              BLS      |L1.1620|
;;;322        {
;;;323            signal_timer = HAL_GetTick();
0005d6  f7fffffe          BL       HAL_GetTick
0005da  60f8              STR      r0,[r7,#0xc]  ; signal_timer
;;;324            
;;;325            switch(SignalBuzzer)
0005dc  7838              LDRB     r0,[r7,#0]  ; SignalBuzzer
;;;326            {
;;;327                case BUZZ_OFF:
;;;328                {
;;;329                    Buzzer_Off();
;;;330                    signal_timer = 0U;
;;;331                    signal_time = 0U;
;;;332                    signal_pcnt = 0U;
;;;333                    break;
;;;334                } 
;;;335                
;;;336                
;;;337                case BUZZ_CARD_INVALID:     //  3 short buzzer bips
;;;338                {       
;;;339                    if(!IsBuzzerActiv()) Buzzer_On();
;;;340                    else Buzzer_Off();
;;;341                    signal_time = 50U;
0005de  2132              MOVS     r1,#0x32
0005e0  2808              CMP      r0,#8                 ;325
0005e2  d273              BCS      |L1.1740|
0005e4  e8dff000          TBB      [pc,r0]               ;325
0005e8  2f394d61          DCB      0x2f,0x39,0x4d,0x61
0005ec  698d7375          DCB      0x69,0x8d,0x73,0x75
                  |L1.1520|
0005f0  4845              LDR      r0,|L1.1800|
0005f2  6801              LDR      r1,[r0,#0]            ;286  ; dio_flags
0005f4  07c9              LSLS     r1,r1,#31             ;286
0005f6  d00b              BEQ      |L1.1552|
0005f8  6801              LDR      r1,[r0,#0]            ;288  ; dio_flags
0005fa  f0210101          BIC      r1,r1,#1              ;288
0005fe  6001              STR      r1,[r0,#0]            ;288  ; dio_flags
000600  6821              LDR      r1,[r4,#0]            ;289  ; display_flags
000602  f0210110          BIC      r1,r1,#0x10           ;289
000606  6021              STR      r1,[r4,#0]            ;289  ; display_flags
000608  6821              LDR      r1,[r4,#0]            ;289  ; display_flags
00060a  f0414100          ORR      r1,r1,#0x80000000     ;289
00060e  6021              STR      r1,[r4,#0]            ;289  ; display_flags
                  |L1.1552|
000610  6801              LDR      r1,[r0,#0]            ;295  ; dio_flags
000612  0689              LSLS     r1,r1,#26             ;295
000614  d508              BPL      |L1.1576|
000616  6801              LDR      r1,[r0,#0]            ;297  ; dio_flags
000618  f0210120          BIC      r1,r1,#0x20           ;297
00061c  6001              STR      r1,[r0,#0]            ;297  ; dio_flags
00061e  483b              LDR      r0,|L1.1804|
000620  7801              LDRB     r1,[r0,#0]            ;298  ; hc595_dout
000622  f0210101          BIC      r1,r1,#1              ;298
000626  7001              STRB     r1,[r0,#0]            ;298
                  |L1.1576|
000628  7828              LDRB     r0,[r5,#0]            ;304  ; dout_0_7
00062a  f0200002          BIC      r0,r0,#2              ;304
00062e  7028              STRB     r0,[r5,#0]            ;304
000630  78b8              LDRB     r0,[r7,#2]            ;305  ; ROOM_OldStatus
000632  7078              STRB     r0,[r7,#1]            ;305
000634  2009              MOVS     r0,#9                 ;306
000636  70b8              STRB     r0,[r7,#2]            ;306
000638  f7fffffe          BL       HAL_GetTick
00063c  6178              STR      r0,[r7,#0x14]         ;307  ; room_status_timer
00063e  f44f70fa          MOV      r0,#0x1f4             ;308
000642  61b8              STR      r0,[r7,#0x18]         ;308  ; room_status_time
000644  e7c0              B        |L1.1480|
000646  7828              LDRB     r0,[r5,#0]            ;329  ; dout_0_7
000648  f0200080          BIC      r0,r0,#0x80           ;329
00064c  7028              STRB     r0,[r5,#0]            ;329
00064e  60fe              STR      r6,[r7,#0xc]          ;330  ; signal_timer
000650  613e              STR      r6,[r7,#0x10]         ;331  ; signal_time
000652  607e              STR      r6,[r7,#4]            ;332  ; signal_pcnt
                  |L1.1620|
;;;342                    ++signal_pcnt;
;;;343                    if(signal_pcnt >= 5U)  SignalBuzzer = BUZZ_OFF;
;;;344                    break;
;;;345                } 
;;;346                
;;;347                
;;;348                case BUZZ_CARD_VALID:       //  2 short buzzer bips
;;;349                {
;;;350                    if(!IsBuzzerActiv()) Buzzer_On();
;;;351                    else Buzzer_Off();
;;;352                    signal_time = 50U;
;;;353                    ++signal_pcnt;
;;;354                    if(signal_pcnt >= 3U)  SignalBuzzer = BUZZ_OFF;
;;;355                    break;
;;;356                } 
;;;357                
;;;358                
;;;359                case BUZZ_DOOR_BELL:        //  1 short buzzer bips
;;;360                {    
;;;361                    Buzzer_On();
;;;362                    signal_time = 20U;
;;;363                    SignalBuzzer = BUZZ_OFF;
;;;364                    break;
;;;365                } 
;;;366                
;;;367                
;;;368                case BUZZ_HANDMAID_FINISH:
;;;369                {    
;;;370                    Buzzer_On();
;;;371                    signal_time = 700U;
;;;372                    SignalBuzzer = BUZZ_OFF; 
;;;373                    break;
;;;374                } 
;;;375                
;;;376                
;;;377                case BUZZ_SOS_ALARM:
;;;378                {  
;;;379                    SignalBuzzer = BUZZ_OFF; 
;;;380                    break;
;;;381                } 
;;;382                
;;;383                
;;;384                case BUZZ_FIRE_ALARM:
;;;385                { 
;;;386                    if((ROOM_Status != ROOM_FIRE_ALARM) && (ROOM_Status != ROOM_FIRE_EXIT))
;;;387                    {
;;;388                        SignalBuzzer = BUZZ_OFF;
;;;389                    }
;;;390                    else
;;;391                    {
;;;392                        if(!IsBuzzerActiv()) 
;;;393                        {
;;;394                            Buzzer_On();
;;;395                            signal_time = 50U;
;;;396                        }
;;;397                        else 
;;;398                        {
;;;399                            Buzzer_Off();
;;;400                            signal_time = 600U;
;;;401                        }
;;;402                    }
;;;403                    break;
;;;404                }  
;;;405    
;;;406                default:
;;;407                {
;;;408                    SignalBuzzer = BUZZ_OFF; 
;;;409                    break;
;;;410                }
;;;411            }        
;;;412        }
;;;413    }
000654  b007              ADD      sp,sp,#0x1c
000656  e8bd83f0          POP      {r4-r9,pc}
00065a  7828              LDRB     r0,[r5,#0]            ;339  ; dout_0_7
00065c  0600              LSLS     r0,r0,#24             ;339
00065e  d404              BMI      |L1.1642|
000660  7828              LDRB     r0,[r5,#0]            ;339  ; dout_0_7
000662  f0400080          ORR      r0,r0,#0x80           ;339
000666  7028              STRB     r0,[r5,#0]            ;339
000668  e003              B        |L1.1650|
                  |L1.1642|
00066a  7828              LDRB     r0,[r5,#0]            ;340  ; dout_0_7
00066c  f0200080          BIC      r0,r0,#0x80           ;340
000670  7028              STRB     r0,[r5,#0]            ;340
                  |L1.1650|
000672  6139              STR      r1,[r7,#0x10]         ;341  ; signal_time
000674  6878              LDR      r0,[r7,#4]            ;342  ; signal_pcnt
000676  1c40              ADDS     r0,r0,#1              ;342
000678  6078              STR      r0,[r7,#4]            ;342  ; signal_pcnt
00067a  2805              CMP      r0,#5                 ;343
00067c  d3ea              BCC      |L1.1620|
00067e  703e              STRB     r6,[r7,#0]            ;343
000680  e7e8              B        |L1.1620|
000682  7828              LDRB     r0,[r5,#0]            ;350  ; dout_0_7
000684  0600              LSLS     r0,r0,#24             ;350
000686  d404              BMI      |L1.1682|
000688  7828              LDRB     r0,[r5,#0]            ;350  ; dout_0_7
00068a  f0400080          ORR      r0,r0,#0x80           ;350
00068e  7028              STRB     r0,[r5,#0]            ;350
000690  e003              B        |L1.1690|
                  |L1.1682|
000692  7828              LDRB     r0,[r5,#0]            ;351  ; dout_0_7
000694  f0200080          BIC      r0,r0,#0x80           ;351
000698  7028              STRB     r0,[r5,#0]            ;351
                  |L1.1690|
00069a  6139              STR      r1,[r7,#0x10]         ;352  ; signal_time
00069c  6878              LDR      r0,[r7,#4]            ;353  ; signal_pcnt
00069e  1c40              ADDS     r0,r0,#1              ;353
0006a0  6078              STR      r0,[r7,#4]            ;353  ; signal_pcnt
0006a2  2803              CMP      r0,#3                 ;354
0006a4  d3d6              BCC      |L1.1620|
0006a6  703e              STRB     r6,[r7,#0]            ;354
0006a8  e7d4              B        |L1.1620|
0006aa  7828              LDRB     r0,[r5,#0]            ;361  ; dout_0_7
0006ac  f0400080          ORR      r0,r0,#0x80           ;361
0006b0  7028              STRB     r0,[r5,#0]            ;361
0006b2  2014              MOVS     r0,#0x14              ;362
0006b4  6138              STR      r0,[r7,#0x10]         ;362  ; signal_time
0006b6  703e              STRB     r6,[r7,#0]            ;363
0006b8  e7cc              B        |L1.1620|
0006ba  7828              LDRB     r0,[r5,#0]            ;370  ; dout_0_7
0006bc  f0400080          ORR      r0,r0,#0x80           ;370
0006c0  7028              STRB     r0,[r5,#0]            ;370
0006c2  f44f702f          MOV      r0,#0x2bc             ;371
0006c6  6138              STR      r0,[r7,#0x10]         ;371  ; signal_time
0006c8  703e              STRB     r6,[r7,#0]            ;372
0006ca  e7c3              B        |L1.1620|
                  |L1.1740|
0006cc  e019              B        |L1.1794|
0006ce  703e              STRB     r6,[r7,#0]            ;379
0006d0  e7c0              B        |L1.1620|
0006d2  7878              LDRB     r0,[r7,#1]            ;386  ; ROOM_Status
0006d4  280a              CMP      r0,#0xa               ;386
0006d6  d003              BEQ      |L1.1760|
0006d8  280b              CMP      r0,#0xb               ;386
0006da  d001              BEQ      |L1.1760|
0006dc  703e              STRB     r6,[r7,#0]            ;388
0006de  e7b9              B        |L1.1620|
                  |L1.1760|
0006e0  7828              LDRB     r0,[r5,#0]            ;392  ; dout_0_7
0006e2  0600              LSLS     r0,r0,#24             ;392
0006e4  d405              BMI      |L1.1778|
0006e6  7828              LDRB     r0,[r5,#0]            ;394  ; dout_0_7
0006e8  f0400080          ORR      r0,r0,#0x80           ;394
0006ec  7028              STRB     r0,[r5,#0]            ;394
0006ee  6139              STR      r1,[r7,#0x10]         ;395  ; signal_time
0006f0  e7b0              B        |L1.1620|
                  |L1.1778|
0006f2  7828              LDRB     r0,[r5,#0]            ;399  ; dout_0_7
0006f4  f0200080          BIC      r0,r0,#0x80           ;399
0006f8  7028              STRB     r0,[r5,#0]            ;399
0006fa  f44f7016          MOV      r0,#0x258             ;400
0006fe  6138              STR      r0,[r7,#0x10]         ;400  ; signal_time
000700  e7a8              B        |L1.1620|
                  |L1.1794|
000702  703e              STRB     r6,[r7,#0]            ;408
000704  e7a6              B        |L1.1620|
;;;414    
                          ENDP

000706  0000              DCW      0x0000
                  |L1.1800|
                          DCD      dio_flags
                  |L1.1804|
                          DCD      hc595_dout

                          AREA ||i.SaveRoomStatus||, CODE, READONLY, ALIGN=2

                  SaveRoomStatus PROC
;;;415    
;;;416    static void SaveRoomStatus(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;417    {
;;;418        uint8_t buff[3];
;;;419        
;;;420        buff[0] = EE_ROOM_STATUS_ADDRESS >> 8U;
000002  2000              MOVS     r0,#0
000004  f88d0004          STRB     r0,[sp,#4]
;;;421        buff[1] = EE_ROOM_STATUS_ADDRESS;
000008  2020              MOVS     r0,#0x20
00000a  f88d0005          STRB     r0,[sp,#5]
;;;422        buff[2] = ROOM_Status;
00000e  480d              LDR      r0,|L2.68|
000010  7840              LDRB     r0,[r0,#1]  ; ROOM_Status
000012  f88d0006          STRB     r0,[sp,#6]
;;;423        if (HAL_I2C_Master_Transmit(&hi2c1, I2C_EE_WRITE, buff, 3U, I2C_EE_TIMEOUT) != HAL_OK) Error_Handler();
000016  2005              MOVS     r0,#5
000018  9000              STR      r0,[sp,#0]
00001a  2303              MOVS     r3,#3
00001c  aa01              ADD      r2,sp,#4
00001e  21a0              MOVS     r1,#0xa0
000020  4809              LDR      r0,|L2.72|
000022  f7fffffe          BL       HAL_I2C_Master_Transmit
000026  b108              CBZ      r0,|L2.44|
000028  f7fffffe          BL       Error_Handler
                  |L2.44|
;;;424        if (HAL_I2C_IsDeviceReady(&hi2c1, I2C_EE_READ, I2C_EE_TRIALS, I2C_EE_WRITE_DELAY) != HAL_OK) Error_Handler();
00002c  230f              MOVS     r3,#0xf
00002e  2264              MOVS     r2,#0x64
000030  21a1              MOVS     r1,#0xa1
000032  4805              LDR      r0,|L2.72|
000034  f7fffffe          BL       HAL_I2C_IsDeviceReady
000038  2800              CMP      r0,#0
00003a  d001              BEQ      |L2.64|
00003c  f7fffffe          BL       Error_Handler
                  |L2.64|
;;;425    }
000040  bd1c              POP      {r2-r4,pc}
;;;426    /******************************   END OF FILE  **********************************/
                          ENDP

000042  0000              DCW      0x0000
                  |L2.68|
                          DCD      ||.data||
                  |L2.72|
                          DCD      hi2c1

                          AREA ||.data||, DATA, ALIGN=2

                  SignalBuzzer
000000  00                DCB      0x00
                  ROOM_Status
000001  01                DCB      0x01
                  ROOM_OldStatus
000002  0000              DCB      0x00,0x00
                  signal_pcnt
                          DCD      0x00000000
                  temp_minute
                          DCD      0x00000000
                  signal_timer
                          DCD      0x00000000
                  signal_time
                          DCD      0x00000000
                  room_status_timer
                          DCD      0x00000000
                  room_status_time
                          DCD      0x00000000
                  signal_flags
                          DCD      0x00000000
                  aRoomPowerExpiryDateTime
                          DCD      0x00000000
000024  0000              DCB      0x00,0x00

;*** Start embedded assembler ***

#line 1 "..\\Src\\signal.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___8_signal_c_64a3c3f1____REV16|
#line 441 "C:\\Keil\\ARM\\PACK\\ARM\\CMSIS\\5.0.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___8_signal_c_64a3c3f1____REV16| PROC
#line 442

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___8_signal_c_64a3c3f1____REVSH|
#line 456
|__asm___8_signal_c_64a3c3f1____REVSH| PROC
#line 457

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___8_signal_c_64a3c3f1____RRX|
#line 643
|__asm___8_signal_c_64a3c3f1____RRX| PROC
#line 644

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
