; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\de-170318\rs485.o --asm_dir=.\Lst\ --list_dir=.\Lst\ --depend=.\de-170318\rs485.d --cpu=Cortex-M3 --apcs=interwork -O1 --diag_suppress=9931 -I..\Inc -I..\Drivers\STM32F1xx_HAL_Driver\Inc -I..\Drivers\STM32F1xx_HAL_Driver\Inc\Legacy -I..\Drivers\CMSIS\Device\ST\STM32F1xx\Include -I.\RTE\_DE-170318 -IC:\Keil\ARM\PACK\ARM\CMSIS\5.0.0\CMSIS\Include -IC:\Keil\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=526 -D_RTE_ -DSTM32F10X_MD -DUSE_HAL_DRIVER -DSTM32F103xB --omf_browse=.\de-170318\rs485.crf ..\Src\rs485.c]
                          THUMB

                          AREA ||i.BackupOldFirmware||, CODE, READONLY, ALIGN=2

                  BackupOldFirmware PROC
;;;758    
;;;759    static void BackupOldFirmware(void)
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;760    {
000004  b0c1              SUB      sp,sp,#0x104
;;;761        uint8_t buff[BUFF_SIZE];
;;;762        uint8_t *fl_address;
;;;763        uint32_t b_cnt;
;;;764        uint32_t b_total;
;;;765    	uint32_t fl_destination;
;;;766    	
;;;767    	b_cnt = 0U;
000006  2400              MOVS     r4,#0
;;;768    	b_total = 0U;
000008  2600              MOVS     r6,#0
;;;769    	fl_address = (uint8_t *)APPLICATION_ADDRESS;
00000a  4d15              LDR      r5,|L1.96|
;;;770    	fl_destination = EE_OLD_FIRMWARE_ADDRESS;
00000c  f44f0796          MOV      r7,#0x4b0000
;;;771    	
;;;772    	FormatFileStorage(fl_destination, 1U);
000010  2101              MOVS     r1,#1
000012  4638              MOV      r0,r7
000014  f7fffffe          BL       FormatFileStorage
000018  f10d0804          ADD      r8,sp,#4              ;761
;;;773    	
;;;774    	while(b_total < USER_FLASH_SIZE)
;;;775    	{
;;;776    		while(b_cnt < BUFF_SIZE)
;;;777    		{
;;;778    			buff[b_cnt] = *fl_address;
;;;779                ++fl_address;
;;;780    			++b_cnt;
;;;781    			++b_total;
;;;782    		}
;;;783    		
;;;784    		SPI_FLASH_WritePage(fl_destination, buff, BUFF_SIZE);
00001c  f44f7a80          MOV      r10,#0x100
;;;785    		if(SPI_FLASH_WaitReadyStatus(SPI_FLASH_TIMEOUT) == 0U) Error_Handler();					
000020  f44f7bfa          MOV      r11,#0x1f4
000024  f44f4950          MOV      r9,#0xd000            ;774
000028  e015              B        |L1.86|
                  |L1.42|
00002a  f8150b01          LDRB     r0,[r5],#1            ;778
00002e  f8080004          STRB     r0,[r8,r4]            ;778
000032  1c64              ADDS     r4,r4,#1              ;780
000034  1c76              ADDS     r6,r6,#1              ;781
                  |L1.54|
000036  2cff              CMP      r4,#0xff              ;776
000038  d9f7              BLS      |L1.42|
00003a  4652              MOV      r2,r10                ;784
00003c  a901              ADD      r1,sp,#4              ;784
00003e  4638              MOV      r0,r7                 ;784
000040  f7fffffe          BL       SPI_FLASH_WritePage
000044  4658              MOV      r0,r11
000046  f7fffffe          BL       SPI_FLASH_WaitReadyStatus
00004a  b908              CBNZ     r0,|L1.80|
00004c  f7fffffe          BL       Error_Handler
                  |L1.80|
;;;786    		fl_destination += BUFF_SIZE;
000050  f5077780          ADD      r7,r7,#0x100
;;;787    		b_cnt = 0U;
000054  2400              MOVS     r4,#0
                  |L1.86|
000056  454e              CMP      r6,r9                 ;774
000058  d3ed              BCC      |L1.54|
;;;788    	}
;;;789    }
00005a  b041              ADD      sp,sp,#0x104
00005c  e8bd8ff0          POP      {r4-r11,pc}
;;;790    
                          ENDP

                  |L1.96|
                          DCD      0x08003000

                          AREA ||i.CopyFile||, CODE, READONLY, ALIGN=1

                  CopyFile PROC
;;;727    
;;;728    static void CopyFile(uint32_t file_source_address, uint32_t file_destination_address, uint32_t file_size)
000000  b5f0              PUSH     {r4-r7,lr}
;;;729    {
000002  b0c1              SUB      sp,sp,#0x104
000004  4607              MOV      r7,r0
000006  460e              MOV      r6,r1
000008  4614              MOV      r4,r2
;;;730    	uint8_t buff[BUFF_SIZE];
;;;731        uint32_t cnt;
;;;732    	
;;;733        cnt = file_size / 0x00010000U;
00000a  0c22              LSRS     r2,r4,#16
;;;734    	if(file_size > (cnt * 0x00010000U)) ++cnt;
00000c  ebb44f02          CMP      r4,r2,LSL #16
000010  d900              BLS      |L2.20|
000012  1c52              ADDS     r2,r2,#1
                  |L2.20|
;;;735    	FormatFileStorage(file_destination_address, cnt);
000014  b2d1              UXTB     r1,r2
000016  4630              MOV      r0,r6
000018  f7fffffe          BL       FormatFileStorage
;;;736    	
;;;737    	while(file_size)
00001c  e01b              B        |L2.86|
                  |L2.30|
;;;738    	{
;;;739    		if(file_size >= BUFF_SIZE) 
00001e  2cff              CMP      r4,#0xff
000020  d904              BLS      |L2.44|
;;;740            {
;;;741                cnt = BUFF_SIZE;
000022  f44f7580          MOV      r5,#0x100
;;;742                file_size -= BUFF_SIZE;
000026  f5a47480          SUB      r4,r4,#0x100
00002a  e001              B        |L2.48|
                  |L2.44|
;;;743            }
;;;744    		else 
;;;745            {
;;;746                cnt = file_size;
00002c  4625              MOV      r5,r4
;;;747                file_size = 0U;
00002e  2400              MOVS     r4,#0
                  |L2.48|
;;;748            }
;;;749            
;;;750            SPI_FLASH_ReadPage(file_source_address, buff, cnt);
000030  b2aa              UXTH     r2,r5
000032  a901              ADD      r1,sp,#4
000034  4638              MOV      r0,r7
000036  f7fffffe          BL       SPI_FLASH_ReadPage
;;;751            SPI_FLASH_WritePage(file_destination_address, buff, cnt);
00003a  b2aa              UXTH     r2,r5
00003c  a901              ADD      r1,sp,#4
00003e  4630              MOV      r0,r6
000040  f7fffffe          BL       SPI_FLASH_WritePage
;;;752            if(SPI_FLASH_WaitReadyStatus(SPI_FLASH_TIMEOUT) == 0U) Error_Handler();
000044  f44f70fa          MOV      r0,#0x1f4
000048  f7fffffe          BL       SPI_FLASH_WaitReadyStatus
00004c  b908              CBNZ     r0,|L2.82|
00004e  f7fffffe          BL       Error_Handler
                  |L2.82|
;;;753            file_destination_address += cnt;
000052  442e              ADD      r6,r6,r5
;;;754            file_source_address += cnt;
000054  442f              ADD      r7,r7,r5
                  |L2.86|
000056  2c00              CMP      r4,#0                 ;737
000058  d1e1              BNE      |L2.30|
;;;755    	}
;;;756    }
00005a  b041              ADD      sp,sp,#0x104
00005c  bdf0              POP      {r4-r7,pc}
;;;757    
                          ENDP


                          AREA ||i.FLASH_If_Write||, CODE, READONLY, ALIGN=2

                  FLASH_If_Write PROC
;;;839    
;;;840    static uint8_t FLASH_If_Write(uint32_t destination, uint32_t *p_source, uint32_t length)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;841    {
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
;;;842        uint32_t i = 0U;
00000a  2400              MOVS     r4,#0
;;;843    
;;;844        /* Unlock the Flash to enable the flash control register access *************/
;;;845        HAL_FLASH_Unlock();
00000c  f7fffffe          BL       HAL_FLASH_Unlock
;;;846    
;;;847        for (i = 0U; (i < length) && (destination <= (USER_FLASH_END_ADDRESS - 4U)); i++)
000010  f8df803c          LDR      r8,|L3.80|
000014  e013              B        |L3.62|
                  |L3.22|
;;;848        {
;;;849            /* Device voltage range supposed to be [2.7V to 3.6V], the operation will
;;;850            be done by word */ 
;;;851            if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, destination, *(uint32_t*)(p_source + i)) == HAL_OK)      
000016  f8562024          LDR      r2,[r6,r4,LSL #2]
00001a  2300              MOVS     r3,#0
00001c  4629              MOV      r1,r5
00001e  2002              MOVS     r0,#2
000020  f7fffffe          BL       HAL_FLASH_Program
000024  b110              CBZ      r0,|L3.44|
;;;852            {
;;;853                /* Check the written value */
;;;854                if (*(uint32_t*)destination != *(uint32_t*)(p_source + i))
;;;855                {
;;;856                    /* Flash content doesn't match SRAM content */
;;;857                    return(0U);
;;;858                }
;;;859                /* Increment FLASH destination address */
;;;860                destination += 4U;
;;;861            }
;;;862            else
;;;863            {
;;;864                /* Error occurred while writing data in Flash memory */
;;;865                return (0U);
000026  2000              MOVS     r0,#0
                  |L3.40|
;;;866            }
;;;867        }
;;;868        /* Lock the Flash to disable the flash control register access (recommended
;;;869        to protect the FLASH memory against possible unwanted operation) *********/
;;;870        HAL_FLASH_Lock();
;;;871    
;;;872        return (1U);
;;;873    }
000028  e8bd81f0          POP      {r4-r8,pc}
                  |L3.44|
00002c  f8561024          LDR      r1,[r6,r4,LSL #2]     ;854
000030  6828              LDR      r0,[r5,#0]            ;854
000032  4288              CMP      r0,r1                 ;854
000034  d001              BEQ      |L3.58|
000036  2000              MOVS     r0,#0                 ;857
000038  e7f6              B        |L3.40|
                  |L3.58|
00003a  1d2d              ADDS     r5,r5,#4              ;860
00003c  1c64              ADDS     r4,r4,#1              ;847
                  |L3.62|
00003e  42bc              CMP      r4,r7                 ;847
000040  d201              BCS      |L3.70|
000042  4545              CMP      r5,r8                 ;847
000044  d9e7              BLS      |L3.22|
                  |L3.70|
000046  f7fffffe          BL       HAL_FLASH_Lock
00004a  2001              MOVS     r0,#1                 ;872
00004c  e7ec              B        |L3.40|
;;;874    
                          ENDP

00004e  0000              DCW      0x0000
                  |L3.80|
                          DCD      0x0800fffc

                          AREA ||i.FormatFileStorage||, CODE, READONLY, ALIGN=1

                  FormatFileStorage PROC
;;;711    
;;;712    static void FormatFileStorage(uint32_t start_address, uint8_t number_of_blocks)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;713    {
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
;;;714    	while(number_of_blocks)
;;;715    	{
;;;716    		SPI_FLASH_WriteStatusRegister(0U);
;;;717    		if(SPI_FLASH_WaitReadyStatus(SPI_FLASH_TIMEOUT) == 0U) Error_Handler();	
000008  f44f76fa          MOV      r6,#0x1f4
;;;718    		SPI_FLASH_UnprotectSector(start_address);
;;;719    		if(SPI_FLASH_WaitReadyStatus(SPI_FLASH_TIMEOUT) == 0U) Error_Handler();
;;;720    		SPI_FLASH_Erase(start_address, SPI_FLASH_64K_BLOCK_ERASE);
;;;721            if(SPI_FLASH_WaitReadyStatus(SPI_FLASH_64K_ERASE_TIMEOUT) == 0U) Error_Handler();
00000c  00b7              LSLS     r7,r6,#2
00000e  e01f              B        |L4.80|
                  |L4.16|
000010  2000              MOVS     r0,#0                 ;716
000012  f7fffffe          BL       SPI_FLASH_WriteStatusRegister
000016  4630              MOV      r0,r6                 ;717
000018  f7fffffe          BL       SPI_FLASH_WaitReadyStatus
00001c  b908              CBNZ     r0,|L4.34|
00001e  f7fffffe          BL       Error_Handler
                  |L4.34|
000022  4628              MOV      r0,r5                 ;718
000024  f7fffffe          BL       SPI_FLASH_UnprotectSector
000028  4630              MOV      r0,r6                 ;719
00002a  f7fffffe          BL       SPI_FLASH_WaitReadyStatus
00002e  b908              CBNZ     r0,|L4.52|
000030  f7fffffe          BL       Error_Handler
                  |L4.52|
000034  21d8              MOVS     r1,#0xd8              ;720
000036  4628              MOV      r0,r5                 ;720
000038  f7fffffe          BL       SPI_FLASH_Erase
00003c  4638              MOV      r0,r7
00003e  f7fffffe          BL       SPI_FLASH_WaitReadyStatus
000042  b908              CBNZ     r0,|L4.72|
000044  f7fffffe          BL       Error_Handler
                  |L4.72|
;;;722    		start_address += 0x00010000U;
000048  f5053580          ADD      r5,r5,#0x10000
;;;723    		--number_of_blocks;
00004c  1e64              SUBS     r4,r4,#1
00004e  b2e4              UXTB     r4,r4
                  |L4.80|
000050  2c00              CMP      r4,#0                 ;714
000052  d1dd              BNE      |L4.16|
;;;724    	}
;;;725    }
000054  e8bd81f0          POP      {r4-r8,pc}
;;;726    
                          ENDP


                          AREA ||i.HAL_UART_ErrorCallback||, CODE, READONLY, ALIGN=2

                  HAL_UART_ErrorCallback PROC
;;;697    
;;;698    void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart) 
000000  b508              PUSH     {r3,lr}
;;;699    {
;;;700        __HAL_UART_CLEAR_PEFLAG(&huart1);
000002  2200              MOVS     r2,#0
000004  490b              LDR      r1,|L5.52|
000006  6809              LDR      r1,[r1,#0]  ; huart1
000008  680b              LDR      r3,[r1,#0]
00000a  684b              LDR      r3,[r1,#4]
00000c  9300              STR      r3,[sp,#0]
;;;701        __HAL_UART_CLEAR_FEFLAG(&huart1);
00000e  680b              LDR      r3,[r1,#0]
000010  684b              LDR      r3,[r1,#4]
000012  9300              STR      r3,[sp,#0]
;;;702        __HAL_UART_CLEAR_NEFLAG(&huart1);
000014  680b              LDR      r3,[r1,#0]
000016  684b              LDR      r3,[r1,#4]
000018  9300              STR      r3,[sp,#0]
;;;703        __HAL_UART_CLEAR_IDLEFLAG(&huart1);
00001a  680b              LDR      r3,[r1,#0]
00001c  684b              LDR      r3,[r1,#4]
00001e  9300              STR      r3,[sp,#0]
;;;704        __HAL_UART_CLEAR_OREFLAG(&huart1);
000020  680b              LDR      r3,[r1,#0]
000022  684b              LDR      r3,[r1,#4]
000024  9300              STR      r3,[sp,#0]
;;;705    	__HAL_UART_FLUSH_DRREGISTER(&huart1);
000026  6849              LDR      r1,[r1,#4]
;;;706    	huart->ErrorCode = HAL_UART_ERROR_NONE;
000028  63c2              STR      r2,[r0,#0x3c]
;;;707    	receive_pcnt = 0U;
00002a  4803              LDR      r0,|L5.56|
00002c  6442              STR      r2,[r0,#0x44]  ; receive_pcnt
;;;708    	rec_bcnt = 0U;
00002e  63c2              STR      r2,[r0,#0x3c]  ; rec_bcnt
;;;709    }
000030  bd08              POP      {r3,pc}
;;;710    
                          ENDP

000032  0000              DCW      0x0000
                  |L5.52|
                          DCD      huart1
                  |L5.56|
                          DCD      ||.data||

                          AREA ||i.RS485_Init||, CODE, READONLY, ALIGN=2

                  RS485_Init PROC
;;;99     /* Program Code  -------------------------------------------------------------*/
;;;100    void RS485_Init(void)
000000  b510              PUSH     {r4,lr}
;;;101    {
;;;102    	ClearBuffer(rs485_buff, RS485_BUFF_SIZE);
000002  2180              MOVS     r1,#0x80
000004  4815              LDR      r0,|L6.92|
000006  f7fffffe          BL       ClearBuffer
;;;103        /**
;;;104        *   start usart receiving in interrupt mode
;;;105        *   to get packet header for address checking
;;;106        */
;;;107        RS485_DirRx();
00000a  2200              MOVS     r2,#0
00000c  f44f6100          MOV      r1,#0x800
000010  4813              LDR      r0,|L6.96|
000012  f7fffffe          BL       HAL_GPIO_WritePin
;;;108    	packet_type = NULL;
000016  4c13              LDR      r4,|L6.100|
000018  2000              MOVS     r0,#0
00001a  6420              STR      r0,[r4,#0x40]  ; packet_type
;;;109    	receive_pcnt = 0U;
00001c  6460              STR      r0,[r4,#0x44]  ; receive_pcnt
;;;110    	rec_bcnt = 0U;
00001e  63e0              STR      r0,[r4,#0x3c]  ; rec_bcnt
;;;111    	eTransferMode = TRANSFER_IDLE;
000020  7060              STRB     r0,[r4,#1]
;;;112    	
;;;113    	if (huart1.RxState == HAL_UART_STATE_BUSY_RX)
000022  4911              LDR      r1,|L6.104|
000024  f891003a          LDRB     r0,[r1,#0x3a]  ; huart1
000028  2822              CMP      r0,#0x22
00002a  d109              BNE      |L6.64|
;;;114    	{
;;;115    		__HAL_UART_DISABLE_IT(&huart1, UART_IT_RXNE);
00002c  6808              LDR      r0,[r1,#0]  ; huart1
00002e  68c2              LDR      r2,[r0,#0xc]
000030  f0220220          BIC      r2,r2,#0x20
000034  60c2              STR      r2,[r0,#0xc]
;;;116    		huart1.RxState = HAL_UART_STATE_READY;
000036  2020              MOVS     r0,#0x20
000038  f881003a          STRB     r0,[r1,#0x3a]
;;;117    		huart1.gState = HAL_UART_STATE_READY;
00003c  f8810039          STRB     r0,[r1,#0x39]
                  |L6.64|
;;;118    	}
;;;119    
;;;120    	if(HAL_UART_Receive_IT(&huart1, rs485_buff, sizeof(rs485_buff)) == HAL_OK)
000040  2280              MOVS     r2,#0x80
000042  4906              LDR      r1,|L6.92|
000044  4808              LDR      r0,|L6.104|
000046  f7fffffe          BL       HAL_UART_Receive_IT
00004a  b118              CBZ      r0,|L6.84|
;;;121    	{
;;;122    		eComState = COM_PACKET_PENDING;
;;;123    	}
;;;124    	else
;;;125    	{
;;;126    		RS485_StartTimer(RECEIVER_REINIT_TIMEOUT);
00004c  f241602e          MOV      r0,#0x162e
000050  64a0              STR      r0,[r4,#0x48]  ; rs485_timer
;;;127    	}
;;;128    }
000052  bd10              POP      {r4,pc}
                  |L6.84|
000054  2001              MOVS     r0,#1                 ;122
000056  7020              STRB     r0,[r4,#0]            ;122
000058  bd10              POP      {r4,pc}
;;;129    
                          ENDP

00005a  0000              DCW      0x0000
                  |L6.92|
                          DCD      ||.bss||
                  |L6.96|
                          DCD      0x40010800
                  |L6.100|
                          DCD      ||.data||
                  |L6.104|
                          DCD      huart1

                          AREA ||i.RS485_Service||, CODE, READONLY, ALIGN=2

                  RS485_Service PROC
;;;130    
;;;131    void RS485_Service(void)
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;132    {
000004  b089              SUB      sp,sp,#0x24
;;;133        RTC_TimeTypeDef time_rs;
;;;134        RTC_DateTypeDef date_rs;
;;;135        uint8_t ee_buff[24];
;;;136    	static uint32_t tmp_b;
;;;137    	static uint32_t rs485_update_timeout_timer;
;;;138        static uint32_t total_bytes_in_file;
;;;139        static uint32_t next_packet_number;
;;;140        static uint32_t total_packet_number;
;;;141        static uint32_t crc_32_calculated;
;;;142        static uint32_t crc_32_file;
;;;143        static uint32_t flash_destination;
;;;144        static uint32_t file_copy_source_address;
;;;145        static uint32_t file_copy_destination_address;
;;;146        static uint32_t file_copy_size;
;;;147        static uint32_t post_process;
;;;148        
;;;149        
;;;150        if(IsRS485_UpdateActiv())
000006  4cfe              LDR      r4,|L7.1024|
000008  6ce0              LDR      r0,[r4,#0x4c]  ; rs485_flags
00000a  07c0              LSLS     r0,r0,#31
00000c  d011              BEQ      |L7.50|
;;;151        {
;;;152            if((HAL_GetTick() - rs485_update_timeout_timer) >= UPDATE_TIMEOUT)
00000e  f7fffffe          BL       HAL_GetTick
000012  6921              LDR      r1,[r4,#0x10]  ; rs485_update_timeout_timer
000014  1a41              SUBS     r1,r0,r1
000016  f2417070          MOV      r0,#0x1770
00001a  4281              CMP      r1,r0
00001c  d309              BCC      |L7.50|
;;;153            {
;;;154                RS485_StopUpdate();
00001e  6ce0              LDR      r0,[r4,#0x4c]  ; rs485_flags
000020  f0200001          BIC      r0,r0,#1
000024  64e0              STR      r0,[r4,#0x4c]  ; rs485_flags
;;;155    			SYS_FileTransferFailSet();
000026  78a0              LDRB     r0,[r4,#2]  ; sys_status
000028  f0400008          ORR      r0,r0,#8
;;;156    			SYS_FileTransferSuccessReset();
00002c  f0200004          BIC      r0,r0,#4
000030  70a0              STRB     r0,[r4,#2]
                  |L7.50|
;;;157            }
;;;158        }
;;;159        
;;;160    	if(eComState == COM_PACKET_RECEIVED)
000032  7820              LDRB     r0,[r4,#0]  ; eComState
000034  2802              CMP      r0,#2
000036  d17a              BNE      |L7.302|
;;;161    	{
;;;162    		if(packet_type == SOH)
000038  6c20              LDR      r0,[r4,#0x40]  ; packet_type
;;;163    		{ 
;;;164    			if((rs485_buff[0] >= DOWNLOAD_DISPLAY_IMAGE_1) && (rs485_buff[0] <= DOWNLOAD_BIG_FONT))
;;;165    			{
;;;166                    receiving_errors = 0U;
;;;167                    next_packet_number = 1U;
;;;168                    activ_command = rs485_buff[0];
;;;169                    total_packet_number = (rs485_buff[1] << 8U) + rs485_buff[2];
;;;170                    crc_32_file = (rs485_buff[7] << 24U) + (rs485_buff[8] << 16U) + (rs485_buff[9] << 8U) + rs485_buff[10];
;;;171                    total_bytes_in_file = (rs485_buff[3] << 24U) + (rs485_buff[4] << 16U) + (rs485_buff[5] << 8U) + rs485_buff[6];
;;;172                    rs485_update_timeout_timer = HAL_GetTick();
;;;173                    SYS_FileTransferFailReset();
;;;174                    RS485_StartUpdate();
;;;175                    
;;;176                    if((activ_command != DOWNLOAD_FIRMWARE_IMAGE) && (activ_command != DOWNLOAD_BOOTLOADER_IMAGE))
;;;177                    {
;;;178                        SYS_ImageUpdateRequestReset();
;;;179                        flash_destination = EE_NEW_IMAGE_ADDRESS;
;;;180                        post_process = COPY_NEW_DISPLAY_IMAGE;
;;;181                        file_copy_source_address = EE_NEW_IMAGE_ADDRESS;
;;;182                        file_copy_destination_address = ((activ_command - DOWNLOAD_DISPLAY_IMAGE_1) * 0x00030000U);
;;;183                        file_copy_size = total_bytes_in_file;
;;;184                        FormatFileStorage(EE_NEW_IMAGE_ADDRESS, 3U);
;;;185                    }
;;;186                    else
;;;187                    {
;;;188                        SYS_FirmwareUpdateRequestReset();
;;;189                        flash_destination = ((activ_command - DOWNLOAD_DISPLAY_IMAGE_1) * 0x00030000U);
;;;190                        if(activ_command == DOWNLOAD_FIRMWARE_IMAGE) FormatFileStorage(EE_NEW_FIRMWARE_ADDRESS, 3U);					
;;;191                        else if(activ_command == DOWNLOAD_BOOTLOADER_IMAGE) FormatFileStorage(EE_NEW_BOOTLOADER_ADDRESS, 3U);
;;;192                    }
;;;193                    
;;;194                    if(eTransferMode == TRANSFER_P2P)
;;;195                    {
;;;196                        rs485_buff[5] = 1U;
;;;197                        rs485_buff[6] = activ_command;						
;;;198                        RS485_ResponsePacketReady();						
;;;199                    }			
;;;200    			}
;;;201    			else
;;;202    			{
;;;203    				switch(rs485_buff[0])
;;;204    				{
;;;205    					case UPDATE_BOOTLOADER:
;;;206    					{
;;;207                            rs485_update_timeout_timer = HAL_GetTick();
;;;208    						RS485_StartUpdate();
;;;209    						
;;;210    						if(UpdateBootloader() == 0U)
;;;211    						{
;;;212    							DISPLAY_BootloaderUpdateFail();
;;;213    							SYS_UpdateFailSet();
;;;214    						}
;;;215    						else 
;;;216    						{
;;;217    							DISPLAY_BootloaderUpdated();
;;;218    							SYS_UpdateSuccessSet();
;;;219    						}
;;;220    						
;;;221    						if(eTransferMode == TRANSFER_P2P)
;;;222    						{
;;;223    							rs485_buff[5] = 1U;
;;;224    							rs485_buff[6] = UPDATE_BOOTLOADER;				
;;;225    							RS485_ResponsePacketReady();
;;;226    						}
;;;227    						break;
;;;228    					}
;;;229    					
;;;230    					
;;;231    					case RESTART_CONTROLLER:
;;;232    					{
;;;233    						if (eTransferMode == TRANSFER_P2P) Serial_PutByte(ACK);
;;;234    						HAL_Delay(10U);
;;;235    						Error_Handler();
;;;236    						break;
;;;237    					}
;;;238    
;;;239    					
;;;240    					case START_BOOTLOADER:
;;;241    					{
;;;242    						if (eTransferMode == TRANSFER_P2P) Serial_PutByte(ACK);
;;;243    						ee_buff[0] = EE_FW_UPDATE_STATUS >> 8U;
;;;244    						ee_buff[1] = EE_FW_UPDATE_STATUS & 0xFFU;
;;;245    						ee_buff[2] = BOOTLOADER_CMD_RUN;
;;;246    						if (HAL_I2C_Master_Transmit(&hi2c1, I2C_EE_WRITE, ee_buff, 3U, I2C_EE_TIMEOUT) != HAL_OK) Error_Handler();
;;;247    						if (HAL_I2C_IsDeviceReady(&hi2c1, I2C_EE_READ, I2C_EE_TRIALS, I2C_EE_WRITE_DELAY) != HAL_OK) Error_Handler();
;;;248    						BackupOldFirmware();
;;;249    						Error_Handler();
;;;250    						break;
;;;251    					}	
;;;252    					
;;;253    					
;;;254    					case DOWNLOAD_JOURNAL_1:
;;;255    					{
;;;256    						if(eTransferMode == TRANSFER_P2P)
;;;257    						{
;;;258    							rs485_buff[5] = 1U;
;;;259    							rs485_buff[6] = DOWNLOAD_JOURNAL_1;				
;;;260    							RS485_ResponsePacketReady();
;;;261    						}
;;;262    						break;
;;;263    					}
;;;264    					
;;;265    					
;;;266    					case SET_BEDDING_REPLACEMENT_PERIOD:
;;;267    					{
;;;268    						ee_buff[0] = EE_BEDDING_REPL_PERIOD_ADDRESS >> 8U;
;;;269    						ee_buff[1] = EE_BEDDING_REPL_PERIOD_ADDRESS & 0xFFU;
;;;270    						ee_buff[2] = (rs485_buff[1] - 48U) * 10U;
;;;271    						ee_buff[2] += (rs485_buff[2] - 48U);
;;;272                            
;;;273    						if (HAL_I2C_Master_Transmit(&hi2c1, I2C_EE_WRITE, ee_buff, 3, I2C_EE_TIMEOUT) != HAL_OK) Error_Handler();
;;;274    						if (HAL_I2C_IsDeviceReady(&hi2c1, I2C_EE_READ, I2C_EE_TRIALS, I2C_EE_WRITE_DELAY) != HAL_OK) Error_Handler();
;;;275                            
;;;276    						if(eTransferMode == TRANSFER_P2P)
;;;277    						{
;;;278    							rs485_buff[5] = 1U;
;;;279    							rs485_buff[6] = SET_BEDDING_REPLACEMENT_PERIOD;				
;;;280    							RS485_ResponsePacketReady();
;;;281    						}
;;;282    						break;
;;;283    					}
;;;284    					
;;;285    					
;;;286    					case GET_SYS_STATUS:
;;;287    					{
;;;288    						if(eTransferMode == TRANSFER_P2P)
;;;289    						{
;;;290    							rs485_buff[5] = 9U;
;;;291    							rs485_buff[6] = GET_SYS_STATUS;
;;;292    							 
;;;293    							for(tmp_b = 0U; tmp_b < 8U; tmp_b++) 
;;;294    							{	
;;;295    								if(sys_status & (1 << tmp_b)) rs485_buff[tmp_b + 7U] = '1';
;;;296    								else rs485_buff[tmp_b + 7U] = '0';
;;;297    							}
;;;298    							RS485_ResponsePacketReady();
;;;299    						}
;;;300    						break;
;;;301    					}
;;;302                        
;;;303    						
;;;304    					case SET_RTC_DATE_TIME:
;;;305    					{
;;;306                            Str2Hex(&rs485_buff[1], 1U, &date_rs.Date);
;;;307                            Str2Hex(&rs485_buff[3], 1U, &date_rs.Month);
;;;308                            Str2Hex(&rs485_buff[5], 1U, &date_rs.Year);
;;;309                            Str2Hex(&rs485_buff[7], 1U, &time_rs.Hours);
;;;310                            Str2Hex(&rs485_buff[9], 1U, &time_rs.Minutes);
;;;311                            Str2Hex(&rs485_buff[11],1U, &time_rs.Seconds);
;;;312                            
;;;313    						HAL_RTC_SetTime(&hrtc, &time_rs, RTC_FORMAT_BCD);
;;;314    						HAL_RTC_SetDate(&hrtc, &date_rs, RTC_FORMAT_BCD);
;;;315                            
;;;316    //                        ONEWIRE_TimeUpdateSet();
;;;317                            
;;;318    						if(eTransferMode == TRANSFER_P2P)
;;;319    						{
;;;320    							rs485_buff[5] = 1U;
;;;321    							rs485_buff[6] = SET_RTC_DATE_TIME;
;;;322    							RS485_ResponsePacketReady();
;;;323    						}
;;;324    						break;
;;;325    					}
;;;326    					
;;;327                        
;;;328    					case GET_LOG_LIST:
;;;329    					{
;;;330    //						if(LOGGER_Read(0U, ee_buff) == LOGGER_OK)
;;;331    //						{
;;;332    //							for(tmp_b = 0U; tmp_b < LOG_SIZE; tmp_b++)
;;;333    //							{
;;;334    //								rs485_buff[tmp_b + 7U] = ee_buff[tmp_b];
;;;335    //							}
;;;336    //							
;;;337    //							rs485_buff[5] = tmp_b + 2U;
;;;338    //							rs485_buff[6] = GET_LOG_LIST;
;;;339    //							RS485_ResponsePacketReady();
;;;340    //						}
;;;341    //						else if(eTransferMode == TRANSFER_P2P)
;;;342    //						{
;;;343    //							rs485_buff[5] = 1U;
;;;344    //							rs485_buff[6] = GET_LOG_LIST;
;;;345    //							RS485_ResponsePacketReady();
;;;346    //						}
;;;347    						break;
;;;348    					}
;;;349    					
;;;350    					
;;;351    					case DELETE_LOG_LIST:
;;;352    					{
;;;353    //						LOGGER_Delete(0U);
;;;354    					
;;;355    						if(eTransferMode == TRANSFER_P2P)
;;;356    						{
;;;357    							rs485_buff[5] = 1U;
;;;358    							rs485_buff[6] = DELETE_LOG_LIST;
;;;359    							RS485_ResponsePacketReady();
;;;360    						}				
;;;361    						break;
;;;362    					}
;;;363    					
;;;364    
;;;365    					case SET_RS485_CONFIG:
;;;366    					{
;;;367    						Str2Hex(&rs485_buff[1], 2U, rs485_interface_address);
00003a  f8dfb3c4          LDR      r11,|L7.1024|
00003e  2700              MOVS     r7,#0                 ;246
000040  4df0              LDR      r5,|L7.1028|
000042  f10b0b05          ADD      r11,r11,#5
000046  f04f0805          MOV      r8,#5                 ;246
00004a  2801              CMP      r0,#1                 ;162
00004c  d003              BEQ      |L7.86|
;;;368    						Str2Hex(&rs485_buff[5], 2U, rs485_group_address);
;;;369    						Str2Hex(&rs485_buff[9], 2U, rs485_broadcast_address);
;;;370    						rs485_interface_baudrate = rs485_buff[13];
;;;371                            
;;;372    						ee_buff[0] = (EE_RS485_INTERFACE_ADDRESS >> 8U);
;;;373    						ee_buff[1] = EE_RS485_INTERFACE_ADDRESS & 0xFFU;
;;;374    						ee_buff[2] = rs485_interface_address[0];
;;;375    						ee_buff[3] = rs485_interface_address[1];
;;;376    						ee_buff[4] = rs485_group_address[0];
;;;377    						ee_buff[5] = rs485_group_address[1];
;;;378    						ee_buff[6] = rs485_broadcast_address[0];
;;;379    						ee_buff[7] = rs485_broadcast_address[1];
;;;380    						ee_buff[8] = rs485_interface_baudrate;
;;;381                            
;;;382    						if (HAL_I2C_Master_Transmit(&hi2c1, I2C_EE_WRITE, ee_buff, 9U, I2C_EE_TIMEOUT) != HAL_OK) Error_Handler();
;;;383    						if (HAL_I2C_IsDeviceReady(&hi2c1, I2C_EE_READ, I2C_EE_TRIALS, I2C_EE_WRITE_DELAY) != HAL_OK) Error_Handler();
;;;384    						
;;;385    						if(eTransferMode == TRANSFER_P2P)
;;;386    						{
;;;387    							rs485_buff[5] = 1U;
;;;388    							rs485_buff[6] = SET_RS485_CONFIG;				
;;;389    							RS485_ResponsePacketReady();
;;;390    						}					
;;;391    						break;
;;;392    					}
;;;393    				
;;;394    					
;;;395    					case SET_MIFARE_PERMITED_GROUP:
;;;396    					{
;;;397    						ee_buff[0] = EE_PERMITED_GROUP_ADDRESS >> 8U;
;;;398    						ee_buff[1] = EE_PERMITED_GROUP_ADDRESS & 0xFFU;
;;;399    						
;;;400    						for(tmp_b = 1U; tmp_b < 17U; tmp_b++)
;;;401    						{
;;;402    							ee_buff[tmp_b + 1U] = rs485_buff[tmp_b];
;;;403    						}
;;;404    						
;;;405    						if (HAL_I2C_Master_Transmit(&hi2c1, I2C_EE_WRITE, ee_buff, 18U, I2C_EE_TIMEOUT) != HAL_OK) Error_Handler();
;;;406    						if (HAL_I2C_IsDeviceReady(&hi2c1, I2C_EE_READ, I2C_EE_TRIALS, I2C_EE_WRITE_DELAY) != HAL_OK) Error_Handler();
;;;407    						
;;;408    						if(eTransferMode == TRANSFER_P2P)
;;;409    						{
;;;410    							rs485_buff[5] = 1U;
;;;411    							rs485_buff[6] = SET_MIFARE_PERMITED_GROUP;
;;;412    							RS485_ResponsePacketReady();
;;;413    						}
;;;414    						break;
;;;415    					}
;;;416    					
;;;417    
;;;418    					case SET_DOUT_STATE:
;;;419    					{
;;;420    						for(tmp_b = 0U; tmp_b < 9U; tmp_b++)
;;;421    						{
;;;422    							if(rs485_buff[tmp_b + 1U] == '1') dout_0_7_remote |= (uint16_t) (1U << tmp_b);
;;;423    							else if(rs485_buff[tmp_b + 1U] == '0') dout_0_7_remote &= (uint16_t) (~(1U << tmp_b));
;;;424    						}
;;;425    						
;;;426    						if(eTransferMode == TRANSFER_P2P)
;;;427    						{
;;;428    							rs485_buff[5] = 1U;
;;;429    							rs485_buff[6] = SET_DOUT_STATE;
;;;430    							RS485_ResponsePacketReady();						
;;;431    						}
;;;432    						break;
;;;433    					}
;;;434    
;;;435    					
;;;436    					case SET_DISPLAY_BRIGHTNESS:
;;;437    					{
;;;438    						lcd_brightness = (rs485_buff[1] << 8U) + rs485_buff[2];
;;;439    						__HAL_TIM_SET_COMPARE(&htim2, TIM_CHANNEL_1, lcd_brightness);
;;;440    						ee_buff[0] = EE_LCD_BRIGHTNESS >> 8U;
;;;441    						ee_buff[1] = EE_LCD_BRIGHTNESS & 0xFFU;
;;;442    						ee_buff[2] = lcd_brightness >> 8U;
;;;443    						ee_buff[3] = lcd_brightness & 0xFFU;
;;;444    						if (HAL_I2C_Master_Transmit(&hi2c1, I2C_EE_WRITE, ee_buff, 4U, I2C_EE_TIMEOUT) != HAL_OK) Error_Handler();
;;;445    						if (HAL_I2C_IsDeviceReady(&hi2c1, I2C_EE_READ, I2C_EE_TRIALS, I2C_EE_WRITE_DELAY) != HAL_OK) Error_Handler();
;;;446    					
;;;447    						if(eTransferMode == TRANSFER_P2P)
;;;448    						{
;;;449    							rs485_buff[5] = 1U;
;;;450    							rs485_buff[6] = SET_DISPLAY_BRIGHTNESS;
;;;451    							RS485_ResponsePacketReady();						
;;;452    						}
;;;453    						break;
;;;454    					}	
;;;455    						
;;;456                        
;;;457    					case GET_ROOM_STATUS:
;;;458    					{
;;;459    						if(eTransferMode == TRANSFER_P2P)
;;;460    						{
;;;461    							rs485_buff[5] = 50U;
;;;462    							rs485_buff[6] = GET_ROOM_STATUS;
;;;463    							rs485_buff[7] = ROOM_Status + 0x30U;
;;;464    							if(rs485_buff[7] > 0x39U) rs485_buff[7] += 7U;
;;;465    							rs485_buff[8] = 'X';       // sensor error
;;;466                                rs485_buff[9] = '0';
;;;467                                rs485_buff[10] = '0';
;;;468                                rs485_buff[11] = '0';
;;;469                                rs485_buff[12] = 'D';
;;;470                                rs485_buff[13] = 'C';
;;;471                                rs485_buff[14] = '0';
;;;472                                rs485_buff[15] = '0';
;;;473                                rs485_buff[16] = '0';
;;;474                                rs485_buff[17] = '0';
;;;475                                
;;;476    							for(tmp_b = 0U; tmp_b < 8U; tmp_b++)
;;;477    							{
;;;478    								if(din_0_7 & (1U << tmp_b)) rs485_buff[tmp_b + 18U] = '1';
;;;479    								else rs485_buff[tmp_b + 18U] = '0';
;;;480    								if(dout_0_7 & (1U << tmp_b)) rs485_buff[tmp_b + 26U] = '1';
;;;481    								else rs485_buff[tmp_b + 26U] = '0';
;;;482    							}
;;;483    							
;;;484    							for(tmp_b = 34U; tmp_b < 42U; tmp_b++)
;;;485    							{
;;;486    								 rs485_buff[tmp_b] = sys_info_fw[tmp_b - 30U];
;;;487    							}
;;;488    							
;;;489    							ee_buff[0] = EE_BEDDING_REPL_PERIOD_ADDRESS >> 8U;
;;;490    							ee_buff[1] = EE_BEDDING_REPL_PERIOD_ADDRESS & 0xFFU;
;;;491    							if (HAL_I2C_Master_Transmit(&hi2c1, I2C_EE_WRITE, ee_buff, 2U, I2C_EE_TIMEOUT) != HAL_OK) Error_Handler();
;;;492    							if (HAL_I2C_Master_Receive(&hi2c1, I2C_EE_READ, &rs485_buff[43], 1U, I2C_EE_TIMEOUT) != HAL_OK) Error_Handler();
;;;493    							if(rs485_buff[43] > 99U) rs485_buff[43] = 99U;
;;;494    							rs485_buff[42] = ((rs485_buff[43] / 10U) + 48U);
;;;495    							while(rs485_buff[43] > 9U) rs485_buff[43] -= 10U;
;;;496    							rs485_buff[43] += 48U;
;;;497                                rs485_buff[44] = '0';
;;;498                                rs485_buff[45] = '0';
;;;499                                rs485_buff[46] = '0';
;;;500                                rs485_buff[47] = '0';
;;;501                                rs485_buff[48] = '0';
;;;502                                rs485_buff[49] = '0';
;;;503                                rs485_buff[50] = '0';
;;;504                                rs485_buff[51] = '0';
;;;505                                rs485_buff[52] = '0';
;;;506                                rs485_buff[53] = '0';
;;;507                                rs485_buff[54] = 'D';
;;;508                                rs485_buff[55] = 'C';
;;;509    							RS485_ResponsePacketReady();						
;;;510    						}
;;;511    						break;						
;;;512    					}
;;;513    					
;;;514    					
;;;515    					case SET_ROOM_STATUS:
;;;516    					{							
;;;517    						ROOM_Status = (ROOM_StatusTypeDef) (rs485_buff[1] - 0x30U);
;;;518    						if(IS_09(rs485_buff[2])) ROOM_Status += ((rs485_buff[2] - 0x30U) + 9U);
;;;519    							
;;;520    						if(eTransferMode == TRANSFER_P2P)
;;;521    						{
;;;522    							rs485_buff[5] = 1U;
;;;523    							rs485_buff[6] = SET_ROOM_STATUS;
;;;524    							RS485_ResponsePacketReady();						
;;;525    						}
;;;526    						break;						
;;;527    					}
;;;528                        
;;;529                        
;;;530                        case SET_ROOM_THERMOSTAT_IMAGE:
;;;531    					{
;;;532                            if(eTransferMode == TRANSFER_P2P)
;;;533    						{
;;;534    							rs485_buff[5] = 1U;
;;;535    							rs485_buff[6] = SET_ROOM_THERMOSTAT_IMAGE;
;;;536    							RS485_ResponsePacketReady();						
;;;537    						}
;;;538    						break;						
;;;539    					}
;;;540    					
;;;541    					
;;;542    					case RESET_SOS_ALARM:
;;;543    					{
;;;544    						if((rs485_buff[1] == '1') && IsSosAlarmActiv())
;;;545    						{
;;;546    							SosAlarm_Off();
;;;547    							DISPLAY_SosAlarmImageDelete();
;;;548    							SignalBuzzer = BUZZ_OFF;
;;;549    							rs485_buff[7] = '1';
;;;550    						}
;;;551    						else
;;;552    						{
;;;553    							rs485_buff[7] = '0';
;;;554    						}
;;;555    					
;;;556    						if(eTransferMode == TRANSFER_P2P)
;;;557    						{
;;;558    							rs485_buff[5] = 2U;
;;;559    							rs485_buff[6] = RESET_SOS_ALARM;
;;;560    							RS485_ResponsePacketReady();						
;;;561    						}
;;;562    						break;
;;;563    					}	
;;;564    					
;;;565    					
;;;566    					case SET_ROOM_TEMPERATURE:
;;;567    					{
;;;568    						if(eTransferMode == TRANSFER_P2P)
;;;569    						{
;;;570    							rs485_buff[5] = 1U;
;;;571    							rs485_buff[6] = SET_ROOM_TEMPERATURE;						
;;;572    							RS485_ResponsePacketReady();						
;;;573    						}
;;;574    						break;
;;;575    					}
;;;576    					
;;;577    					
;;;578    					case SET_SYSTEM_ID:
;;;579    					{
;;;580    						system_id[0] = rs485_buff[1];
;;;581    						system_id[1] = rs485_buff[2];
;;;582    						ee_buff[0] = EE_SYSTEM_ID_ADDRESS >> 8U;
;;;583    						ee_buff[1] = EE_SYSTEM_ID_ADDRESS & 0xFFU;
;;;584    						ee_buff[2] = system_id[0];
;;;585    						ee_buff[3] = system_id[1];
;;;586    						if (HAL_I2C_Master_Transmit(&hi2c1, I2C_EE_WRITE, ee_buff, 4U, I2C_EE_TIMEOUT) != HAL_OK) Error_Handler();
;;;587    						if (HAL_I2C_IsDeviceReady(&hi2c1, I2C_EE_READ, I2C_EE_TRIALS, I2C_EE_WRITE_DELAY) != HAL_OK) Error_Handler();
;;;588    						
;;;589    						if(eTransferMode == TRANSFER_P2P)
;;;590    						{
;;;591    							rs485_buff[5] = 1U;
;;;592    							rs485_buff[6] = SET_SYSTEM_ID;						
;;;593    							RS485_ResponsePacketReady();						
;;;594    						}
;;;595    						break;
;;;596    					}
;;;597    					
;;;598    					
;;;599    					case PREVIEW_DISPLAY_IMAGE:
;;;600    					{
;;;601    						DISPLAY_PreviewImage();
;;;602    						
;;;603    						if(eTransferMode == TRANSFER_P2P)
;;;604    						{
;;;605    							rs485_buff[5] = 1U;
;;;606    							rs485_buff[6] = PREVIEW_DISPLAY_IMAGE;						
;;;607    							RS485_ResponsePacketReady();						
;;;608    						}
;;;609    						break;
;;;610    					}
;;;611    					
;;;612    					default:
;;;613    					{
;;;614    						RS485_NoResponse();
;;;615    						break;
;;;616    					}
;;;617    				}				
;;;618    			}
;;;619    		}
;;;620    		else if(packet_type == STX)
00004e  6c20              LDR      r0,[r4,#0x40]  ; packet_type
000050  2802              CMP      r0,#2
000052  d06d              BEQ      |L7.304|
                  |L7.84|
000054  e20c              B        |L7.1136|
                  |L7.86|
000056  782b              LDRB     r3,[r5,#0]            ;164  ; rs485_buff
000058  2601              MOVS     r6,#1                 ;167
00005a  f1a30064          SUB      r0,r3,#0x64           ;164
00005e  2817              CMP      r0,#0x17              ;164
000060  d868              BHI      |L7.308|
000062  65e7              STR      r7,[r4,#0x5c]         ;166  ; receiving_errors
000064  61a6              STR      r6,[r4,#0x18]         ;167  ; next_packet_number
000066  70e3              STRB     r3,[r4,#3]            ;168
000068  78a8              LDRB     r0,[r5,#2]            ;169  ; rs485_buff
00006a  7869              LDRB     r1,[r5,#1]            ;169  ; rs485_buff
00006c  eb002001          ADD      r0,r0,r1,LSL #8       ;169
000070  61e0              STR      r0,[r4,#0x1c]         ;169  ; total_packet_number
000072  7aa8              LDRB     r0,[r5,#0xa]          ;170  ; rs485_buff
000074  79e9              LDRB     r1,[r5,#7]            ;170  ; rs485_buff
000076  7a6a              LDRB     r2,[r5,#9]            ;170  ; rs485_buff
000078  eb006001          ADD      r0,r0,r1,LSL #24      ;170
00007c  7a29              LDRB     r1,[r5,#8]            ;170  ; rs485_buff
00007e  0409              LSLS     r1,r1,#16             ;170
000080  eb012102          ADD      r1,r1,r2,LSL #8       ;170
000084  4408              ADD      r0,r0,r1              ;170
000086  6260              STR      r0,[r4,#0x24]         ;170  ; crc_32_file
000088  79a8              LDRB     r0,[r5,#6]            ;171  ; rs485_buff
00008a  78e9              LDRB     r1,[r5,#3]            ;171  ; rs485_buff
00008c  796a              LDRB     r2,[r5,#5]            ;171  ; rs485_buff
00008e  eb006001          ADD      r0,r0,r1,LSL #24      ;171
000092  7929              LDRB     r1,[r5,#4]            ;171  ; rs485_buff
000094  0409              LSLS     r1,r1,#16             ;171
000096  eb012102          ADD      r1,r1,r2,LSL #8       ;171
00009a  4408              ADD      r0,r0,r1              ;171
00009c  6160              STR      r0,[r4,#0x14]         ;171  ; total_bytes_in_file
00009e  f7fffffe          BL       HAL_GetTick
0000a2  6120              STR      r0,[r4,#0x10]         ;172  ; rs485_update_timeout_timer
0000a4  78a0              LDRB     r0,[r4,#2]            ;173  ; sys_status
0000a6  f0200008          BIC      r0,r0,#8              ;173
0000aa  70a0              STRB     r0,[r4,#2]            ;173
0000ac  6ce1              LDR      r1,[r4,#0x4c]         ;174  ; rs485_flags
0000ae  f0410101          ORR      r1,r1,#1              ;174
0000b2  64e1              STR      r1,[r4,#0x4c]         ;174  ; rs485_flags
0000b4  78e1              LDRB     r1,[r4,#3]            ;176  ; activ_command
0000b6  2977              CMP      r1,#0x77              ;176
0000b8  d015              BEQ      |L7.230|
0000ba  2978              CMP      r1,#0x78              ;176
0000bc  d013              BEQ      |L7.230|
0000be  f0200040          BIC      r0,r0,#0x40           ;178
0000c2  70a0              STRB     r0,[r4,#2]            ;178
0000c4  f44f0090          MOV      r0,#0x480000          ;179
0000c8  62a0              STR      r0,[r4,#0x28]         ;179  ; flash_destination
0000ca  2263              MOVS     r2,#0x63              ;180
0000cc  63a2              STR      r2,[r4,#0x38]         ;180  ; post_process
0000ce  62e0              STR      r0,[r4,#0x2c]         ;181  ; file_copy_source_address
0000d0  3964              SUBS     r1,r1,#0x64           ;182
0000d2  eb010141          ADD      r1,r1,r1,LSL #1       ;182
0000d6  0409              LSLS     r1,r1,#16             ;182
0000d8  6321              STR      r1,[r4,#0x30]         ;182  ; file_copy_destination_address
0000da  6961              LDR      r1,[r4,#0x14]         ;183  ; total_bytes_in_file
0000dc  6361              STR      r1,[r4,#0x34]         ;183  ; file_copy_size
0000de  2103              MOVS     r1,#3                 ;184
0000e0  f7fffffe          BL       FormatFileStorage
0000e4  e018              B        |L7.280|
                  |L7.230|
0000e6  f0200080          BIC      r0,r0,#0x80           ;188
0000ea  70a0              STRB     r0,[r4,#2]            ;188
0000ec  f1a10064          SUB      r0,r1,#0x64           ;189
0000f0  eb000040          ADD      r0,r0,r0,LSL #1       ;189
0000f4  0400              LSLS     r0,r0,#16             ;189
0000f6  62a0              STR      r0,[r4,#0x28]         ;189  ; flash_destination
0000f8  2977              CMP      r1,#0x77              ;190
0000fa  d002              BEQ      |L7.258|
0000fc  2978              CMP      r1,#0x78              ;191
0000fe  d006              BEQ      |L7.270|
000100  e00a              B        |L7.280|
                  |L7.258|
000102  2103              MOVS     r1,#3                 ;190
000104  f44f1064          MOV      r0,#0x390000          ;190
000108  f7fffffe          BL       FormatFileStorage
00010c  e004              B        |L7.280|
                  |L7.270|
00010e  2103              MOVS     r1,#3                 ;191
000110  f44f1070          MOV      r0,#0x3c0000          ;191
000114  f7fffffe          BL       FormatFileStorage
                  |L7.280|
000118  7860              LDRB     r0,[r4,#1]            ;194  ; eTransferMode
00011a  2801              CMP      r0,#1                 ;194
00011c  d19a              BNE      |L7.84|
00011e  716e              STRB     r6,[r5,#5]            ;196
000120  78e0              LDRB     r0,[r4,#3]            ;197  ; activ_command
000122  71a8              STRB     r0,[r5,#6]            ;197
000124  6ce0              LDR      r0,[r4,#0x4c]         ;198  ; rs485_flags
000126  f0400002          ORR      r0,r0,#2              ;198
00012a  64e0              STR      r0,[r4,#0x4c]         ;198  ; rs485_flags
                  |L7.300|
00012c  e1a0              B        |L7.1136|
                  |L7.302|
00012e  e3f2              B        |L7.2326|
                  |L7.304|
000130  e37e              B        |L7.2096|
000132  e7ff              B        |L7.308|
                  |L7.308|
000134  f8dfa2cc          LDR      r10,|L7.1028|
000138  f8df92cc          LDR      r9,|L7.1032|
00013c  2131              MOVS     r1,#0x31              ;295
00013e  2030              MOVS     r0,#0x30              ;296
000140  f04f0e39          MOV      lr,#0x39              ;269
000144  f10a0a09          ADD      r10,r10,#9            ;164
000148  2bd3              CMP      r3,#0xd3              ;203
00014a  d07d              BEQ      |L7.584|
00014c  dc19              BGT      |L7.386|
00014e  4aaf              LDR      r2,|L7.1036|
000150  2bc0              CMP      r3,#0xc0              ;203
000152  d04c              BEQ      |L7.494|
000154  dc0c              BGT      |L7.368|
000156  2ba1              CMP      r3,#0xa1              ;203
000158  d077              BEQ      |L7.586|
00015a  dc04              BGT      |L7.358|
00015c  2b85              CMP      r3,#0x85              ;203
00015e  d075              BEQ      |L7.588|
000160  2ba0              CMP      r3,#0xa0              ;203
                  |L7.354|
000162  d174              BNE      |L7.590|
000164  e0b5              B        |L7.722|
                  |L7.358|
000166  2ba3              CMP      r3,#0xa3              ;203
000168  d0e0              BEQ      |L7.300|
00016a  2bbc              CMP      r3,#0xbc              ;203
00016c  d1f9              BNE      |L7.354|
00016e  e04a              B        |L7.518|
                  |L7.368|
000170  2bc2              CMP      r3,#0xc2              ;203
000172  d011              BEQ      |L7.408|
000174  2bd0              CMP      r3,#0xd0              ;203
000176  d06b              BEQ      |L7.592|
000178  2bd1              CMP      r3,#0xd1              ;203
00017a  d06a              BEQ      |L7.594|
00017c  2bd2              CMP      r3,#0xd2              ;203
00017e  d1f0              BNE      |L7.354|
000180  e1a5              B        |L7.1230|
                  |L7.386|
000182  3bd4              SUBS     r3,r3,#0xd4           ;203
000184  2b0b              CMP      r3,#0xb               ;203
000186  d262              BCS      |L7.590|
000188  e8dff003          TBB      [pc,r3]               ;203
00018c  fec4fdfc          DCB      0xfe,0xc4,0xfd,0xfc
000190  fbfa76f9          DCB      0xfb,0xfa,0x76,0xf9
000194  6161f800          DCB      0x61,0x61,0xf8,0x00
                  |L7.408|
000198  f7fffffe          BL       HAL_GetTick
00019c  6120              STR      r0,[r4,#0x10]         ;207  ; rs485_update_timeout_timer
00019e  6ce0              LDR      r0,[r4,#0x4c]         ;208  ; rs485_flags
0001a0  f0400001          ORR      r0,r0,#1              ;208
0001a4  64e0              STR      r0,[r4,#0x4c]         ;208  ; rs485_flags
0001a6  f7fffffe          BL       UpdateBootloader
0001aa  b168              CBZ      r0,|L7.456|
0001ac  f8d90000          LDR      r0,[r9,#0]            ;217  ; display_flags
0001b0  f0400001          ORR      r0,r0,#1              ;217
0001b4  f8c90000          STR      r0,[r9,#0]            ;217  ; display_flags
0001b8  78a0              LDRB     r0,[r4,#2]            ;218  ; sys_status
0001ba  f0400010          ORR      r0,r0,#0x10           ;218
0001be  70a0              STRB     r0,[r4,#2]            ;218
                  |L7.448|
0001c0  7860              LDRB     r0,[r4,#1]            ;221  ; eTransferMode
0001c2  2801              CMP      r0,#1                 ;221
0001c4  d00b              BEQ      |L7.478|
                  |L7.454|
0001c6  e3bc              B        |L7.2370|
                  |L7.456|
0001c8  f8d90000          LDR      r0,[r9,#0]            ;212  ; display_flags
0001cc  f0400002          ORR      r0,r0,#2              ;212
0001d0  f8c90000          STR      r0,[r9,#0]            ;212  ; display_flags
0001d4  78a0              LDRB     r0,[r4,#2]            ;213  ; sys_status
0001d6  f0400020          ORR      r0,r0,#0x20           ;213
0001da  70a0              STRB     r0,[r4,#2]            ;213
0001dc  e7f0              B        |L7.448|
                  |L7.478|
0001de  716e              STRB     r6,[r5,#5]            ;223
0001e0  20c2              MOVS     r0,#0xc2              ;224
0001e2  71a8              STRB     r0,[r5,#6]            ;224
0001e4  6ce0              LDR      r0,[r4,#0x4c]         ;225  ; rs485_flags
0001e6  f0400002          ORR      r0,r0,#2              ;225
0001ea  64e0              STR      r0,[r4,#0x4c]         ;225  ; rs485_flags
                  |L7.492|
0001ec  e3a9              B        |L7.2370|
                  |L7.494|
0001ee  7860              LDRB     r0,[r4,#1]            ;233  ; eTransferMode
0001f0  2801              CMP      r0,#1                 ;233
0001f2  d102              BNE      |L7.506|
0001f4  2006              MOVS     r0,#6                 ;233
0001f6  f7fffffe          BL       Serial_PutByte
                  |L7.506|
0001fa  200a              MOVS     r0,#0xa               ;234
0001fc  f7fffffe          BL       HAL_Delay
000200  f7fffffe          BL       Error_Handler
000204  e39d              B        |L7.2370|
                  |L7.518|
000206  7860              LDRB     r0,[r4,#1]            ;242  ; eTransferMode
000208  2801              CMP      r0,#1                 ;242
00020a  d102              BNE      |L7.530|
00020c  2006              MOVS     r0,#6                 ;242
00020e  f7fffffe          BL       Serial_PutByte
                  |L7.530|
000212  f88d7004          STRB     r7,[sp,#4]            ;243
000216  2025              MOVS     r0,#0x25              ;244
000218  f88d0005          STRB     r0,[sp,#5]            ;244
00021c  2057              MOVS     r0,#0x57              ;245
00021e  f88d0006          STRB     r0,[sp,#6]            ;245
000222  2303              MOVS     r3,#3                 ;246
000224  aa01              ADD      r2,sp,#4              ;246
000226  21a0              MOVS     r1,#0xa0              ;246
000228  4879              LDR      r0,|L7.1040|
00022a  f8cd8000          STR      r8,[sp,#0]            ;246
00022e  f7fffffe          BL       HAL_I2C_Master_Transmit
000232  b108              CBZ      r0,|L7.568|
000234  f7fffffe          BL       Error_Handler
                  |L7.568|
000238  230f              MOVS     r3,#0xf               ;247
00023a  2264              MOVS     r2,#0x64              ;247
00023c  21a1              MOVS     r1,#0xa1              ;247
00023e  4874              LDR      r0,|L7.1040|
000240  f7fffffe          BL       HAL_I2C_IsDeviceReady
000244  b140              CBZ      r0,|L7.600|
000246  e005              B        |L7.596|
                  |L7.584|
000248  e0a9              B        |L7.926|
                  |L7.586|
00024a  e198              B        |L7.1406|
                  |L7.588|
00024c  e009              B        |L7.610|
                  |L7.590|
00024e  e2d1              B        |L7.2036|
                  |L7.592|
000250  e23d              B        |L7.1742|
                  |L7.594|
000252  e0af              B        |L7.948|
                  |L7.596|
000254  f7fffffe          BL       Error_Handler
                  |L7.600|
000258  f7fffffe          BL       BackupOldFirmware
00025c  f7fffffe          BL       Error_Handler
000260  e36f              B        |L7.2370|
                  |L7.610|
000262  7860              LDRB     r0,[r4,#1]            ;256  ; eTransferMode
000264  2801              CMP      r0,#1                 ;256
000266  d1ae              BNE      |L7.454|
000268  716e              STRB     r6,[r5,#5]            ;258
00026a  2085              MOVS     r0,#0x85              ;259
00026c  71a8              STRB     r0,[r5,#6]            ;259
00026e  6ce0              LDR      r0,[r4,#0x4c]         ;260  ; rs485_flags
000270  f0400002          ORR      r0,r0,#2              ;260
000274  64e0              STR      r0,[r4,#0x4c]         ;260  ; rs485_flags
000276  e364              B        |L7.2370|
000278  f88d7004          STRB     r7,[sp,#4]            ;268
00027c  f88de005          STRB     lr,[sp,#5]            ;269
000280  7868              LDRB     r0,[r5,#1]            ;270  ; rs485_buff
000282  3830              SUBS     r0,r0,#0x30           ;270
000284  eb000080          ADD      r0,r0,r0,LSL #2       ;270
000288  0040              LSLS     r0,r0,#1              ;270
00028a  78a9              LDRB     r1,[r5,#2]            ;271  ; rs485_buff
00028c  4408              ADD      r0,r0,r1              ;271
00028e  3830              SUBS     r0,r0,#0x30           ;271
000290  f88d0006          STRB     r0,[sp,#6]            ;271
000294  2303              MOVS     r3,#3                 ;273
000296  aa01              ADD      r2,sp,#4              ;273
000298  21a0              MOVS     r1,#0xa0              ;273
00029a  485d              LDR      r0,|L7.1040|
00029c  f8cd8000          STR      r8,[sp,#0]            ;273
0002a0  f7fffffe          BL       HAL_I2C_Master_Transmit
0002a4  b108              CBZ      r0,|L7.682|
0002a6  f7fffffe          BL       Error_Handler
                  |L7.682|
0002aa  230f              MOVS     r3,#0xf               ;274
0002ac  2264              MOVS     r2,#0x64              ;274
0002ae  21a1              MOVS     r1,#0xa1              ;274
0002b0  4857              LDR      r0,|L7.1040|
0002b2  f7fffffe          BL       HAL_I2C_IsDeviceReady
0002b6  b108              CBZ      r0,|L7.700|
0002b8  f7fffffe          BL       Error_Handler
                  |L7.700|
0002bc  7860              LDRB     r0,[r4,#1]            ;276  ; eTransferMode
0002be  2801              CMP      r0,#1                 ;276
0002c0  d194              BNE      |L7.492|
0002c2  716e              STRB     r6,[r5,#5]            ;278
0002c4  20da              MOVS     r0,#0xda              ;279
0002c6  71a8              STRB     r0,[r5,#6]            ;279
0002c8  6ce0              LDR      r0,[r4,#0x4c]         ;280  ; rs485_flags
0002ca  f0400002          ORR      r0,r0,#2              ;280
0002ce  64e0              STR      r0,[r4,#0x4c]         ;280  ; rs485_flags
                  |L7.720|
0002d0  e337              B        |L7.2370|
                  |L7.722|
0002d2  7862              LDRB     r2,[r4,#1]            ;288  ; eTransferMode
0002d4  2a01              CMP      r2,#1                 ;288
0002d6  d189              BNE      |L7.492|
0002d8  2209              MOVS     r2,#9                 ;290
0002da  716a              STRB     r2,[r5,#5]            ;290
0002dc  22a0              MOVS     r2,#0xa0              ;291
0002de  71aa              STRB     r2,[r5,#6]            ;291
0002e0  60e7              STR      r7,[r4,#0xc]          ;293  ; tmp_b
0002e2  78a3              LDRB     r3,[r4,#2]            ;155
                  |L7.740|
0002e4  68e2              LDR      r2,[r4,#0xc]          ;295  ; tmp_b
0002e6  fa06fc02          LSL      r12,r6,r2             ;295
0002ea  ea1c0f03          TST      r12,r3                ;295
0002ee  d004              BEQ      |L7.762|
0002f0  eb050c02          ADD      r12,r5,r2             ;295
0002f4  f88c1007          STRB     r1,[r12,#7]           ;295
0002f8  e003              B        |L7.770|
                  |L7.762|
0002fa  eb050c02          ADD      r12,r5,r2             ;296
0002fe  f88c0007          STRB     r0,[r12,#7]           ;296
                  |L7.770|
000302  1c52              ADDS     r2,r2,#1              ;293
000304  60e2              STR      r2,[r4,#0xc]          ;293  ; tmp_b
000306  2a08              CMP      r2,#8                 ;293
000308  d3ec              BCC      |L7.740|
00030a  6ce0              LDR      r0,[r4,#0x4c]         ;298  ; rs485_flags
00030c  f0400002          ORR      r0,r0,#2              ;298
000310  64e0              STR      r0,[r4,#0x4c]         ;298  ; rs485_flags
000312  e316              B        |L7.2370|
000314  f10d081c          ADD      r8,sp,#0x1c           ;306
000318  f10d021e          ADD      r2,sp,#0x1e           ;306
00031c  2101              MOVS     r1,#1                 ;306
00031e  1c68              ADDS     r0,r5,#1              ;306
000320  f7fffffe          BL       Str2Hex
000324  f1080201          ADD      r2,r8,#1              ;307
000328  2101              MOVS     r1,#1                 ;307
00032a  1ce8              ADDS     r0,r5,#3              ;307
00032c  f7fffffe          BL       Str2Hex
000330  f1080203          ADD      r2,r8,#3              ;308
000334  2101              MOVS     r1,#1                 ;308
000336  1d68              ADDS     r0,r5,#5              ;308
000338  f7fffffe          BL       Str2Hex
00033c  aa08              ADD      r2,sp,#0x20           ;309
00033e  2101              MOVS     r1,#1                 ;309
000340  1de8              ADDS     r0,r5,#7              ;309
000342  f7fffffe          BL       Str2Hex
000346  f10d0820          ADD      r8,sp,#0x20           ;310
00034a  f10d0221          ADD      r2,sp,#0x21           ;310
00034e  2101              MOVS     r1,#1                 ;310
000350  4650              MOV      r0,r10                ;310
000352  f7fffffe          BL       Str2Hex
000356  482b              LDR      r0,|L7.1028|
000358  f1080202          ADD      r2,r8,#2              ;311
00035c  2101              MOVS     r1,#1                 ;311
00035e  300b              ADDS     r0,r0,#0xb            ;311
000360  f7fffffe          BL       Str2Hex
000364  2201              MOVS     r2,#1                 ;313
000366  a908              ADD      r1,sp,#0x20           ;313
000368  482a              LDR      r0,|L7.1044|
00036a  f7fffffe          BL       HAL_RTC_SetTime
00036e  2201              MOVS     r2,#1                 ;314
000370  a907              ADD      r1,sp,#0x1c           ;314
000372  4828              LDR      r0,|L7.1044|
000374  f7fffffe          BL       HAL_RTC_SetDate
000378  7860              LDRB     r0,[r4,#1]            ;318  ; eTransferMode
00037a  e006              B        |L7.906|
00037c  e1be              B        |L7.1788|
00037e  e078              B        |L7.1138|
000380  e227              B        |L7.2002|
000382  e1f9              B        |L7.1912|
000384  e0c8              B        |L7.1304|
000386  e1ec              B        |L7.1890|
000388  e1c3              B        |L7.1810|
                  |L7.906|
00038a  2801              CMP      r0,#1                 ;318
00038c  d1a0              BNE      |L7.720|
00038e  716e              STRB     r6,[r5,#5]            ;320
000390  20d5              MOVS     r0,#0xd5              ;321
000392  71a8              STRB     r0,[r5,#6]            ;321
000394  6ce0              LDR      r0,[r4,#0x4c]         ;322  ; rs485_flags
000396  f0400002          ORR      r0,r0,#2              ;322
00039a  64e0              STR      r0,[r4,#0x4c]         ;322  ; rs485_flags
                  |L7.924|
00039c  e2d1              B        |L7.2370|
                  |L7.926|
00039e  7860              LDRB     r0,[r4,#1]            ;355  ; eTransferMode
0003a0  2801              CMP      r0,#1                 ;355
0003a2  d195              BNE      |L7.720|
0003a4  716e              STRB     r6,[r5,#5]            ;357
0003a6  20d3              MOVS     r0,#0xd3              ;358
0003a8  71a8              STRB     r0,[r5,#6]            ;358
0003aa  6ce0              LDR      r0,[r4,#0x4c]         ;359  ; rs485_flags
0003ac  f0400002          ORR      r0,r0,#2              ;359
0003b0  64e0              STR      r0,[r4,#0x4c]         ;359  ; rs485_flags
0003b2  e2c6              B        |L7.2370|
                  |L7.948|
0003b4  4a12              LDR      r2,|L7.1024|
0003b6  2102              MOVS     r1,#2                 ;367
0003b8  1d52              ADDS     r2,r2,#5              ;367
0003ba  1c68              ADDS     r0,r5,#1              ;367
0003bc  f7fffffe          BL       Str2Hex
0003c0  4a0f              LDR      r2,|L7.1024|
0003c2  2102              MOVS     r1,#2                 ;368
0003c4  1dd2              ADDS     r2,r2,#7              ;368
0003c6  1d68              ADDS     r0,r5,#5              ;368
0003c8  f7fffffe          BL       Str2Hex
0003cc  4a0c              LDR      r2,|L7.1024|
0003ce  2102              MOVS     r1,#2                 ;369
0003d0  3209              ADDS     r2,r2,#9              ;369
0003d2  4650              MOV      r0,r10                ;369
0003d4  f7fffffe          BL       Str2Hex
0003d8  7b68              LDRB     r0,[r5,#0xd]          ;370  ; rs485_buff
0003da  7120              STRB     r0,[r4,#4]            ;370
0003dc  f88d7004          STRB     r7,[sp,#4]            ;372
0003e0  2128              MOVS     r1,#0x28              ;373
0003e2  f88d1005          STRB     r1,[sp,#5]            ;373
0003e6  f89b1000          LDRB     r1,[r11,#0]           ;374  ; rs485_interface_address
0003ea  f88d1006          STRB     r1,[sp,#6]            ;374
0003ee  f89b1001          LDRB     r1,[r11,#1]           ;375  ; rs485_interface_address
0003f2  f88d1007          STRB     r1,[sp,#7]            ;375
0003f6  4902              LDR      r1,|L7.1024|
0003f8  1dc9              ADDS     r1,r1,#7              ;376
0003fa  780a              LDRB     r2,[r1,#0]            ;376  ; rs485_group_address
0003fc  e00c              B        |L7.1048|
0003fe  0000              DCW      0x0000
                  |L7.1024|
                          DCD      ||.data||
                  |L7.1028|
                          DCD      ||.bss||
                  |L7.1032|
                          DCD      display_flags
                  |L7.1036|
                          DCD      ROOM_Status
                  |L7.1040|
                          DCD      hi2c1
                  |L7.1044|
                          DCD      hrtc
                  |L7.1048|
000418  f88d2008          STRB     r2,[sp,#8]            ;376
00041c  7849              LDRB     r1,[r1,#1]            ;377  ; rs485_group_address
00041e  f88d1009          STRB     r1,[sp,#9]            ;377
000422  49f7              LDR      r1,|L7.2048|
000424  780a              LDRB     r2,[r1,#0]            ;378  ; rs485_broadcast_address
000426  f88d200a          STRB     r2,[sp,#0xa]          ;378
00042a  7849              LDRB     r1,[r1,#1]            ;379  ; rs485_broadcast_address
00042c  f88d100b          STRB     r1,[sp,#0xb]          ;379
000430  f88d000c          STRB     r0,[sp,#0xc]          ;380
000434  2309              MOVS     r3,#9                 ;382
000436  aa01              ADD      r2,sp,#4              ;382
000438  21a0              MOVS     r1,#0xa0              ;382
00043a  48f2              LDR      r0,|L7.2052|
00043c  f8cd8000          STR      r8,[sp,#0]            ;382
000440  f7fffffe          BL       HAL_I2C_Master_Transmit
000444  b108              CBZ      r0,|L7.1098|
000446  f7fffffe          BL       Error_Handler
                  |L7.1098|
00044a  230f              MOVS     r3,#0xf               ;383
00044c  2264              MOVS     r2,#0x64              ;383
00044e  21a1              MOVS     r1,#0xa1              ;383
000450  48ec              LDR      r0,|L7.2052|
000452  f7fffffe          BL       HAL_I2C_IsDeviceReady
000456  b108              CBZ      r0,|L7.1116|
000458  f7fffffe          BL       Error_Handler
                  |L7.1116|
00045c  7860              LDRB     r0,[r4,#1]            ;385  ; eTransferMode
00045e  2801              CMP      r0,#1                 ;385
000460  d19c              BNE      |L7.924|
000462  716e              STRB     r6,[r5,#5]            ;387
000464  20d1              MOVS     r0,#0xd1              ;388
000466  71a8              STRB     r0,[r5,#6]            ;388
000468  6ce0              LDR      r0,[r4,#0x4c]         ;389  ; rs485_flags
00046a  f0400002          ORR      r0,r0,#2              ;389
00046e  64e0              STR      r0,[r4,#0x4c]         ;389  ; rs485_flags
                  |L7.1136|
000470  e267              B        |L7.2370|
                  |L7.1138|
000472  f88d7004          STRB     r7,[sp,#4]            ;397
000476  2050              MOVS     r0,#0x50              ;398
000478  f88d0005          STRB     r0,[sp,#5]            ;398
00047c  60e6              STR      r6,[r4,#0xc]          ;400  ; tmp_b
00047e  a901              ADD      r1,sp,#4              ;135
                  |L7.1152|
000480  68e0              LDR      r0,[r4,#0xc]          ;402  ; tmp_b
000482  180b              ADDS     r3,r1,r0              ;402
000484  5c2a              LDRB     r2,[r5,r0]            ;402
000486  705a              STRB     r2,[r3,#1]            ;402
000488  1c40              ADDS     r0,r0,#1              ;400
00048a  60e0              STR      r0,[r4,#0xc]          ;400  ; tmp_b
00048c  2811              CMP      r0,#0x11              ;400
00048e  d3f7              BCC      |L7.1152|
000490  2312              MOVS     r3,#0x12              ;405
000492  aa01              ADD      r2,sp,#4              ;405
000494  21a0              MOVS     r1,#0xa0              ;405
000496  48db              LDR      r0,|L7.2052|
000498  f8cd8000          STR      r8,[sp,#0]            ;405
00049c  f7fffffe          BL       HAL_I2C_Master_Transmit
0004a0  b108              CBZ      r0,|L7.1190|
0004a2  f7fffffe          BL       Error_Handler
                  |L7.1190|
0004a6  230f              MOVS     r3,#0xf               ;406
0004a8  2264              MOVS     r2,#0x64              ;406
0004aa  21a1              MOVS     r1,#0xa1              ;406
0004ac  48d5              LDR      r0,|L7.2052|
0004ae  f7fffffe          BL       HAL_I2C_IsDeviceReady
0004b2  b108              CBZ      r0,|L7.1208|
0004b4  f7fffffe          BL       Error_Handler
                  |L7.1208|
0004b8  7860              LDRB     r0,[r4,#1]            ;408  ; eTransferMode
0004ba  2801              CMP      r0,#1                 ;408
0004bc  d1d8              BNE      |L7.1136|
0004be  716e              STRB     r6,[r5,#5]            ;410
0004c0  20db              MOVS     r0,#0xdb              ;411
0004c2  71a8              STRB     r0,[r5,#6]            ;411
0004c4  6ce0              LDR      r0,[r4,#0x4c]         ;412  ; rs485_flags
0004c6  f0400002          ORR      r0,r0,#2              ;412
0004ca  64e0              STR      r0,[r4,#0x4c]         ;412  ; rs485_flags
                  |L7.1228|
0004cc  e239              B        |L7.2370|
                  |L7.1230|
0004ce  60e7              STR      r7,[r4,#0xc]          ;420  ; tmp_b
0004d0  4acd              LDR      r2,|L7.2056|
                  |L7.1234|
0004d2  68e0              LDR      r0,[r4,#0xc]          ;422  ; tmp_b
0004d4  1829              ADDS     r1,r5,r0              ;422
0004d6  7849              LDRB     r1,[r1,#1]            ;422
0004d8  2931              CMP      r1,#0x31              ;422
0004da  d002              BEQ      |L7.1250|
0004dc  2930              CMP      r1,#0x30              ;423
0004de  d006              BEQ      |L7.1262|
0004e0  e00a              B        |L7.1272|
                  |L7.1250|
0004e2  8813              LDRH     r3,[r2,#0]            ;422  ; dout_0_7_remote
0004e4  fa06f100          LSL      r1,r6,r0              ;422
0004e8  4319              ORRS     r1,r1,r3              ;422
0004ea  8011              STRH     r1,[r2,#0]            ;422
0004ec  e004              B        |L7.1272|
                  |L7.1262|
0004ee  8813              LDRH     r3,[r2,#0]            ;423  ; dout_0_7_remote
0004f0  fa06f100          LSL      r1,r6,r0              ;423
0004f4  438b              BICS     r3,r3,r1              ;423
0004f6  8013              STRH     r3,[r2,#0]            ;423
                  |L7.1272|
0004f8  1c40              ADDS     r0,r0,#1              ;420
0004fa  60e0              STR      r0,[r4,#0xc]          ;420  ; tmp_b
0004fc  2809              CMP      r0,#9                 ;420
0004fe  d3e8              BCC      |L7.1234|
000500  7861              LDRB     r1,[r4,#1]            ;426  ; eTransferMode
000502  4620              MOV      r0,r4                 ;426
000504  2901              CMP      r1,#1                 ;426
000506  d1b3              BNE      |L7.1136|
000508  716e              STRB     r6,[r5,#5]            ;428
00050a  21d2              MOVS     r1,#0xd2              ;429
00050c  71a9              STRB     r1,[r5,#6]            ;429
00050e  6cc1              LDR      r1,[r0,#0x4c]         ;430  ; rs485_flags
000510  f0410102          ORR      r1,r1,#2              ;430
000514  64c1              STR      r1,[r0,#0x4c]         ;430  ; rs485_flags
000516  e214              B        |L7.2370|
                  |L7.1304|
000518  78a8              LDRB     r0,[r5,#2]            ;438  ; rs485_buff
00051a  7869              LDRB     r1,[r5,#1]            ;438  ; rs485_buff
00051c  eb002001          ADD      r0,r0,r1,LSL #8       ;438
000520  49ba              LDR      r1,|L7.2060|
000522  b280              UXTH     r0,r0                 ;438
000524  8008              STRH     r0,[r1,#0]            ;438
000526  49ba              LDR      r1,|L7.2064|
000528  6809              LDR      r1,[r1,#0]            ;439  ; htim2
00052a  6348              STR      r0,[r1,#0x34]         ;439
00052c  f88d7004          STRB     r7,[sp,#4]            ;440
000530  213b              MOVS     r1,#0x3b              ;441
000532  f88d1005          STRB     r1,[sp,#5]            ;441
000536  0a01              LSRS     r1,r0,#8              ;442
000538  f88d1006          STRB     r1,[sp,#6]            ;442
00053c  f88d0007          STRB     r0,[sp,#7]            ;443
000540  2304              MOVS     r3,#4                 ;444
000542  aa01              ADD      r2,sp,#4              ;444
000544  21a0              MOVS     r1,#0xa0              ;444
000546  48af              LDR      r0,|L7.2052|
000548  f8cd8000          STR      r8,[sp,#0]            ;444
00054c  f7fffffe          BL       HAL_I2C_Master_Transmit
000550  b108              CBZ      r0,|L7.1366|
000552  f7fffffe          BL       Error_Handler
                  |L7.1366|
000556  230f              MOVS     r3,#0xf               ;445
000558  2264              MOVS     r2,#0x64              ;445
00055a  21a1              MOVS     r1,#0xa1              ;445
00055c  48a9              LDR      r0,|L7.2052|
00055e  f7fffffe          BL       HAL_I2C_IsDeviceReady
000562  b108              CBZ      r0,|L7.1384|
000564  f7fffffe          BL       Error_Handler
                  |L7.1384|
000568  7860              LDRB     r0,[r4,#1]            ;447  ; eTransferMode
00056a  2801              CMP      r0,#1                 ;447
00056c  d1ae              BNE      |L7.1228|
00056e  716e              STRB     r6,[r5,#5]            ;449
000570  20d7              MOVS     r0,#0xd7              ;450
000572  71a8              STRB     r0,[r5,#6]            ;450
000574  6ce0              LDR      r0,[r4,#0x4c]         ;451  ; rs485_flags
000576  f0400002          ORR      r0,r0,#2              ;451
00057a  64e0              STR      r0,[r4,#0x4c]         ;451  ; rs485_flags
00057c  e1e1              B        |L7.2370|
                  |L7.1406|
00057e  7863              LDRB     r3,[r4,#1]            ;459  ; eTransferMode
000580  2b01              CMP      r3,#1                 ;459
000582  d1a3              BNE      |L7.1228|
000584  2332              MOVS     r3,#0x32              ;461
000586  716b              STRB     r3,[r5,#5]            ;461
000588  23a1              MOVS     r3,#0xa1              ;462
00058a  71ab              STRB     r3,[r5,#6]            ;462
00058c  7812              LDRB     r2,[r2,#0]            ;463  ; ROOM_Status
00058e  3230              ADDS     r2,r2,#0x30           ;463
000590  b2d2              UXTB     r2,r2                 ;463
000592  71ea              STRB     r2,[r5,#7]            ;463
000594  2a39              CMP      r2,#0x39              ;464
000596  d901              BLS      |L7.1436|
000598  1dd2              ADDS     r2,r2,#7              ;464
00059a  71ea              STRB     r2,[r5,#7]            ;464
                  |L7.1436|
00059c  2258              MOVS     r2,#0x58              ;465
00059e  722a              STRB     r2,[r5,#8]            ;465
0005a0  4681              MOV      r9,r0                 ;466
0005a2  7268              STRB     r0,[r5,#9]            ;466
0005a4  f885900a          STRB     r9,[r5,#0xa]          ;467
0005a8  f885900b          STRB     r9,[r5,#0xb]          ;468
0005ac  2044              MOVS     r0,#0x44              ;469
0005ae  7328              STRB     r0,[r5,#0xc]          ;469
0005b0  2043              MOVS     r0,#0x43              ;470
0005b2  7368              STRB     r0,[r5,#0xd]          ;470
0005b4  f885900e          STRB     r9,[r5,#0xe]          ;471
0005b8  f885900f          STRB     r9,[r5,#0xf]          ;472
0005bc  f8859010          STRB     r9,[r5,#0x10]         ;473
0005c0  f8859011          STRB     r9,[r5,#0x11]         ;474
0005c4  60e7              STR      r7,[r4,#0xc]          ;476  ; tmp_b
0005c6  4a93              LDR      r2,|L7.2068|
0005c8  4b93              LDR      r3,|L7.2072|
                  |L7.1482|
0005ca  68e0              LDR      r0,[r4,#0xc]          ;478  ; tmp_b
0005cc  f892a000          LDRB     r10,[r2,#0]           ;478  ; din_0_7
0005d0  fa06fc00          LSL      r12,r6,r0             ;478
0005d4  ea1c0f0a          TST      r12,r10               ;478
0005d8  d004              BEQ      |L7.1508|
0005da  eb050a00          ADD      r10,r5,r0             ;478
0005de  f88a1012          STRB     r1,[r10,#0x12]        ;478
0005e2  e003              B        |L7.1516|
                  |L7.1508|
0005e4  eb050a00          ADD      r10,r5,r0             ;479
0005e8  f88a9012          STRB     r9,[r10,#0x12]        ;479
                  |L7.1516|
0005ec  f893a000          LDRB     r10,[r3,#0]           ;480  ; dout_0_7
0005f0  ea1c0f0a          TST      r12,r10               ;480
0005f4  d004              BEQ      |L7.1536|
0005f6  eb050c00          ADD      r12,r5,r0             ;480
0005fa  f88c101a          STRB     r1,[r12,#0x1a]        ;480
0005fe  e003              B        |L7.1544|
                  |L7.1536|
000600  eb050c00          ADD      r12,r5,r0             ;481
000604  f88c901a          STRB     r9,[r12,#0x1a]        ;481
                  |L7.1544|
000608  1c40              ADDS     r0,r0,#1              ;476
00060a  60e0              STR      r0,[r4,#0xc]          ;476  ; tmp_b
00060c  2808              CMP      r0,#8                 ;476
00060e  d3dc              BCC      |L7.1482|
000610  2022              MOVS     r0,#0x22              ;484
000612  60e0              STR      r0,[r4,#0xc]          ;484  ; tmp_b
000614  4981              LDR      r1,|L7.2076|
                  |L7.1558|
000616  68e0              LDR      r0,[r4,#0xc]          ;486  ; tmp_b
000618  180a              ADDS     r2,r1,r0              ;486
00061a  f8122c1e          LDRB     r2,[r2,#-0x1e]        ;486
00061e  542a              STRB     r2,[r5,r0]            ;486
000620  1c40              ADDS     r0,r0,#1              ;484
000622  60e0              STR      r0,[r4,#0xc]          ;484  ; tmp_b
000624  282a              CMP      r0,#0x2a              ;484
000626  d3f6              BCC      |L7.1558|
000628  f88d7004          STRB     r7,[sp,#4]            ;489
00062c  f88de005          STRB     lr,[sp,#5]            ;490
000630  2302              MOVS     r3,#2                 ;491
000632  aa01              ADD      r2,sp,#4              ;491
000634  21a0              MOVS     r1,#0xa0              ;491
000636  4873              LDR      r0,|L7.2052|
000638  f8cd8000          STR      r8,[sp,#0]            ;491
00063c  f7fffffe          BL       HAL_I2C_Master_Transmit
000640  b108              CBZ      r0,|L7.1606|
000642  f7fffffe          BL       Error_Handler
                  |L7.1606|
000646  2301              MOVS     r3,#1                 ;492
000648  4a75              LDR      r2,|L7.2080|
00064a  21a1              MOVS     r1,#0xa1              ;492
00064c  486d              LDR      r0,|L7.2052|
00064e  f8cd8000          STR      r8,[sp,#0]            ;492
000652  f7fffffe          BL       HAL_I2C_Master_Receive
000656  b108              CBZ      r0,|L7.1628|
000658  f7fffffe          BL       Error_Handler
                  |L7.1628|
00065c  f895002b          LDRB     r0,[r5,#0x2b]         ;493  ; rs485_buff
000660  2863              CMP      r0,#0x63              ;493
000662  d902              BLS      |L7.1642|
000664  2063              MOVS     r0,#0x63              ;493
000666  f885002b          STRB     r0,[r5,#0x2b]         ;493
                  |L7.1642|
00066a  f895002b          LDRB     r0,[r5,#0x2b]         ;494  ; rs485_buff
00066e  210a              MOVS     r1,#0xa               ;494
000670  fbb0f0f1          UDIV     r0,r0,r1              ;494
000674  3030              ADDS     r0,r0,#0x30           ;494
000676  f885002a          STRB     r0,[r5,#0x2a]         ;494
00067a  e002              B        |L7.1666|
                  |L7.1660|
00067c  380a              SUBS     r0,r0,#0xa            ;495
00067e  f885002b          STRB     r0,[r5,#0x2b]         ;495
                  |L7.1666|
000682  f895002b          LDRB     r0,[r5,#0x2b]         ;495  ; rs485_buff
000686  2809              CMP      r0,#9                 ;495
000688  d8f8              BHI      |L7.1660|
00068a  f8150f2b          LDRB     r0,[r5,#0x2b]!        ;496  ; rs485_buff
00068e  3030              ADDS     r0,r0,#0x30           ;496
000690  7028              STRB     r0,[r5,#0]            ;496
000692  f8859001          STRB     r9,[r5,#1]            ;497
000696  f8859002          STRB     r9,[r5,#2]            ;498
00069a  f8859003          STRB     r9,[r5,#3]            ;499
00069e  f8859004          STRB     r9,[r5,#4]            ;500
0006a2  f8859005          STRB     r9,[r5,#5]            ;501
0006a6  f8859006          STRB     r9,[r5,#6]            ;502
0006aa  f8859007          STRB     r9,[r5,#7]            ;503
0006ae  f8859008          STRB     r9,[r5,#8]            ;504
0006b2  f8859009          STRB     r9,[r5,#9]            ;505
0006b6  f885900a          STRB     r9,[r5,#0xa]          ;506
0006ba  2044              MOVS     r0,#0x44              ;507
0006bc  72e8              STRB     r0,[r5,#0xb]          ;507
0006be  2043              MOVS     r0,#0x43              ;508
0006c0  7328              STRB     r0,[r5,#0xc]          ;508
0006c2  3d2b              SUBS     r5,r5,#0x2b           ;508
0006c4  6ce0              LDR      r0,[r4,#0x4c]         ;509  ; rs485_flags
0006c6  f0400002          ORR      r0,r0,#2              ;509
0006ca  64e0              STR      r0,[r4,#0x4c]         ;509  ; rs485_flags
0006cc  e139              B        |L7.2370|
                  |L7.1742|
0006ce  7868              LDRB     r0,[r5,#1]            ;517  ; rs485_buff
0006d0  3830              SUBS     r0,r0,#0x30           ;517
0006d2  b2c0              UXTB     r0,r0                 ;517
0006d4  7010              STRB     r0,[r2,#0]            ;517
0006d6  78a9              LDRB     r1,[r5,#2]            ;518  ; rs485_buff
0006d8  f1a10330          SUB      r3,r1,#0x30           ;518
0006dc  2b09              CMP      r3,#9                 ;518
0006de  d802              BHI      |L7.1766|
0006e0  3827              SUBS     r0,r0,#0x27           ;518
0006e2  4408              ADD      r0,r0,r1              ;518
0006e4  7010              STRB     r0,[r2,#0]            ;518
                  |L7.1766|
0006e6  7860              LDRB     r0,[r4,#1]            ;520  ; eTransferMode
0006e8  2801              CMP      r0,#1                 ;520
0006ea  d106              BNE      |L7.1786|
0006ec  716e              STRB     r6,[r5,#5]            ;522
0006ee  20d0              MOVS     r0,#0xd0              ;523
0006f0  71a8              STRB     r0,[r5,#6]            ;523
0006f2  6ce0              LDR      r0,[r4,#0x4c]         ;524  ; rs485_flags
0006f4  f0400002          ORR      r0,r0,#2              ;524
0006f8  64e0              STR      r0,[r4,#0x4c]         ;524  ; rs485_flags
                  |L7.1786|
0006fa  e122              B        |L7.2370|
                  |L7.1788|
0006fc  7860              LDRB     r0,[r4,#1]            ;532  ; eTransferMode
0006fe  2801              CMP      r0,#1                 ;532
000700  d106              BNE      |L7.1808|
000702  716e              STRB     r6,[r5,#5]            ;534
000704  20de              MOVS     r0,#0xde              ;535
000706  71a8              STRB     r0,[r5,#6]            ;535
000708  6ce0              LDR      r0,[r4,#0x4c]         ;536  ; rs485_flags
00070a  f0400002          ORR      r0,r0,#2              ;536
00070e  64e0              STR      r0,[r4,#0x4c]         ;536  ; rs485_flags
                  |L7.1808|
000710  e117              B        |L7.2370|
                  |L7.1810|
000712  786a              LDRB     r2,[r5,#1]            ;544  ; rs485_buff
000714  2a31              CMP      r2,#0x31              ;544
000716  d117              BNE      |L7.1864|
000718  4a42              LDR      r2,|L7.2084|
00071a  6813              LDR      r3,[r2,#0]            ;544  ; dio_flags
00071c  071b              LSLS     r3,r3,#28             ;544
00071e  d513              BPL      |L7.1864|
000720  6810              LDR      r0,[r2,#0]            ;546  ; dio_flags
000722  f0200008          BIC      r0,r0,#8              ;546
000726  6010              STR      r0,[r2,#0]            ;546  ; dio_flags
000728  f8d90000          LDR      r0,[r9,#0]            ;547  ; display_flags
00072c  f0200020          BIC      r0,r0,#0x20           ;547
000730  f8c90000          STR      r0,[r9,#0]            ;547  ; display_flags
000734  f8d90000          LDR      r0,[r9,#0]            ;547  ; display_flags
000738  f0404000          ORR      r0,r0,#0x80000000     ;547
00073c  f8c90000          STR      r0,[r9,#0]            ;547  ; display_flags
000740  4839              LDR      r0,|L7.2088|
000742  7007              STRB     r7,[r0,#0]            ;548
000744  71e9              STRB     r1,[r5,#7]            ;549
000746  e000              B        |L7.1866|
                  |L7.1864|
000748  71e8              STRB     r0,[r5,#7]            ;553
                  |L7.1866|
00074a  7860              LDRB     r0,[r4,#1]            ;556  ; eTransferMode
00074c  2801              CMP      r0,#1                 ;556
00074e  d107              BNE      |L7.1888|
000750  2002              MOVS     r0,#2                 ;558
000752  7168              STRB     r0,[r5,#5]            ;558
000754  20d4              MOVS     r0,#0xd4              ;559
000756  71a8              STRB     r0,[r5,#6]            ;559
000758  6ce0              LDR      r0,[r4,#0x4c]         ;560  ; rs485_flags
00075a  f0400002          ORR      r0,r0,#2              ;560
00075e  64e0              STR      r0,[r4,#0x4c]         ;560  ; rs485_flags
                  |L7.1888|
000760  e0ef              B        |L7.2370|
                  |L7.1890|
000762  7860              LDRB     r0,[r4,#1]            ;568  ; eTransferMode
000764  2801              CMP      r0,#1                 ;568
000766  d106              BNE      |L7.1910|
000768  716e              STRB     r6,[r5,#5]            ;570
00076a  20d6              MOVS     r0,#0xd6              ;571
00076c  71a8              STRB     r0,[r5,#6]            ;571
00076e  6ce0              LDR      r0,[r4,#0x4c]         ;572  ; rs485_flags
000770  f0400002          ORR      r0,r0,#2              ;572
000774  64e0              STR      r0,[r4,#0x4c]         ;572  ; rs485_flags
                  |L7.1910|
000776  e0e4              B        |L7.2370|
                  |L7.1912|
000778  4a2c              LDR      r2,|L7.2092|
00077a  7869              LDRB     r1,[r5,#1]            ;580  ; rs485_buff
00077c  7011              STRB     r1,[r2,#0]            ;580
00077e  78a8              LDRB     r0,[r5,#2]            ;581  ; rs485_buff
000780  7050              STRB     r0,[r2,#1]            ;581
000782  f88d7004          STRB     r7,[sp,#4]            ;582
000786  2236              MOVS     r2,#0x36              ;583
000788  f88d2005          STRB     r2,[sp,#5]            ;583
00078c  f88d1006          STRB     r1,[sp,#6]            ;584
000790  f88d0007          STRB     r0,[sp,#7]            ;585
000794  2304              MOVS     r3,#4                 ;586
000796  aa01              ADD      r2,sp,#4              ;586
000798  21a0              MOVS     r1,#0xa0              ;586
00079a  481a              LDR      r0,|L7.2052|
00079c  f8cd8000          STR      r8,[sp,#0]            ;586
0007a0  f7fffffe          BL       HAL_I2C_Master_Transmit
0007a4  b108              CBZ      r0,|L7.1962|
0007a6  f7fffffe          BL       Error_Handler
                  |L7.1962|
0007aa  230f              MOVS     r3,#0xf               ;587
0007ac  2264              MOVS     r2,#0x64              ;587
0007ae  21a1              MOVS     r1,#0xa1              ;587
0007b0  4814              LDR      r0,|L7.2052|
0007b2  f7fffffe          BL       HAL_I2C_IsDeviceReady
0007b6  b108              CBZ      r0,|L7.1980|
0007b8  f7fffffe          BL       Error_Handler
                  |L7.1980|
0007bc  7860              LDRB     r0,[r4,#1]            ;589  ; eTransferMode
0007be  2801              CMP      r0,#1                 ;589
0007c0  d106              BNE      |L7.2000|
0007c2  716e              STRB     r6,[r5,#5]            ;591
0007c4  20d8              MOVS     r0,#0xd8              ;592
0007c6  71a8              STRB     r0,[r5,#6]            ;592
0007c8  6ce0              LDR      r0,[r4,#0x4c]         ;593  ; rs485_flags
0007ca  f0400002          ORR      r0,r0,#2              ;593
0007ce  64e0              STR      r0,[r4,#0x4c]         ;593  ; rs485_flags
                  |L7.2000|
0007d0  e0b7              B        |L7.2370|
                  |L7.2002|
0007d2  f8d90000          LDR      r0,[r9,#0]            ;601  ; display_flags
0007d6  f0400004          ORR      r0,r0,#4              ;601
0007da  f8c90000          STR      r0,[r9,#0]            ;601  ; display_flags
0007de  7860              LDRB     r0,[r4,#1]            ;603  ; eTransferMode
0007e0  2801              CMP      r0,#1                 ;603
0007e2  d106              BNE      |L7.2034|
0007e4  716e              STRB     r6,[r5,#5]            ;605
0007e6  20d9              MOVS     r0,#0xd9              ;606
0007e8  71a8              STRB     r0,[r5,#6]            ;606
0007ea  6ce0              LDR      r0,[r4,#0x4c]         ;607  ; rs485_flags
0007ec  f0400002          ORR      r0,r0,#2              ;607
0007f0  64e0              STR      r0,[r4,#0x4c]         ;607  ; rs485_flags
                  |L7.2034|
0007f2  e0a6              B        |L7.2370|
                  |L7.2036|
0007f4  6ce0              LDR      r0,[r4,#0x4c]         ;614  ; rs485_flags
0007f6  f0200002          BIC      r0,r0,#2              ;614
0007fa  64e0              STR      r0,[r4,#0x4c]         ;614  ; rs485_flags
0007fc  e0a1              B        |L7.2370|
0007fe  0000              DCW      0x0000
                  |L7.2048|
                          DCD      ||.data||+0x9
                  |L7.2052|
                          DCD      hi2c1
                  |L7.2056|
                          DCD      dout_0_7_remote
                  |L7.2060|
                          DCD      lcd_brightness
                  |L7.2064|
                          DCD      htim2
                  |L7.2068|
                          DCD      din_0_7
                  |L7.2072|
                          DCD      dout_0_7
                  |L7.2076|
                          DCD      sys_info_fw
                  |L7.2080|
                          DCD      ||.bss||+0x2b
                  |L7.2084|
                          DCD      dio_flags
                  |L7.2088|
                          DCD      SignalBuzzer
                  |L7.2092|
                          DCD      system_id
                  |L7.2096|
;;;621    		{
;;;622    			if((next_packet_number == ((rs485_buff[0] << 8U) + rs485_buff[1])) && (flash_destination != 0U))
000830  7868              LDRB     r0,[r5,#1]  ; rs485_buff
000832  7829              LDRB     r1,[r5,#0]  ; rs485_buff
000834  eb002101          ADD      r1,r0,r1,LSL #8
000838  69a0              LDR      r0,[r4,#0x18]  ; next_packet_number
00083a  4281              CMP      r1,r0
00083c  d17b              BNE      |L7.2358|
00083e  6aa1              LDR      r1,[r4,#0x28]  ; flash_destination
000840  b3a1              CBZ      r1,|L7.2220|
;;;623    			{
;;;624    				if(next_packet_number == 1U) CRC_ResetDR();						
000842  2801              CMP      r0,#1
000844  d101              BNE      |L7.2122|
000846  f7fffffe          BL       CRC_ResetDR
                  |L7.2122|
;;;625    				SPI_FLASH_WritePage(flash_destination, &rs485_buff[2], (rs485_packet_data_lenght - 2U));
00084a  6d60              LDR      r0,[r4,#0x54]  ; rs485_packet_data_lenght
00084c  1ca9              ADDS     r1,r5,#2
00084e  1e80              SUBS     r0,r0,#2
000850  b282              UXTH     r2,r0
000852  6aa0              LDR      r0,[r4,#0x28]  ; flash_destination
000854  f7fffffe          BL       SPI_FLASH_WritePage
;;;626    				if(SPI_FLASH_WaitReadyStatus(SPI_FLASH_TIMEOUT) == 0U) Error_Handler();				
000858  f44f70fa          MOV      r0,#0x1f4
00085c  f7fffffe          BL       SPI_FLASH_WaitReadyStatus
000860  b908              CBNZ     r0,|L7.2150|
000862  f7fffffe          BL       Error_Handler
                  |L7.2150|
;;;627    				flash_destination += (rs485_packet_data_lenght - 2U);
000866  6d61              LDR      r1,[r4,#0x54]  ; rs485_packet_data_lenght
000868  6aa0              LDR      r0,[r4,#0x28]  ; flash_destination
00086a  4408              ADD      r0,r0,r1
00086c  1e80              SUBS     r0,r0,#2
00086e  62a0              STR      r0,[r4,#0x28]  ; flash_destination
;;;628    				if (eTransferMode == TRANSFER_P2P) Serial_PutByte(ACK);
000870  7860              LDRB     r0,[r4,#1]  ; eTransferMode
000872  2801              CMP      r0,#1
000874  d102              BNE      |L7.2172|
000876  2006              MOVS     r0,#6
000878  f7fffffe          BL       Serial_PutByte
                  |L7.2172|
;;;629    				crc_32_calculated = CRC_Calculate8 (&rs485_buff[2], (rs485_packet_data_lenght - 2U));
00087c  6d61              LDR      r1,[r4,#0x54]  ; rs485_packet_data_lenght
00087e  1ca8              ADDS     r0,r5,#2
000880  1e89              SUBS     r1,r1,#2
000882  f7fffffe          BL       CRC_Calculate8
000886  6220              STR      r0,[r4,#0x20]  ; crc_32_calculated
;;;630                    rs485_update_timeout_timer = HAL_GetTick();
000888  f7fffffe          BL       HAL_GetTick
00088c  6120              STR      r0,[r4,#0x10]  ; rs485_update_timeout_timer
;;;631                    
;;;632    				if(next_packet_number == total_packet_number)
00088e  e9d40106          LDRD     r0,r1,[r4,#0x18]
000892  4288              CMP      r0,r1
000894  d14c              BNE      |L7.2352|
;;;633    				{
;;;634    					if(crc_32_calculated == crc_32_file)
000896  e9d40108          LDRD     r0,r1,[r4,#0x20]
00089a  4288              CMP      r0,r1
00089c  d13c              BNE      |L7.2328|
;;;635    					{	
;;;636    						if(activ_command == DOWNLOAD_FIRMWARE_IMAGE)
00089e  78e0              LDRB     r0,[r4,#3]  ; activ_command
0008a0  2877              CMP      r0,#0x77
0008a2  d004              BEQ      |L7.2222|
;;;637    						{
;;;638    							ee_buff[0] = EE_FW_UPDATE_BYTE_CNT >> 8U;
;;;639    							ee_buff[1] = EE_FW_UPDATE_BYTE_CNT & 0xFFU;
;;;640    							ee_buff[2] = (total_bytes_in_file >> 24U);
;;;641    							ee_buff[3] = (total_bytes_in_file >> 16U);
;;;642    							ee_buff[4] = (total_bytes_in_file >> 8U);
;;;643    							ee_buff[5] = (total_bytes_in_file & 0xFFU);
;;;644    							if (HAL_I2C_Master_Transmit(&hi2c1, I2C_EE_WRITE, ee_buff, 6U, I2C_EE_TIMEOUT) != HAL_OK) Error_Handler();
;;;645    							if (HAL_I2C_IsDeviceReady(&hi2c1, I2C_EE_READ, I2C_EE_TRIALS, I2C_EE_WRITE_DELAY) != HAL_OK) Error_Handler();
;;;646    						}
;;;647    						else if(post_process == COPY_NEW_DISPLAY_IMAGE)
0008a4  6ba0              LDR      r0,[r4,#0x38]  ; post_process
0008a6  2863              CMP      r0,#0x63
0008a8  d027              BEQ      |L7.2298|
0008aa  e02f              B        |L7.2316|
                  |L7.2220|
0008ac  e043              B        |L7.2358|
                  |L7.2222|
0008ae  f88d7004          STRB     r7,[sp,#4]            ;638
0008b2  2021              MOVS     r0,#0x21              ;639
0008b4  f88d0005          STRB     r0,[sp,#5]            ;639
0008b8  6960              LDR      r0,[r4,#0x14]         ;640  ; total_bytes_in_file
0008ba  0e01              LSRS     r1,r0,#24             ;640
0008bc  f88d1006          STRB     r1,[sp,#6]            ;640
0008c0  0c01              LSRS     r1,r0,#16             ;641
0008c2  f88d1007          STRB     r1,[sp,#7]            ;641
0008c6  0a01              LSRS     r1,r0,#8              ;642
0008c8  f88d1008          STRB     r1,[sp,#8]            ;642
0008cc  f88d0009          STRB     r0,[sp,#9]            ;643
0008d0  2306              MOVS     r3,#6                 ;644
0008d2  aa01              ADD      r2,sp,#4              ;644
0008d4  21a0              MOVS     r1,#0xa0              ;644
0008d6  4841              LDR      r0,|L7.2524|
0008d8  f8cd8000          STR      r8,[sp,#0]            ;644
0008dc  f7fffffe          BL       HAL_I2C_Master_Transmit
0008e0  b108              CBZ      r0,|L7.2278|
0008e2  f7fffffe          BL       Error_Handler
                  |L7.2278|
0008e6  230f              MOVS     r3,#0xf               ;645
0008e8  2264              MOVS     r2,#0x64              ;645
0008ea  21a1              MOVS     r1,#0xa1              ;645
0008ec  483b              LDR      r0,|L7.2524|
0008ee  f7fffffe          BL       HAL_I2C_IsDeviceReady
0008f2  b158              CBZ      r0,|L7.2316|
0008f4  f7fffffe          BL       Error_Handler
0008f8  e008              B        |L7.2316|
                  |L7.2298|
;;;648    						{
;;;649    							CopyFile(file_copy_source_address, file_copy_destination_address, file_copy_size);
0008fa  e9d4120c          LDRD     r1,r2,[r4,#0x30]
0008fe  6ae0              LDR      r0,[r4,#0x2c]  ; file_copy_source_address
000900  f7fffffe          BL       CopyFile
;;;650    							SYS_UpdateSuccessSet();
000904  78a0              LDRB     r0,[r4,#2]  ; sys_status
000906  f0400010          ORR      r0,r0,#0x10
00090a  70a0              STRB     r0,[r4,#2]
                  |L7.2316|
;;;651    						}
;;;652    						
;;;653    						SYS_FileTransferSuccessSet();
00090c  78a0              LDRB     r0,[r4,#2]  ; sys_status
00090e  f0400004          ORR      r0,r0,#4
000912  70a0              STRB     r0,[r4,#2]
000914  e004              B        |L7.2336|
                  |L7.2326|
000916  e05e              B        |L7.2518|
                  |L7.2328|
;;;654    					}
;;;655    					else
;;;656    					{
;;;657    						SYS_FileTransferFailSet();
000918  78a0              LDRB     r0,[r4,#2]  ; sys_status
00091a  f0400008          ORR      r0,r0,#8
00091e  70a0              STRB     r0,[r4,#2]
                  |L7.2336|
;;;658    					}
;;;659    					
;;;660    					post_process = 0U;
000920  63a7              STR      r7,[r4,#0x38]  ; post_process
;;;661    					activ_command = 0U;
000922  70e7              STRB     r7,[r4,#3]
;;;662    					flash_destination = 0U;
000924  62a7              STR      r7,[r4,#0x28]  ; flash_destination
;;;663    					RS485_StopUpdate();
000926  6ce0              LDR      r0,[r4,#0x4c]  ; rs485_flags
000928  f0200001          BIC      r0,r0,#1
00092c  64e0              STR      r0,[r4,#0x4c]  ; rs485_flags
00092e  e008              B        |L7.2370|
                  |L7.2352|
;;;664    				}
;;;665    				else ++next_packet_number;
000930  1c40              ADDS     r0,r0,#1
000932  61a0              STR      r0,[r4,#0x18]  ; next_packet_number
000934  e005              B        |L7.2370|
                  |L7.2358|
;;;666    			}
;;;667    			else if(eTransferMode == TRANSFER_P2P) Serial_PutByte(NAK);
000936  7860              LDRB     r0,[r4,#1]  ; eTransferMode
000938  2801              CMP      r0,#1
00093a  d102              BNE      |L7.2370|
00093c  2015              MOVS     r0,#0x15
00093e  f7fffffe          BL       Serial_PutByte
                  |L7.2370|
;;;668    		}
;;;669    		
;;;670    		if(IsRS485_ResponsePacketPending())
000942  6ce0              LDR      r0,[r4,#0x4c]  ; rs485_flags
000944  0780              LSLS     r0,r0,#30
000946  d544              BPL      |L7.2514|
;;;671    		{
;;;672    			rs485_buff[0] = ACK;
000948  2006              MOVS     r0,#6
00094a  7028              STRB     r0,[r5,#0]
;;;673    			rs485_buff[1] = rs485_sender_address >> 8U;
00094c  6d20              LDR      r0,[r4,#0x50]  ; rs485_sender_address
00094e  0a00              LSRS     r0,r0,#8
000950  7068              STRB     r0,[r5,#1]
;;;674    			rs485_buff[2] = rs485_sender_address & 0xFFU;
000952  6d20              LDR      r0,[r4,#0x50]  ; rs485_sender_address
000954  70a8              STRB     r0,[r5,#2]
;;;675    			rs485_buff[3] = rs485_interface_address[0];
000956  f89b0000          LDRB     r0,[r11,#0]  ; rs485_interface_address
00095a  70e8              STRB     r0,[r5,#3]
;;;676    			rs485_buff[4] = rs485_interface_address[1];			
00095c  f89b0001          LDRB     r0,[r11,#1]  ; rs485_interface_address
000960  7128              STRB     r0,[r5,#4]
;;;677    			rs485_packet_checksum = 0U;
000962  65a7              STR      r7,[r4,#0x58]  ; rs485_packet_checksum
;;;678    			
;;;679    			for(uint8_t i = 6U; i < (rs485_buff[5] + 6U); i++)
000964  2006              MOVS     r0,#6
000966  796a              LDRB     r2,[r5,#5]            ;171
000968  1d91              ADDS     r1,r2,#6
00096a  e005              B        |L7.2424|
                  |L7.2412|
;;;680    			{
;;;681    				rs485_packet_checksum += rs485_buff[i];
00096c  5c2b              LDRB     r3,[r5,r0]
00096e  6da6              LDR      r6,[r4,#0x58]  ; rs485_packet_checksum
000970  4433              ADD      r3,r3,r6
000972  65a3              STR      r3,[r4,#0x58]  ; rs485_packet_checksum
000974  1c40              ADDS     r0,r0,#1              ;679
000976  b2c0              UXTB     r0,r0                 ;679
                  |L7.2424|
000978  4281              CMP      r1,r0                 ;679
00097a  d8f7              BHI      |L7.2412|
;;;682    			}
;;;683    			rs485_buff[rs485_buff[5] + 6U] = rs485_packet_checksum >> 8U;
00097c  6da0              LDR      r0,[r4,#0x58]  ; rs485_packet_checksum
00097e  0a01              LSRS     r1,r0,#8
000980  4817              LDR      r0,|L7.2528|
000982  5411              STRB     r1,[r2,r0]
;;;684    			rs485_buff[rs485_buff[5] + 7U] = rs485_packet_checksum & 0xFFU;
000984  6da0              LDR      r0,[r4,#0x58]  ; rs485_packet_checksum
000986  4916              LDR      r1,|L7.2528|
000988  796a              LDRB     r2,[r5,#5]  ; rs485_buff
00098a  1c49              ADDS     r1,r1,#1
00098c  5450              STRB     r0,[r2,r1]
;;;685    			rs485_buff[rs485_buff[5] + 8U] = EOT;
00098e  4814              LDR      r0,|L7.2528|
000990  2104              MOVS     r1,#4
000992  796a              LDRB     r2,[r5,#5]  ; rs485_buff
000994  1c80              ADDS     r0,r0,#2
000996  5411              STRB     r1,[r2,r0]
;;;686    			RS485_DirTx();
000998  4f12              LDR      r7,|L7.2532|
00099a  024e              LSLS     r6,r1,#9
00099c  2201              MOVS     r2,#1
00099e  4631              MOV      r1,r6
0009a0  4638              MOV      r0,r7
0009a2  f7fffffe          BL       HAL_GPIO_WritePin
;;;687    			HAL_UART_Transmit(&huart1, rs485_buff, (rs485_buff[5] + 9U), PACKET_TRANSFER_TIMEOUT);
0009a6  796a              LDRB     r2,[r5,#5]  ; rs485_buff
0009a8  490d              LDR      r1,|L7.2528|
0009aa  3209              ADDS     r2,r2,#9
0009ac  237b              MOVS     r3,#0x7b
0009ae  1f89              SUBS     r1,r1,#6
0009b0  480d              LDR      r0,|L7.2536|
0009b2  f7fffffe          BL       HAL_UART_Transmit
0009b6  4a0c              LDR      r2,|L7.2536|
                  |L7.2488|
;;;688    			while(huart1.gState != HAL_UART_STATE_READY) continue;
0009b8  f8923039          LDRB     r3,[r2,#0x39]  ; huart1
0009bc  2b20              CMP      r3,#0x20
0009be  d1fb              BNE      |L7.2488|
;;;689    			RS485_NoResponse();
0009c0  6ce0              LDR      r0,[r4,#0x4c]  ; rs485_flags
0009c2  f0200002          BIC      r0,r0,#2
0009c6  64e0              STR      r0,[r4,#0x4c]  ; rs485_flags
;;;690    			RS485_DirRx();
0009c8  2200              MOVS     r2,#0
0009ca  4631              MOV      r1,r6
0009cc  4638              MOV      r0,r7
0009ce  f7fffffe          BL       HAL_GPIO_WritePin
                  |L7.2514|
;;;691    		}
;;;692    		
;;;693    		RS485_Init();
0009d2  f7fffffe          BL       RS485_Init
                  |L7.2518|
;;;694    	}
;;;695    }
0009d6  b009              ADD      sp,sp,#0x24
0009d8  e8bd8ff0          POP      {r4-r11,pc}
;;;696    
                          ENDP

                  |L7.2524|
                          DCD      hi2c1
                  |L7.2528|
                          DCD      ||.bss||+0x6
                  |L7.2532|
                          DCD      0x40010800
                  |L7.2536|
                          DCD      huart1

                          AREA ||i.Serial_PutByte||, CODE, READONLY, ALIGN=2

                  Serial_PutByte PROC
;;;875    
;;;876    static void Serial_PutByte(uint8_t param)
000000  b5f1              PUSH     {r0,r4-r7,lr}
;;;877    { 
;;;878    	RS485_DirTx();
000002  2201              MOVS     r2,#1
000004  4e0f              LDR      r6,|L8.68|
000006  02d5              LSLS     r5,r2,#11
000008  4629              MOV      r1,r5
00000a  4630              MOV      r0,r6
00000c  f7fffffe          BL       HAL_GPIO_WritePin
;;;879    	RS485_StartTimer(PACKET_TRANSFER_TIMEOUT);
000010  4c0d              LDR      r4,|L8.72|
000012  207b              MOVS     r0,#0x7b
000014  64a0              STR      r0,[r4,#0x48]  ; rs485_timer
;;;880        if (HAL_UART_Transmit(&huart1, &param, 1U, PACKET_TRANSFER_TIMEOUT) != HAL_OK) Error_Handler();
000016  237b              MOVS     r3,#0x7b
000018  2201              MOVS     r2,#1
00001a  4669              MOV      r1,sp
00001c  480b              LDR      r0,|L8.76|
00001e  f7fffffe          BL       HAL_UART_Transmit
000022  b108              CBZ      r0,|L8.40|
000024  f7fffffe          BL       Error_Handler
                  |L8.40|
000028  4808              LDR      r0,|L8.76|
                  |L8.42|
;;;881    	while(huart1.gState != HAL_UART_STATE_READY) continue;
00002a  f8902039          LDRB     r2,[r0,#0x39]  ; huart1
00002e  2a20              CMP      r2,#0x20
000030  d1fb              BNE      |L8.42|
;;;882    	RS485_StopTimer();
000032  2000              MOVS     r0,#0
000034  64a0              STR      r0,[r4,#0x48]  ; rs485_timer
;;;883    	RS485_DirRx();
000036  2200              MOVS     r2,#0
000038  4629              MOV      r1,r5
00003a  4630              MOV      r0,r6
00003c  f7fffffe          BL       HAL_GPIO_WritePin
;;;884    }
000040  bdf8              POP      {r3-r7,pc}
;;;885    
                          ENDP

000042  0000              DCW      0x0000
                  |L8.68|
                          DCD      0x40010800
                  |L8.72|
                          DCD      ||.data||
                  |L8.76|
                          DCD      huart1

                          AREA ||i.UpdateBootloader||, CODE, READONLY, ALIGN=1

                  UpdateBootloader PROC
;;;790    
;;;791    static uint8_t UpdateBootloader(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;792    {
000004  f6ad0d18          SUB      sp,sp,#0x818
;;;793    #define BL_BUFFER_SIZE  2048U
;;;794        
;;;795        uint8_t buff[BL_BUFFER_SIZE];
;;;796        FLASH_EraseInitTypeDef FLASH_EraseInit;
;;;797        uint32_t page_erase_error;
;;;798    	uint32_t fl_destination;
;;;799    	uint32_t fl_address;
;;;800        uint32_t ram_source;
;;;801    	uint32_t file_size;
;;;802        uint32_t bcnt;
;;;803    	
;;;804    	HAL_FLASH_Unlock();
000008  f7fffffe          BL       HAL_FLASH_Unlock
;;;805    	FLASH_EraseInit.TypeErase = FLASH_TYPEERASE_PAGES;
00000c  2000              MOVS     r0,#0
00000e  9002              STR      r0,[sp,#8]
;;;806    	FLASH_EraseInit.PageAddress = BOOTLOADER_ADDRESS;
000010  f04f6600          MOV      r6,#0x8000000
000014  9604              STR      r6,[sp,#0x10]
;;;807    	FLASH_EraseInit.Banks = FLASH_BANK_1;
000016  2001              MOVS     r0,#1
000018  9003              STR      r0,[sp,#0xc]
;;;808    	FLASH_EraseInit.NbPages = 12U;	
00001a  200c              MOVS     r0,#0xc
00001c  9005              STR      r0,[sp,#0x14]
;;;809    	if(HAL_FLASHEx_Erase(&FLASH_EraseInit, &page_erase_error) != HAL_OK) return (0U);
00001e  a901              ADD      r1,sp,#4
000020  a802              ADD      r0,sp,#8
000022  f7fffffe          BL       HAL_FLASHEx_Erase
000026  b120              CBZ      r0,|L9.50|
000028  2000              MOVS     r0,#0
                  |L9.42|
;;;810    	HAL_FLASH_Lock();
;;;811    	
;;;812    	fl_destination = BOOTLOADER_ADDRESS;
;;;813    	fl_address = EE_NEW_BOOTLOADER_ADDRESS;
;;;814    	file_size = BOOTLOADER_FLASH_SIZE;
;;;815        
;;;816        while(file_size)
;;;817    	{
;;;818    		if(file_size >= BL_BUFFER_SIZE) 
;;;819            {
;;;820                bcnt = BL_BUFFER_SIZE;
;;;821                file_size -= BL_BUFFER_SIZE;
;;;822            }
;;;823    		else 
;;;824            {
;;;825                bcnt = file_size;
;;;826                file_size = 0U;
;;;827            }
;;;828            
;;;829            SPI_FLASH_ReadPage(fl_address, buff,  bcnt);		
;;;830    		ram_source = (uint32_t) buff;
;;;831            if(FLASH_If_Write(fl_destination, (uint32_t*) ram_source, (bcnt / 4U)) == 0U) return (0U);
;;;832            fl_destination += bcnt;
;;;833            fl_address += bcnt;
;;;834    	}
;;;835        
;;;836    	return (1U);
;;;837    }
00002a  f60d0d18          ADD      sp,sp,#0x818
00002e  e8bd81f0          POP      {r4-r8,pc}
                  |L9.50|
000032  f7fffffe          BL       HAL_FLASH_Lock
000036  f44f1770          MOV      r7,#0x3c0000          ;813
00003a  f44f5440          MOV      r4,#0x3000            ;814
00003e  f44f6800          MOV      r8,#0x800             ;818
                  |L9.66|
000042  4645              MOV      r5,r8                 ;818
000044  42ac              CMP      r4,r5                 ;818
000046  d302              BCC      |L9.78|
000048  f5a46400          SUB      r4,r4,#0x800          ;821
00004c  e001              B        |L9.82|
                  |L9.78|
00004e  4625              MOV      r5,r4                 ;825
000050  2400              MOVS     r4,#0                 ;826
                  |L9.82|
000052  b2aa              UXTH     r2,r5                 ;829
000054  a906              ADD      r1,sp,#0x18           ;829
000056  4638              MOV      r0,r7                 ;829
000058  f7fffffe          BL       SPI_FLASH_ReadPage
00005c  a906              ADD      r1,sp,#0x18           ;830
00005e  08aa              LSRS     r2,r5,#2              ;831
000060  4630              MOV      r0,r6                 ;831
000062  f7fffffe          BL       FLASH_If_Write
000066  b128              CBZ      r0,|L9.116|
000068  442e              ADD      r6,r6,r5              ;832
00006a  442f              ADD      r7,r7,r5              ;833
00006c  2c00              CMP      r4,#0                 ;816
00006e  d1e8              BNE      |L9.66|
000070  2001              MOVS     r0,#1                 ;836
000072  e7da              B        |L9.42|
                  |L9.116|
000074  2000              MOVS     r0,#0                 ;831
000076  e7d8              B        |L9.42|
;;;838    
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  rs485_buff
                          %        128

                          AREA ||.data||, DATA, ALIGN=2

                  eComState
000000  00                DCB      0x00
                  eTransferMode
000001  00                DCB      0x00
                  sys_status
000002  00                DCB      0x00
                  activ_command
000003  00                DCB      0x00
                  rs485_interface_baudrate
000004  00                DCB      0x00
                  rs485_interface_address
000005  0000              DCB      0x00,0x00
                  rs485_group_address
000007  00                DCB      0x00
000008  00                DCB      0x00
                  rs485_broadcast_address
000009  000000            DCB      0x00,0x00,0x00
                  tmp_b
                          DCD      0x00000000
                  rs485_update_timeout_timer
                          DCD      0x00000000
                  total_bytes_in_file
                          DCD      0x00000000
                  next_packet_number
                          DCD      0x00000000
                  total_packet_number
                          DCD      0x00000000
                  crc_32_calculated
                          DCD      0x00000000
                  crc_32_file
                          DCD      0x00000000
                  flash_destination
                          DCD      0x00000000
                  file_copy_source_address
                          DCD      0x00000000
                  file_copy_destination_address
                          DCD      0x00000000
                  file_copy_size
                          DCD      0x00000000
                  post_process
                          DCD      0x00000000
                  rec_bcnt
                          DCD      0x00000000
                  packet_type
                          DCD      0x00000000
                  receive_pcnt
                          DCD      0x00000000
                  rs485_timer
                          DCD      0x00000000
                  rs485_flags
                          DCD      0x00000000
                  rs485_sender_address
                          DCD      0x00000000
                  rs485_packet_data_lenght
                          DCD      0x00000000
                  rs485_packet_checksum
                          DCD      0x00000000
                  receiving_errors
                          DCD      0x00000000

                          AREA ||area_number.14||, DATA, ALIGN=0

                          EXPORTAS ||area_number.14||, ||.data||
                  fw_update_status
000000  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\Src\\rs485.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_rs485_c_3a0b3f21____REV16|
#line 441 "C:\\Keil\\ARM\\PACK\\ARM\\CMSIS\\5.0.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___7_rs485_c_3a0b3f21____REV16| PROC
#line 442

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_rs485_c_3a0b3f21____REVSH|
#line 456
|__asm___7_rs485_c_3a0b3f21____REVSH| PROC
#line 457

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___7_rs485_c_3a0b3f21____RRX|
#line 643
|__asm___7_rs485_c_3a0b3f21____RRX| PROC
#line 644

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
